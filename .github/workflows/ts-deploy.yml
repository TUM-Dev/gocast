name: Deploy to Test Server

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: test
        run: | 
          echo "$GITHUB_CONTEXT"
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/joschahenningsen/tum-live/test-server
          tags: |
            type=sha
          flavor: |
            latest=true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        with:
          context: .
          pull: true
          push: true
          build-args: version=${{ steps.vars.outputs.sha_short }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Docker meta
        id: metaWorker
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/joschahenningsen/tum-live/test-worker
          tags: |
            type=sha
          flavor: |
            latest=true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        with:
          context: worker
          pull: true
          push: true
          build-args: version=${{ steps.vars.outputs.sha_short }}
          tags: ${{ steps.metaWorker.outputs.tags }}
          labels: ${{ steps.metaWorker.outputs.labels }}
      - name: Pull new Container
        run: |
          echo ${{ steps.meta.outputs.tags }} && echo ${{ github.event.number }}
      - name: remove label
        uses: actions-ecosystem/action-remove-labels@v1
        with:
          labels: testserver