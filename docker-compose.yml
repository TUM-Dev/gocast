version: "3.8"

services:
  tum-live:
    container_name: tum-live
    depends_on:
      - db
    build: .
    ports:
      - "8081:8081"
    volumes:
      - ./config.yaml:/etc/TUM-Live/config.yaml
      - ./branding/branding.yaml:/etc/TUM-Live/branding.yaml
      - mass:/mass
    restart: always
    environment:
      - DBHOST=db
      - TZ=Europe/Berlin
  worker:
    container_name: tum-live-worker
    depends_on:
      - tum-live
      - vod-service
    build: worker
    platform: linux/amd64
    environment:
      - Token=abc
      - Host=worker
      - MainBase=tum-live
      - VodURLTemplate=http://localhost:8089/vod/%s.mp4/playlist.m3u8
      - LrzUploadUrl=http://vod-service:8089
      - DEBUG-MODE=true
    volumes:
      - recordings:/recordings
      - mass:/mass
  edge:
    container_name: tum-live-edge
    depends_on:
      - tum-live
    build: worker/edge
    environment:
      - VOD_DIR=/vod
      - MAIN_INSTANCE=http://tum-live:8081
    ports:
      - "8089:8089"
    volumes:
      - recordings:/recordings
      - vod:/vod
  vod-service:
    container_name: tum-live-vod-service
    depends_on:
      - tum-live
    build: vod-service
    environment:
      - OUTPUT_DIR=/vod
    volumes:
      - vod:/vod
  db:
    container_name: mariadb_container
    image: mariadb
    environment:
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: example
      TZ: Europe/Berlin
    command: --init-file /data/application/init.sql
    volumes:
      - ./init.sql:/data/application/init.sql
      - mariadb-data:/var/lib/mysql
    restart: always
  voice-service:
    container_name: tum-live-voice-service
    image: ghcr.io/tum-dev/tum-live-voice-service:latest
    environment:
      - TRANSCRIBER=whisper
      - WHISPER_MODEL=tiny
      - MAX_WORKERS=10
      - DEBUG=1
    volumes:
      - mass:/mass

volumes:
  recordings:
  mass:
  vod:
  mariadb-data:
