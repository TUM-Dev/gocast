<!DOCTYPE html>
<html lang="en" class="h-full dark">
{{- /*gotype: github.com/joschahenningsen/TUM-Live/web.WatchPageData*/ -}}
<head>
    <meta charset="UTF-8">
    {{$stream := .IndexData.TUMLiveContext.Stream}}
    {{$course := .IndexData.TUMLiveContext.Course}}
    <title>{{.IndexData.Branding.Title}} | {{$course.Name}}: {{$stream.Name}}</title>
    {{template "headImports" .IndexData.VersionTag}}
    <script>window.HELP_IMPROVE_VIDEOJS = false;</script>
    <script src="/static/assets/ts-dist/watch.bundle.js?v={{.IndexData.VersionTag}}"></script>
    <link rel="stylesheet" href="/static/node_modules/video.js/dist/video-js.min.css">
    <link rel="stylesheet" href="/static/node_modules/videojs-seek-buttons/dist/videojs-seek-buttons.css">
    <link rel="stylesheet" href="/static/node_modules/@silvermine/videojs-airplay/dist/silvermine-videojs-airplay.css">
    {{/* Remove this when using KaTeX in other locations than the chat */}}
    {{if $stream.ChatEnabled}}
        <link rel="stylesheet" href="/static/node_modules/katex/dist/katex.min.css">
        <script defer src="/static/node_modules/katex/dist/katex.js"></script>
        <script defer src="/static/node_modules/katex/dist/contrib/auto-render.min.js"></script>
        <script defer src="/static/node_modules/katex/dist/contrib/copy-tex.min.js"></script>
    {{end}}
</head>
<body x-data="{'streamID': {{$stream.Model.ID}}, 'showChat': $persist(false).as('chatOpen'), seekLogger: new watch.SeekLogger('{{$stream.ID}}'), showBookmarks: false, showShare: false}"
      @keypress.shift.window="(e) => watch.onShift(e)"
      x-init="watch.startWebsocket(); seekLogger.attach();">
{{template "header" .IndexData.TUMLiveContext}}
<div id="shortcuts-help-modal" class="hidden flex absolute top-0 h-screen w-screen z-50 backdrop-brightness-50">
    <div class="m-auto" @click.outside="watch.toggleShortcutsModal();">
        {{template "shortcuts"}}
    </div>
</div>
<div x-cloak x-show="showShare"
     id="share-modal" class="flex absolute top-0 h-screen w-screen z-50 backdrop-brightness-50">
    <div class="m-auto lg:w-1/2 w-3/4" @click.outside="showShare=false">
        <div class="bg-white dark:bg-secondary-light border dark:border-gray-800 rounded-lg">
            <div class="flex justify-between items-center px-3 pt-3 pb-1">
                <h3 class="text-3 text-sm font-semibold">Share</h3>
                <button type="button" title="Close share modal"
                        @click="showShare=false">
                    <i class="fa-solid fa-xmark text-3"></i>
                </button>
            </div>
            <div class="pt-1 pb-3 px-3 mt-3" x-data="{share: new watch.ShareURL()}">
                <span class="font-light text-xs mb-1 text-4">URL</span>
                <div class="flex items-center justify-between tl-input text-sm">
                    <input id="share-url" type="text"
                           class="bg-transparent outline-0 border-0 text-left text-5 grow" :value="share.url" disabled>
                    <button type="button" @click="share.copyURL()"
                            class="text-xs text-white rounded-full px-3 py-1 h-fit w-fit bg-blue-500 dark:bg-indigo-600 hover:bg-blue-600 dark:hover:bg-indigo-700">
                        <i class="fa-solid mr-2" :class="share.copied ? 'fa-check' : 'fa-clipboard'"></i>
                        <span x-text="share.copied ? 'Copied' : 'Copy'"></span>
                    </button>
                </div>
                {{if not $stream.LiveNow}}
                        <!-- $nextTick does not work in watch. Therefore, @change.once has to be used. -->
                        <div x-init="$watch('showShare', async value => { if (value) { await share.setURL(true); }});"
                             class="flex justify-start items-center pt-2">
                        <input id="include-timestamp" type="checkbox" class="h-8 hover:cursor-pointer"
                               x-model="share.includeTimestamp" @change="share.setURL(false)">
                        <label for="include-timestamp" class="font-light text-4 text-xs ml-2">Include Timestamp</label>
                        <input x-cloak x-show="share.includeTimestamp" class="tl-input h-8 w-20 text-xs ml-2"
                               type="text" x-model="share.timestamp" @input="share.setURL(false);">
                    </div>
                {{end}}
            </div>
        </div>
    </div>
</div>
<div id="bookmarks-mobile" x-cloak="" x-show="showBookmarks"
     class="md:hidden flex absolute top-0 h-screen w-screen z-50 backdrop-brightness-50">
    <div @click.outside="showBookmarks = false"
         class="m-auto w-3/4 h-96 bg-white dark:bg-secondary-light border dark:border-gray-800 rounded-lg">
        {{template "bookmarks-modal" $stream.ID}}
    </div>
</div>
<div id="watchPageMainWrapper">
    <input type="hidden" id="streamID" value="{{$stream.Model.ID}}">
    <div class="flex flex-wrap shadow border bg-white dark:bg-secondary dark:shadow-0 dark:border-0">
        <div id="watchWrapper"
             x-data="{ 'chatEnabled': {{and $course.ChatEnabled $stream.ChatEnabled}} }"
             class="relative basis-full lg:order-none order-1 sticky top-0 lg:relative z-40"
             :class="(showChat && chatEnabled) || showBookmarks ? 'lg:basis-3/4 lg:h-16/6 h-16/9' : 'lg:basis-full h-16/9'">
            <noscript>
                <p class="vjs-no-js">To view this video please enable JavaScript.</p>
            </noscript>
            <div id="watchContent"
                 x-data="{ contextMenu: { shown: false, locX: 0, locY: 0 }, videoStatsShown: false }"
                 class="grow w-full h-full">

                <!-- info messages -->
                <div x-data="{ showliveended: false }"
                     class="bg-red-700 bg-opacity-20 p-2 w-full font-semibold text-2"
                     x-show="showliveended" @streamended.window="showliveended=true" x-cloak>
                    <i class="fas fa-info-circle"></i> This livestream has ended.
                </div>
                {{if (eq .Version "SPLIT")}}
                    <div x-data="{splitView: new watch.SplitView()}" @mouseleave="splitView.hideMenu()" class="group relative flex w-full h-full">
                        <div class="hidden group-hover:flex absolute left-1 top-1 z-40">
                            <button x-cloak x-show="!splitView.showSplitMenu" @click="splitView.toggleMenu()"
                                    class="flex items-center justify-center w-8 h-8 rounded-full"
                                    title="Adjust split ratio">
                                <i class="text-lg text-white fa-solid fa-ellipsis-vertical"></i>
                            </button>
                            <div x-cloak x-show="splitView.showSplitMenu" @click.outside="splitView.toggleMenu()"
                                 class="bg-white border rounded-lg shadow h-fit dark:bg-secondary-light dark:border-gray-600">
                                <div class="py-2">
                                    <button @click="splitView.update(watch.SplitView.Options.FullPresentation)"
                                            class="text-left flex justify-start items-center w-full text-3 px-4 py-1 hover:bg-gray-200 dark:hover:bg-gray-600">
                                        <i class="fa-solid fa-person-chalkboard w-16"></i>
                                        <span class="font-light text-sm">Full presentation</span>
                                    </button>
                                    <button @click="splitView.update(watch.SplitView.Options.FocusPresentation)"
                                            class="text-left flex justify-start items-center w-full text-3 px-4 py-1 hover:bg-gray-200 dark:hover:bg-gray-600">
                                            <span class="flex items-center align-middle w-16">
                                                <i class="fa-solid fa-person-chalkboard"></i>
                                                <span class="px-1 text-5">/</span>
                                                <i class="fa-solid fa-camera text-tiny"></i>
                                            </span>
                                        <span class="font-light text-sm">Focus presentation</span>
                                    </button>
                                    <button @click="splitView.update(watch.SplitView.Options.SplitEvenly)"
                                            class="text-left flex justify-start items-center w-full text-3 px-4 py-1 hover:bg-gray-200 dark:hover:bg-gray-600">
                                        <i class="fa-solid fa-table-columns w-16"></i>
                                        <span class="font-light text-sm">Split evenly</span>
                                    </button>
                                    <button @click="splitView.update(watch.SplitView.Options.FocusCamera)"
                                            class="text-left flex justify-start items-center w-full text-3 px-4 py-1 hover:bg-gray-200 dark:hover:bg-gray-600">
                                            <span class="flex items-center align-middle w-16">
                                                <i class="fa-solid fa-person-chalkboard text-tiny"></i>
                                                 <span class="px-1 text-5">/</span>
                                                <i class="fa-solid fa-camera"></i>
                                            </span>
                                        <span class="font-light text-sm">Focus camera</span>
                                    </button>
                                    <button @click="splitView.update(watch.SplitView.Options.FullCamera)"
                                            class="text-left flex justify-start items-center w-full text-3 px-4 py-1 hover:bg-gray-200 dark:hover:bg-gray-600">
                                        <i class="fa-solid fa-camera w-16"></i>
                                        <span class="font-light text-sm">Full camera</span>
                                    </button>
                                </div>
                            </div>
                        </div>
                        {{/* presentation player */}}
                        <div id="video-pres-wrapper">
                            <video-js
                                    id="video-pres"
                                    class="video-js h-full w-full"
                                    controls
                                    preload="auto"
                                    x-on:contextmenu="contextMenu = watch.contextMenuHandler($event, contextMenu, $el);"
                                    {{if or .IndexData.TUMLiveContext.Stream.LiveNow .IndexData.TUMLiveContext.Stream.Recording}}poster="/public/default_banner.jpg">
                                {{else}}poster="/public/no_active_stream.jpg">{{end}}
                                {{if or .IndexData.TUMLiveContext.Stream.LiveNow .IndexData.TUMLiveContext.Stream.Recording}}
                                    {{if not $stream.LiveNow}}
                                        <source src="{{$stream.PlaylistUrlPRES}}{{if .Unit}}?wowzaplaystart={{.Unit.UnitStart}}&wowzaplayduration={{.Unit.GetUnitDurationMS}}{{else if $stream.StartOffset}}?wowzaplaystart={{$stream.StartOffset}}&wowzaplayduration={{$stream.EndOffset}}{{end}}"
                                                type="application/x-mpegURL"/>
                                    {{else}}
                                        <source src="{{$stream.PlaylistUrlPRES}}{{.DVR}}" type="application/x-mpegURL"/>
                                    {{end}}
                                {{end}}
                                <p class="vjs-no-js">
                                    To view this video please enable JavaScript.
                                </p>
                            </video-js>
                        </div>

                        {{/* camera player */}}
                        <div id="video-cam-wrapper">
                            <video-js
                                    id="video-cam"
                                    class="video-js h-full w-full"
                                    controls
                                    preload="auto"
                                    x-on:contextmenu="contextMenu = watch.contextMenuHandler($event, contextMenu, $el);"
                                    {{if or .IndexData.TUMLiveContext.Stream.LiveNow .IndexData.TUMLiveContext.Stream.Recording}}poster="/public/default_banner.jpg">
                                {{else}}poster="/public/no_active_stream.jpg">{{end}}
                                {{if or .IndexData.TUMLiveContext.Stream.LiveNow .IndexData.TUMLiveContext.Stream.Recording}}
                                    {{if not $stream.LiveNow}}
                                        <source src="{{$stream.PlaylistUrlCAM}}{{if .Unit}}?wowzaplaystart={{.Unit.UnitStart}}&wowzaplayduration={{.Unit.GetUnitDurationMS}}{{else if $stream.StartOffset}}?wowzaplaystart={{$stream.StartOffset}}&wowzaplayduration={{$stream.EndOffset}}{{end}}"
                                                type="application/x-mpegURL"/>
                                    {{else}}
                                        <source src="{{$stream.PlaylistUrlCAM}}{{.DVR}}" type="application/x-mpegURL"/>
                                    {{end}}
                                {{end}}
                                <p class="vjs-no-js">
                                    To view this video please enable JavaScript.
                                </p>
                            </video-js>
                        </div>
                    </div>
                {{else}}
                    {{/*combined player*/}}
                    <video-js
                            id="video-comb"
                            class="video-js w-full h-full"
                            controls
                            preload="auto"
                            x-on:contextmenu="contextMenu = watch.contextMenuHandler($event, contextMenu, $el);"
                            {{if or .IndexData.TUMLiveContext.Stream.LiveNow .IndexData.TUMLiveContext.Stream.Recording}}poster="/public/default_banner.jpg">
                        {{else}}poster="/public/no_active_stream.jpg">{{end}}
                        {{if or .IndexData.TUMLiveContext.Stream.LiveNow .IndexData.TUMLiveContext.Stream.Recording}}
                            {{if not $stream.LiveNow}}
                                <source src="{{if eq .Version "PRES"}}{{$stream.PlaylistUrlPRES}}{{else if eq .Version "CAM"}}{{$stream.PlaylistUrlCAM}}{{else}}{{$stream.PlaylistUrl}}{{end}}{{if .Unit}}?wowzaplaystart={{.Unit.UnitStart}}&wowzaplayduration={{.Unit.GetUnitDurationMS}}{{else if $stream.StartOffset}}?wowzaplaystart={{$stream.StartOffset}}&wowzaplayduration={{$stream.EndOffset}}{{end}}"
                                        type="application/x-mpegURL"/>
                            {{else}}
                                {{if eq .Version "CAM"}}
                                    <source src="{{$stream.PlaylistUrlCAM}}{{.DVR}}" type="application/x-mpegURL"/>
                                {{else if eq .Version "PRES"}}
                                    <source src="{{$stream.PlaylistUrlPRES}}{{.DVR}}" type="application/x-mpegURL"/>
                                {{else}}
                                    <source src="{{$stream.PlaylistUrl}}{{.DVR}}" type="application/x-mpegURL"/>
                                {{end}}
                            {{end}}
                        {{end}}
                        <p class="vjs-no-js">
                            To view this video please enable JavaScript.
                        </p>
                    </video-js>
                {{end}}

                <div
                        x-cloak
                        x-show="contextMenu.shown"
                        x-data="{share: new watch.ShareURL()}"
                        @click.outside="contextMenu = {...contextMenu, shown: false}"
                        class="origin-top-left absolute w-72 py-2 bg-gray-800/[.9] border-gray-100 border-1 rounded text-white text-sm"
                        :style="{ top: contextMenu.locY + 'px', left: contextMenu.locX + 'px' }"
                        role="menu" aria-orientation="vertical" tabindex="-1">
                    <button @click="contextMenu = {...contextMenu, shown: false}; videoStatsShown = true; watch.videoStatListener.listen();"
                            class="tl-context-entry">
                        Show detailed stats
                    </button>
                    <button @click="contextMenu = {...contextMenu, shown: false};share.includeTimestamp=false;await share.setURL();share.copyURL()"
                            class="tl-context-entry">
                        Copy URL
                    </button>
                    {{if not $stream.LiveNow}}
                        <button @click="contextMenu = {...contextMenu, shown: false};share.includeTimestamp=true;await share.setURL();share.copyURL()"
                                class="tl-context-entry">
                            Copy URL at current time
                        </button>
                    {{end}}
                </div>

                <div
                        x-cloak
                        x-data="{ data: { bufferSeconds: 0, videoHeight: 0, videoWidth: 0, bandwidth: 0, mediaRequests: 0, mediaRequestsFailed: 0 } }"
                        x-show="videoStatsShown"
                        x-on:newvideostats.window="e => { data = e.detail }"
                        class="origin-top-left absolute w-72 p-4 bg-gray-800/[.9] border-gray-100 border-1 rounded text-white text-sm"
                        :style="{ top: '5px', left: '5px' }"
                        role="menu" aria-orientation="vertical" tabindex="-1">
                    <div class="flex justify-between align-middle pb-4">
                        <h3>Video Stats</h3>
                        <button class="px-2 text-l"
                                @click="watch.videoStatListener.clear(); videoStatsShown = false;">
                            <i class="fas fa-close"></i>
                        </button>
                    </div>
                    <div class="flex justify-between align-middle">
                        <div>
                            <div>Resolution:</div>
                            <div>Bandwidth:</div>
                        </div>
                        <div class="pr-4">
                            <div class="text-right" x-text="`${data.videoWidth}x${data.videoHeight}`"></div>
                            <div class="text-right"
                                 x-text="Math.round(data.bandwidth / 1000000) + ' MBit/s'"></div>
                        </div>
                    </div>
                    <br>
                    <div>Buffer:</div>
                    <div class="flex justify-between align-middle">
                        <div>
                            <div class="pl-2">> Buffered Time:</div>
                            <div class="pl-2">> Chunks Requested:</div>
                            <div class="pl-2">> Requests Failed:</div>
                        </div>
                        <div class="pr-4">
                            <div class="text-right"
                                 x-text="(Math.round(data.bufferSeconds * 100) / 100) + 's'"></div>
                            <div class="text-right" x-text="data.mediaRequests"></div>
                            <div class="text-right" x-text="data.mediaRequestsFailed"></div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
        <!-- Chat -->
        {{if and $course.ChatEnabled $stream.ChatEnabled}}
            <div x-show="showChat"
                 :class="showChat ? 'lg:basis-1/4' : 'lg:basis-0'"
                 class="z-20 basis-full order-3 border rounded p-1 mx-5 bg-gray-100 dark:bg-gray-800 dark:border-0 lg:h-16/6 h-96
                        lg:border-0 lg:shadow lg:order-none lg:mx-0 lg:p-0 lg:bg-transparent">
                <div id="chat-box" class="bg-white rounded lg:bg-transparent md:rounded-0 dark:bg-secondary h-full">
                    {{template "chat" .ChatData}}
                </div>
            </div>
        {{end}}

        <!-- Bookmarks -->
        <div id="bookmarks-desktop" x-cloak="" x-show="showBookmarks"
             :class="showBookmarks ? 'lg:basis-1/4' : 'lg:basis-0'"
             class="hidden md:block basis-full h-96 lg:h-16/6 px-5 md:px-2 md:pt-2 lg:order-none order-5">
            {{template "bookmarks-modal" $stream.ID}}
        </div>

        <!-- stream info container -->
        <!-- Title, course name, actions -->
        <div class="basis-full relative order-2 p-5 lg:order-none">
            <div class="flex justify-between align-middle border-b dark:border-gray-800 pb-2 lg:border-0">
                <!-- title and course-name -->
                <div class="grid mb-auto shrink">
                    <h1 class="font-bold text-4 text-lg grow lg:text-2xl"
                        @titleupdate.window="$el.innerText=$event.detail.title">
                        {{if $stream.Name}}
                            {{$stream.Name}}
                        {{else}}
                            Lecture: {{$stream.Start.Month}} {{printf "%02d." $stream.Start.Day}} {{$stream.Start.Year}}
                        {{end}}
                    </h1>
                    <div class="flex justify-between flex-col sm:flex-row text-sm lg:text-base">
                        <div class="flex my-auto">
                            <a href="/course/{{$course.Year}}/{{$course.TeachingTerm}}/{{$course.Slug}}">
                                <span class="text-5 hover:text-1 hover:underline">{{$course.Name}}</span></a>
                        </div>

                    </div>
                    {{if not $stream.Recording}}
                        {{template "watch-info" .}}
                    {{end}}
                </div>

                <!-- Desktop stream info-->
                <div class="grid gap-3 shrink-0">
                    <div class="space-x-2 text-lg text-4 hidden md:inline-flex shrink-0 my-auto">
                        {{if or (.IndexData.TUMLiveContext.User.IsAdminOfCourse .IndexData.TUMLiveContext.Course) .IndexData.IsAdmin}}
                            <a class="rounded-lg px-3 py-2 h-fit w-fit bg-gray-100 hover:bg-gray-200 dark:bg-secondary-light dark:hover:bg-gray-600"
                               href="/admin/course/{{$course.Model.ID}}#lecture-li-{{$stream.Model.ID}}"
                               :title="'Edit course settings'">
                                <i class="fa-solid fa-pen text-4"></i>
                            </a>
                        {{end}}

                        {{if .IndexData.TUMLiveContext.User}}
                            <button @click="showChat = false; showBookmarks = !showBookmarks"
                                    class="rounded-lg px-4 py-2 h-fit w-fit bg-gray-100 hover:bg-gray-200 dark:bg-secondary-light dark:hover:bg-gray-600"
                                    :title="'New Bookmark'">
                                <i class="fa-solid fa-bookmark text-4"></i>
                            </button>
                        {{end}}

                        <button @click="showShare = true;"
                                class="rounded-lg px-4 py-2 h-fit w-fit bg-gray-100 hover:bg-gray-200 dark:bg-secondary-light dark:hover:bg-gray-600"
                                :title="'Share'">
                            <i class="fa-solid fa-share text-4"></i>
                        </button>

                        <!-- Actions-->
                        {{template "actions" .}}

                        <!-- Desktop Open Chat -->
                        {{if and $course.ChatEnabled $stream.ChatEnabled}}
                            <button @click="showBookmarks = false;showChat = !showChat;"
                                    title="Open Chat"
                                    :class="showChat ? 'bg-gray-200 hover:bg-gray-100 dark:bg-gray-600 dark:hover:bg-secondary' : 'bg-gray-100 hover:bg-gray-200 dark:bg-secondary-light dark:hover:bg-gray-600'"
                                    class="rounded-lg px-3 py-2 h-fit w-fit">
                                <i class="fa-solid fa-comments text-4"></i>
                            </button>
                        {{end}}
                    </div>
                </div>
            </div>

            <!-- Mobile stream info -->
            <div class="md:hidden flex justify-between mt-5 text-3">
                <div class="flex">
                    {{if or (.IndexData.TUMLiveContext.User.IsAdminOfCourse .IndexData.TUMLiveContext.Course) .IndexData.IsAdmin}}
                        <a class="rounded-lg px-3 py-2 w-fit bg-gray-100 hover:bg-gray-200 dark:bg-secondary-light dark:hover:bg-gray-600 mr-2"
                           href="/admin/course/{{$course.Model.ID}}#lecture-li-{{$stream.Model.ID}}"
                           :title="'Edit course settings'">
                            <i class="fa-solid fa-pen text-4"></i>
                        </a>
                    {{end}}

                    {{if .IndexData.TUMLiveContext.User}}
                        <button @click="showChat = false; showBookmarks = !showBookmarks"
                                class="rounded-lg px-4 py-2 h-fit w-fit bg-gray-100 hover:bg-gray-200 dark:bg-secondary-light dark:hover:bg-gray-600 mr-2"
                                :title="'New Bookmark'">
                            <i class="fa-solid fa-bookmark text-4"></i>
                        </button>
                    {{end}}

                    {{template "actions" .}}
                </div>

                {{if and $course.ChatEnabled $stream.ChatEnabled}}
                    <!-- Mobile Open Chat -->
                    <button @click="showBookmarks = false;showChat = !showChat;"
                            title="Open Chat"
                            :class="showChat ? 'bg-gray-200 hover:bg-gray-100 dark:bg-gray-600 dark:hover:bg-secondary' : 'bg-gray-100 hover:bg-gray-200 dark:bg-secondary-light dark:hover:bg-gray-600'"
                            class="rounded-lg px-3 py-2 w-fit">
                        <i class="fa-solid fa-comments text-4"></i>
                    </button>
                {{end}}
            </div>
        </div>
        {{if and .IsAdminOfCourse}}
            <!-- Admin control buttons -->
            <div class="w-full p-5 lg:order-none order-4">
                <h3 class="text-4 font-semibold border-b dark:border-gray-800 mb-3">Admin</h3>
                <div class="md:space-x-2 lg:space-y-0 space-y-2 w-full">
                    {{/* Lecture hall is set, means no self-stream*/}}
                    {{if $stream.LiveNow}}
                        {{if $stream.LectureHallID}}
                            <button @click="fetch(`/api/stream/${streamID}/pause?pause=${!paused}`).then(paused=!paused)"
                                    href="#"
                                    :title="paused?'End Pause (turns on video and audio)':'Pause lecture (turns off video and audio)'"
                                    class="bg-green-500 text-center lg:w-32 md:w-24 md:inline-block block w-full text-white font-bold hover:bg-green-600 dark:hover:bg-green-600 rounded cursor-pointer p-2">
                                <span x-show="!paused"><i class="fas fa-pause mr-1"></i>Pause</span>
                                <span x-show="paused"><i class="fas fa-play mr-1"></i>Resume</span>
                            </button>
                            <button @click="window.location.href='?restart=1'"
                                    title="Issues with the stream? Restart it."
                                    class="bg-indigo-500 text-center lg:w-32 md:w-24 md:inline-block block w-full text-white font-bold hover:bg-indigo-600 dark:hover:bg-indigo-600 rounded cursor-pointer p-2">
                                <i class="fas fa-redo mr-1"></i>Restart
                            </button>
                            <button @click="$dispatch('stop')"
                                    title="Already finished? End the stream early."
                                    class="bg-red-500 text-center lg:w-32 md:w-24 md:inline-block block w-full text-white hover:bg-red-600 font-bold dark:hover:bg-red-600 rounded cursor-pointer p-2">
                                <i class="fas fa-power-off mr-1"></i>Stop
                            </button>
                        {{end}}
                        {{if .AlertsEnabled}}
                            <button @click="$dispatch('issue');location.href='#';location.href='#alertModal'"
                                    title="Issues with the stream? Send a report to the RGB."
                                    class="bg-amber-500 text-center md:w-28 md:inline-block block lg:w-32 {{if $stream.LectureHallID}}md:float-right{{end}} w-full text-white font-bold hover:bg-amber-700 dark:hover:bg-amber-700 rounded cursor-pointer p-2">
                                <i class="fas fa-exclamation-triangle mr-1"></i>Problem
                            </button>
                        {{end}}
                    {{end}}
                </div>
            </div>
            {{if and .Presets $stream.LiveNow}}
                <div class="w-full px-5 order-3">
                    <h3 class="text-4 font-semibold border-b dark:border-gray-800 mb-3">Presets</h3>
                    <div class="w-full overflow-x-scroll scrollbarThin">
                        <div class="flex flex-row gap-x-2 pb-4 pl-2">
                            {{range $preset := .Presets}}
                                <div style="min-width: 150px" class="text-center relative group">
                                    <img id="presetImage{{$preset.LectureHallID}}-{{$preset.PresetID}}"
                                         src="/public/{{if $preset.Image}}{{$preset.Image}}{{else}}noPreset.jpg{{end}}"
                                         alt="prev" width="150px"
                                         class="border-1 dark:border-slate-400 border-slate-500 rounded-lg">
                                    <i onclick="watch.usePreset({{$course.Model.ID}}, {{$preset.LectureHallID}}, {{$preset.PresetID}})"
                                       title="Switch to this preset"
                                       class="opacity-0 group-hover:opacity-100 absolute top-1 right-1 p-1 rounded text-white bg-info fas fa-exchange-alt cursor-pointer"></i>
                                </div>
                            {{end}}
                        </div>
                    </div>
                </div>
            {{end}}
        {{end}}

        <div class="flex flex-col lg:flex-row basis-full order-5">
            <!-- Video Sections -->
            {{if $stream.VideoSections}}
                <div class="lg:basis-1/2 p-5 order-5 lg:order-none">
                    {{template "videosections" $stream}}
                </div>
            {{end}}
        </div>


        <!-- Video description -->
        {{$less := gt (len .Description) .CutOffLength}}
        {{if gt (len .Description) 0}}
            <div x-data="{ less: {{$less}}, toggleDesc: true }"
                    {{/* Update less on update */}}
                 @descriptionupdate.window="toggleDesc = less = $event.detail.description.full.length > {{.CutOffLength}};"
                 class="video-description flex-grow p-5 lg:mx-2 basis-full lg:order-none order-4">
                <div class="flex justify-between border-b mb-1 dark:border-gray-800 lg:justify-start">
                    <h3 class="text-4 font-semibold">Description</h3>
                </div>
                <div>
                    <div class="rounded-lg bg-gray-50 hover:bg-gray-100 dark:bg-secondary-light hover:dark:bg-gray-600 text-3 text-sm">
                        <button @click="toggleDesc = !toggleDesc;"
                                :disabled="!less"
                                class="p-2 w-full text-left"
                                :class="less && 'hover:cursor-pointer'">
                        <span class="block overflow-y-clip"
                              :class="(less && toggleDesc) ? 'h-8' : 'h-auto'"
                              @descriptionupdate.window="$el.innerHTML=$event.detail.description.full">
                            {{.Description}}
                        </span>
                        </button>
                        <template x-if="less">
                            <button class="font-semibold m-1 py-1 px-2 rounded-full hover:bg-gray-200 dark:hover:bg-gray-600"
                                    x-text="toggleDesc ? 'Show more' : 'Show less'"
                                    @click="toggleDesc = !toggleDesc;"></button>
                        </template>
                    </div>
                </div>
            </div>
        {{end}}

        <!-- Modal when stopping a stream -->
        <div class="inline-block" x-data="{ 'showModal': false }"
             @stop.window="showModal=true"
             @keydown.escape="showModal = false" x-cloak x-show="showModal">
            <section class="flex flex-wrap h-full">
                <div class="overflow-auto" x-show="showModal"
                     :class="{ 'absolute inset-0 z-10 flex items-center justify-center': showModal }">
                    <div class="dark:bg-secondary-light bg-gray-200 text-3 absolute transform -translate-x-1/2 -translate-y-1/2 left-1/2 top-1/2 w-auto md:max-w-md mx-auto rounded shadow-lg py-4 text-left
                        px-6"
                         @click.away="showModal = false">
                        <!--Title-->
                        <div class="flex justify-between pb-3">
                            <p class="text-2 font-bold">Keep the recording after ending the stream?</p>
                        </div>
                        <!--Footer-->
                        <div class="flex justify-start pt-2">
                            <button class="bg-green-500 inline-block text-center w-24 text-white hover:bg-green-600 dark:hover:bg-green-600 font-bold rounded cursor-pointer p-1 mr-3"
                                    @click="fetch(`/api/stream/${streamID}/end?discard=${false}`).then(showModal=false)">
                                Yes
                            </button>
                            <button class="bg-red-500 inline-block text-center w-24 text-white hover:bg-red-600 dark:hover:bg-red-600 font-bold rounded cursor-pointer p-1 mr-3"
                                    @click="fetch(`/api/stream/${streamID}/end?discard=${true}`).then(showModal=false)">
                                No
                            </button>
                            <button class="bg-gray-500 inline-block text-center w-24 text-white hover:bg-gray-600 dark:hover:bg-gray-600 font-bold rounded cursor-pointer p-1"
                                    @click="showModal = false">Cancel
                            </button>
                        </div>
                    </div>
                </div>
            </section>
        </div>
        {{if .AlertsEnabled}}
            {{template "alert-modal" . }}
        {{end}}
        {{if .IsHighlightPage}}
            <ul class="w-full m-auto mb-4">
                {{template "course_list" .IndexData.TUMLiveContext}}
            </ul>
        {{end}}
    </div>
</div>
<script>
    {{if (eq .Version "SPLIT")}}

    {{if $stream.Recording}}
    watch.initPlayer("video-pres", true, false, false, {{.IndexData.TUMLiveContext.User.GetPlaybackSpeeds.GetEnabled}}, {{$stream.LiveNow}}, {{$stream.GetThumbIdForSource .Version}}, {{$stream.ThumbInterval}}, {{$stream.Model.ID}});
    watch.initPlayer("video-cam", true, false, false, {{.IndexData.TUMLiveContext.User.GetPlaybackSpeeds.GetEnabled}}, {{$stream.LiveNow}}, {{$stream.GetThumbIdForSource .Version}}, {{$stream.ThumbInterval}}, {{$stream.Model.ID}});
    watch.watchProgress({{$stream.Model.ID}}, {{ .Progress.Progress }}, {{not (empty .IndexData.TUMLiveContext.User)}});
    {{else}}
    watch.initPlayer("video-pres", true, false, false, {{.IndexData.TUMLiveContext.User.GetPlaybackSpeeds.GetEnabled}}, {{$stream.LiveNow}});
    watch.initPlayer("video-cam", true, false, false, {{.IndexData.TUMLiveContext.User.GetPlaybackSpeeds.GetEnabled}}, {{$stream.LiveNow}});
    {{end}}

    watch.syncPlayers();

    {{else}}

    {{if $stream.Recording}}
    watch.initPlayer("video-comb", true, false, false, {{.IndexData.TUMLiveContext.User.GetPlaybackSpeeds.GetEnabled}}, {{$stream.LiveNow}}, {{$stream.GetThumbIdForSource .Version}}, {{$stream.ThumbInterval}}, {{$stream.Model.ID}});
    watch.watchProgress({{$stream.Model.ID}}, {{ .Progress.Progress }}, {{not (empty .IndexData.TUMLiveContext.User)}});
    {{else}}
    watch.initPlayer("video-comb", true, false, false, {{.IndexData.TUMLiveContext.User.GetPlaybackSpeeds.GetEnabled}}, {{$stream.LiveNow}});
    {{end}}

    {{end}}

    {{if $stream.Silences}}
    watch.skipSilence({{$stream.GetSilencesJson}});
    {{end}}
</script>
</body>
</html>
