<!DOCTYPE html>
<html lang="en" class="h-full dark">
{{- /*gotype: TUM-Live/web.WatchPageData*/ -}}
<head>
    <meta charset="UTF-8">
    {{$stream := .IndexData.TUMLiveContext.Stream}}
    {{$course := .IndexData.TUMLiveContext.Course}}
    <title>{{$course.Name}}: {{$stream.Name}} | TUM Live</title>
    {{template "headImports" .IndexData.VersionTag}}
    <script>window.HELP_IMPROVE_VIDEOJS = false;</script>
    <link rel="stylesheet" href="/static/node_modules/video.js/dist/video-js.min.css">
    <link rel="stylesheet" href="/static/node_modules/videojs-seek-buttons/dist/videojs-seek-buttons.css">
    {{if .IsAdminOfCourse}}
    <script async src="/static/assets/ts-dist/watch-admin.js?v={{.IndexData.VersionTag}}"></script>{{end}}
</head>
<body class="h-full overflow-hidden" x-data="{'paused': {{$stream.Paused}}, 'streamID': {{$stream.Model.ID}}}"
      x-on:pausestart.window="paused=true"
      x-on:pauseend.window="paused=false">{{template "header" .IndexData.TUMLiveContext}}
<div id="watchPageMainWrapper" class="flex md:flex-row w-full flex-wrap">
    <input type="hidden" id="streamID" value="{{$stream.Model.ID}}">
    <div id="watchWrapper"
         class="w-full {{if $course.ChatEnabled}}md:w-4/6 lg:w-5/6{{end}} overflow-scroll overflow-x-hidden scrollbarThin">
        <noscript><p class="vjs-no-js">
                To view this video please enable JavaScript.
            </p></noscript>
        <div id="watchContent"
             class="transition-all motion-reduce:transition-none duration-300 ease w-full pt-3 px-2 md:px-8 {{if $course.ChatEnabled}}md:w-4/6{{end}} lg:w-8/12 2xl:max-w-screen-xl mx-auto mx:h-full">
            <div class="p-4 bg-indigo-700 bg-opacity-20 border-t-4 border-indigo-700 w-full font-semibold text-2 rounded-t display-none"
                 x-show="paused" x-cloak>
                <i class="fas fa-info-circle"></i> This lecture is currently paused.
            </div>
            <video
                    id="my-video"
                    class="video-js w-full"
                    controls
                    preload="auto"
                    {{if or .IndexData.TUMLiveContext.Stream.LiveNow .IndexData.TUMLiveContext.Stream.Recording}}poster="/public/default_banner.jpg">
                {{else}}poster="/public/no_active_stream.jpg">{{end}}
                {{if or .IndexData.TUMLiveContext.Stream.LiveNow .IndexData.TUMLiveContext.Stream.Recording}}
                    {{if not $stream.LiveNow}}
                        <source src="{{if eq .Version "PRES"}}{{$stream.PlaylistUrlPRES}}{{else if eq .Version "CAM"}}{{$stream.PlaylistUrlCAM}}{{else}}{{$stream.PlaylistUrl}}{{end}}{{if .Unit}}?wowzaplaystart={{.Unit.UnitStart}}&wowzaplayduration={{.Unit.GetUnitDurationMS}}{{else if $stream.StartOffset}}?wowzaplaystart={{$stream.StartOffset}}&wowzaplayduration={{$stream.EndOffset}}{{end}}"
                                type="application/x-mpegURL"/>
                    {{else}}
                        {{if eq .Version "CAM"}}
                            <source src="{{$stream.PlaylistUrlCAM}}" type="application/x-mpegURL"/>
                        {{else if eq .Version "PRES"}}
                            <source src="{{$stream.PlaylistUrlPRES}}" type="application/x-mpegURL"/>
                        {{else}}
                            <source src="{{$stream.PlaylistUrl}}" type="application/x-mpegURL"/>
                        {{end}}
                    {{end}}
                {{end}}
                <p class="vjs-no-js">
                    To view this video please enable JavaScript.
                </p>
            </video>
            <div class="flex justify-between align-middle mt-4">
                <h1 class="text-4 text-xl">
                    {{if $stream.Name}}{{$stream.Name}}{{else}}Lecture: {{$stream.Start.Month}} {{printf "%02d." $stream.Start.Day}} {{$stream.Start.Year}}{{end}}
                </h1>
                <p class="text-lg text-4 flex space-x-2">
                    {{if not $stream.Recording}}
                        <span class="flex m-auto" id="viewerCount"></span>
                        {{if not $stream.LiveNow}}
                            <span class="flex m-auto" id="ViewerDescText"> Waiting</span>
                            <span class="flex m-auto">&#183;</span>
                            <span class="flex m-auto" id="timer"></span>
                        {{else}}
                            <span class="flex m-auto" id="ViewerDescText"> Viewers</span>
                        {{end}}
                    {{else if (and $course.DownloadsEnabled .IndexData.TUMLiveContext.User)}}
                        {{template "downloadBtn" $stream.Files}}
                    {{end}}
                    {{if $stream.PlaylistUrlPRES}}
                        <a class="flex m-auto" title="Presentation only"
                           href="/w/{{$course.Slug}}/{{$stream.Model.ID}}/PRES"><i
                                    class="fas fa-edit hover:text-1"></i></a>
                    {{end}}
                    {{if $stream.PlaylistUrlCAM}}
                        <a class="flex m-auto" title="Camera only"
                           href="/w/{{$course.Slug}}/{{$stream.Model.ID}}/CAM"><i
                                    class="fas fa-camera hover:text-1"></i></a>
                    {{end}}
                    {{if $stream.PlaylistUrl}}
                        <a class="flex m-auto" title="Combined view" href="/w/{{$course.Slug}}/{{$stream.Model.ID}}"><i
                                    class="fas fa-object-group hover:text-1"></i></a>
                    {{end}}
                    <i title="Copy HLS URL"
                       class="flex m-auto fas fa-link text-4 dark:hover:text-white hover:text-black cursor-pointer"
                       onclick="copyToClipboard('{{if eq .Version "PRES"}}{{$stream.PlaylistUrlPRES}}{{else if eq .Version "CAM"}}{{$stream.PlaylistUrlCAM}}{{else}}{{$stream.PlaylistUrl}}{{end}}{{if .Unit}}?wowzaplaystart={{.Unit.UnitStart}}&wowzaplayduration={{.Unit.GetUnitDurationMS}}{{else if $stream.StartOffset}}?wowzaplaystart={{$stream.StartOffset}}&wowzaplayduration={{$stream.EndOffset}}{{end}}'.replaceAll('\{\{quality\}\}', ''))"></i>
                </p>
            </div>
            <a href="/course/{{$course.Year}}/{{$course.TeachingTerm}}/{{$course.Slug}}">
                <span class="text-5 hover:text-1 hover:underline text-lg">{{$course.Name}}</span></a>
            {{if and .IsAdminOfCourse (and $stream.LectureHallID $stream.LiveNow)}}
                <div class="border-t-2 border-secondary p-4">
                    <h3 class="text-4 mb-2">Administration:</h3>
                    <a href="?restart=1" title="Issues with the stream? Restart it."
                       class="bg-danger text-white rounded cursor-pointer p-2 text-sm">Restart stream</a>
                    <a @click="fetch(`/api/stream/${streamID}/pause?pause=${!paused}`).then(paused=!paused)" href="#"
                       :title="paused?'End Pause (Turns on video and audio)':'Pause lecture (Turns off video and audio)'"
                       class="bg-info text-white rounded cursor-pointer p-2 text-sm"
                       x-text="paused?'Resume Lecture':'Pause Lecture'"></a>
                    <p class="text-4 my-2">Presets:</p>
                    <div class="w-full overflow-x-scroll scrollbarThin">
                        <div class="flex flex-row gap-x-2">
                            {{range $preset := .Presets}}
                                <div style="min-width: 150px" class="text-center relative group">
                                    <img id="presetImage{{$preset.LectureHallId}}-{{$preset.PresetID}}"
                                         src="/public/{{if $preset.Image}}{{$preset.Image}}{{else}}noPreset.jpg{{end}}"
                                         alt="prev" width="150px">
                                    <i onclick="usePreset({{$course.Model.ID}}, {{$preset.LectureHallId}}, {{$preset.PresetID}}, {{$stream.Model.ID}})"
                                       title="Switch to this preset"
                                       class="opacity-0 group-hover:opacity-100 absolute top-1 right-1 p-1 rounded text-white bg-info fas fa-exchange-alt cursor-pointer"></i>
                                </div>
                            {{end}}
                        </div>
                    </div>
                </div>
            {{end}}
            {{if $stream.Description}}
                <div class="text-3 p-4 border-t-2 border-secondary video-description">
                    <span class="font-semibold">Video Description:</span>
                    {{.Description}}
                </div>
            {{end}}
            {{if .IsHighlightPage}}
                <ul class="w-full m-auto mb-4">
                    {{template "course_list" .IndexData.TUMLiveContext}}
                </ul>
            {{end}}
        </div>
    </div>
    {{if $course.ChatEnabled}}
        <div id="chatWrapper"
             class="hidden md:flex flex-col w-full md:h-full border-t-2 mt-2 md:mt-0 md:border-t-0 md:dark:border-l dark:border-secondary dark:bg-secondary-lighter bg-gray-100 md:w-2/6 lg:w-1/6 text-1 pt-3">
            <div id="chatBox" class="overflow-scroll overflow-x-hidden overflow-y-scroll" style="flex: 2;">
                {{range $chat := $stream.Chats}}
                    <div class="rounded p-2 mx-2">
                        <div class="flex flex-row">
                            <p class="flex-grow font-semibold {{if $chat.Admin}}text-warn{{end}}">{{$chat.UserName}}</p>
                            <p class="text-4">
                                {{printf "%02d:%02d" $chat.CreatedAt.Hour $chat.CreatedAt.Minute}}
                            </p>
                        </div>
                        <p class="text-3 break-words">
                            {{$chat.Message}}
                        </p>
                    </div>
                {{end}}
            </div>
            <form id="chatForm"
                  class="border-b-2 focus-within:border-gray-300 dark:border-secondary dark:bg-secondary-lighter inset-x-0 flex px-3"
                  style="">
                <input type="checkbox" name="anonymous" id="anonymous" class="hidden">
                <label for="anonymous" class="flex items-center cursor-pointer text-4 hover:text-1"
                       title="Don't show my name.">
                    <i class="fas fa-ghost"></i>
                </label>
                <label for="chatInput" class="hidden">Chat input</label><input
                        maxlength="200"
                        {{if not (.IndexData.TUMLiveContext.User)}}disabled
                        placeholder="Log in to chat" {{else}}
                        placeholder="Send a message" {{end}}autocomplete="off" id="chatInput" type="text"
                        class="border-none">
                <button class="fas fa-paper-plane text-4 hover:text-1 focus:outline-none"></button>
            </form>
        </div>
    {{end}}
</div>

<script src="/static/node_modules/video.js/dist/video.min.js"></script>
<script src="/static/node_modules/videojs-seek-buttons/dist/videojs-seek-buttons.min.js"></script>
<script src="/static/node_modules/videojs-contrib-quality-levels/dist/videojs-contrib-quality-levels.min.js"></script>
<link rel="stylesheet" href="/static/node_modules/videojs-hls-quality-selector/dist/videojs-hls-quality-selector.css">
<script src="/static/node_modules/videojs-hls-quality-selector/dist/videojs-hls-quality-selector.min.js"></script>
<script src="/static/assets/ts-dist/TUMLiveVjs.js?v={{.IndexData.VersionTag}}"></script>
<script>
    function loadScript(scriptUrl) {
        const script = document.createElement('script');
        script.src = scriptUrl;
        document.body.appendChild(script);

        return new Promise((res, rej) => {
            script.onload = function () {
                res();
            }
            script.onerror = function () {
                rej();
            }
        });
    }

    // @ts-ignore
    let player = videojs('my-video', {
        {{if $stream.LiveNow}}liveui: true,{{end}}
        fluid: true,
        playbackRates: [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2],
        html5: {
            reloadSourceOnError: true,
            vhs: {
                overrideNative: !videojs.browser.IS_SAFARI,
            },
            nativeVideoTracks: false,
            nativeAudioTracks: false,
            nativeTextTracks: false
        },
        userActions: {
            hotkeys: {}
        },
        //nativeControlsForTouch: true,
    });
    player.hlsQualitySelector();
    player.play();
    if (!{{$stream.LiveNow}}) {
        player.seekButtons({
            backIndex: 0,
            forward: 15,
            back: 15
        });
    }
    player.theaterMode({elementToToggle: 'my-video', className: 'theater-mode'});

    // handle volume store:
    player.on("volumechange", function () {
        window.localStorage.setItem("volume", player.volume());
        window.localStorage.setItem("muted", player.muted());
    });

    player.ready(function () {
        const persistedVolume = window.localStorage.getItem("volume");
        if (persistedVolume !== null) {
            player.volume(persistedVolume);
        }
        const persistedMute = window.localStorage.getItem("muted");
        if (persistedMute !== null) {
            player.muted('true' === persistedMute);
        }
    });

    {{if $stream.Recording}}
        player.watchProgress({{$stream.Model.ID}});
    {{end}}

    {{if $stream.Silences}}
    player.skipSilence({{$stream.GetSilencesJson}});
    {{end}}
    loadScript("/static/assets/ts-dist/watch.js?v={{.IndexData.VersionTag}}")
        .then(() => {
            {{if not (or $stream.LiveNow $stream.Recording)}}
            new Timer({{$stream.Start}});
            {{end}}
        })
</script>
</body>
</html>
