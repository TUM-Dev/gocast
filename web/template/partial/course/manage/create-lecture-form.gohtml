{{define "create-lecture-form"}}
    {{- /*gotype: github.com/TUM-Dev/gocast/web.AdminPageData*/ -}}
    {{$course := .IndexData.TUMLiveContext.Course}}
    <form method="post" action="/api/createLecture"
          x-data="admin.createLectureForm({ s: {{toJson ($course.StreamTimes)}} })" @submit.prevent="submitData"
          x-init="courseID = {{.IndexData.TUMLiveContext.Course.Model.ID}}; $el.reset()">

        <ol class="flex items-center w-full p-3 space-x-2 text-sm font-medium text-center text-gray-500 bg-white border-b border-gray-200 shadow-sm dark:text-gray-400 sm:text-base dark:bg-gray-800 dark:border-gray-700 sm:p-4">
            <li class="flex items-center " :class="currentTab === 0 ? `text-blue-500 dark:text-white` : `text-gray-400 dark:text-gray-500`">
                <span class="flex items-center justify-center w-5 h-5 mr-2 text-xs border rounded-full shrink-0" :class="currentTab === 0 ? `border-blue-500 dark:border-white` : `border-gray-400 dark:border-gray-500`">
                    1
                </span>
                <span class="hidden sm:inline-flex sm:ml-2">Lecture Type</span>
                <svg aria-hidden="true" class="w-4 h-4 ml-2 sm:ml-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 5l7 7-7 7M5 5l7 7-7 7"></path></svg>
            </li>
            <li class="flex items-center " :class="currentTab === 1 ? `text-blue-500 dark:text-white` : `text-gray-400 dark:text-gray-500`">
                <span class="flex items-center justify-center w-5 h-5 mr-2 text-xs border rounded-full shrink-0" :class="currentTab === 1 ? `border-blue-500 dark:border-white` : `border-gray-400 dark:border-gray-500`">
                    2
                </span>
                <span class="hidden sm:inline-flex sm:ml-2">Details</span>
                <svg x-show="createType === admin.LectureCreateType.vodUpload || createType === admin.LectureCreateType.vodRecord" aria-hidden="true" class="w-4 h-4 ml-2 sm:ml-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 5l7 7-7 7M5 5l7 7-7 7"></path></svg>
            </li>
            <li x-show="createType === admin.LectureCreateType.vodUpload" class="flex items-center " :class="currentTab === 2 ? `text-blue-500 dark:text-white` : `text-gray-400 dark:text-gray-500`">
                <span class="flex items-center justify-center w-5 h-5 mr-2 text-xs border rounded-full shrink-0" :class="currentTab === 2 ? `border-blue-500 dark:border-white` : `border-gray-400 dark:border-gray-500`">
                    3
                </span>
                Upload Media
            </li>
            <li x-show="createType === admin.LectureCreateType.vodRecord" class="flex items-center " :class="currentTab === 2 ? `text-blue-500 dark:text-white` : `text-gray-400 dark:text-gray-500`">
                <span class="flex items-center justify-center w-5 h-5 mr-2 text-xs border rounded-full shrink-0" :class="currentTab === 2 ? `border-blue-500 dark:border-white` : `border-gray-400 dark:border-gray-500`">
                    3
                </span>
                Record Media
            </li>
        </ol>

        <div class="form-container-body">
            {{- /* Loading Tab */ -}}
            <div x-show="currentTab === -1" x-data="{ progress: { COMB: 0, PRES: null, CAM: null } }" @voduploadprogress.window="(e) => (progress = e.detail)">
                <h3>Your lecture is being created ...</h3>
                <ul x-show="formData.vodup" class="mt-2">
                    <li>Combined Video: <b x-text="progress.COMB === null ? 'skipped' : `${progress.COMB}%`"></b></li>
                    <li>Presentation Video: <b x-text="progress.PRES === null ? 'skipped' : `${progress.PRES}%`"></b></li>
                    <li>Camera Video: <b x-text="progress.CAM === null ? 'skipped' : `${progress.CAM}%`"></b></li>
                </ul>
            </div>

            {{- /* Tab 1 */ -}}
            <div x-show="currentTab === 0" class="flex py-4">
                {{template "lecture-type-slide"}}
            </div>

            {{- /* Tab 2 */ -}}
            <div x-show="currentTab === 1" class="grid grid-cols-2 space-x-2">
                {{template "lecture-details-slide" .}}
            </div>

            {{- /* Tab 3 */ -}}
            <div x-show="createType === admin.LectureCreateType.vodUpload && currentTab === 2" class="">
                {{template "lecture-media-slide"}}
            </div>
            <div x-show="createType === admin.LectureCreateType.vodRecord && currentTab === 2" class="">
                {{template "lecture-record-slide"}}
            </div>
        </div>

        <div x-show="error" class="flex justify-end px-6 py-2">
            <span class="text-white rounded bg-danger px-4 py-2" >Something went wrong.</span>
        </div>

        <div x-show="!canContinue" class="flex justify-end px-6">
            <span class="text-gray-500" style="white-space: pre-wrap; text-align: right;"
                  x-text="cannotContinueReason"></span>
        </div>

        <div class="flex justify-end py-2 px-4">
            <button x-show="!loading" :disabled="!canGoBack" class="mx-2 disabled:text-gray-300 dark:disabled:text-gray-500" @click.prevent="() => prev()">
                Back
            </button>
            <button :disabled="loading || !canContinue"
                    class="btn mx-2 disabled:text-gray-300 dark:disabled:text-gray-500" @click.prevent="() => next()">
                <span x-show="!loading && !onLastSlide">Continue</span>
                <span x-show="!loading && onLastSlide" x-text="formData.recurring && formData.recurringDates.filter(({enabled}) => enabled).length > 0
                                                            ? `Create ${(formData.recurringDates.filter(({enabled}) => enabled).length + 1).toString()} Lectures`
                                                            : 'Create Lecture'"></span>
                <span x-show="loading">
                    <i class="fas fa-circle-notch text-4 animate-spin"></i> <span>loading ...</span>
                </span>
            </button>
        </div>
    </form>
{{end}}
