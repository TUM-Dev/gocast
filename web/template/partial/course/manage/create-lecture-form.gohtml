{{define "create-lecture-form"}}
    {{- /*gotype: github.com/joschahenningsen/TUM-Live/web.AdminPageData*/ -}}
    {{$course := .IndexData.TUMLiveContext.Course}}
    <form method="post" action="/api/createLecture"
          x-data="admin.createLectureForm({ s: {{toJson ($course.StreamTimes)}} })" @submit.prevent="submitData"
          x-init="courseID = {{.IndexData.TUMLiveContext.Course.Model.ID}}; $el.reset()">

        <ol class="flex items-center w-full p-3 space-x-2 text-sm font-medium text-center text-gray-500 bg-white border-b border-gray-200 shadow-sm dark:text-gray-400 sm:text-base dark:bg-gray-800 dark:border-gray-700 sm:p-4">
            <li class="flex items-center " :class="currentTab === 0 ? `text-blue-500 dark:text-white` : `text-gray-400 dark:text-gray-500`">
                <span class="flex items-center justify-center w-5 h-5 mr-2 text-xs border rounded-full shrink-0" :class="currentTab === 0 ? `border-blue-500 dark:border-white` : `border-gray-400 dark:border-gray-500`">
                    1
                </span>
                <span class="hidden sm:inline-flex sm:ml-2">Lecture Type</span>
                <svg aria-hidden="true" class="w-4 h-4 ml-2 sm:ml-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 5l7 7-7 7M5 5l7 7-7 7"></path></svg>
            </li>
            <li class="flex items-center " :class="currentTab === 1 ? `text-blue-500 dark:text-white` : `text-gray-400 dark:text-gray-500`">
                <span class="flex items-center justify-center w-5 h-5 mr-2 text-xs border rounded-full shrink-0" :class="currentTab === 1 ? `border-blue-500 dark:border-white` : `border-gray-400 dark:border-gray-500`">
                    2
                </span>
                <span class="hidden sm:inline-flex sm:ml-2">Details</span>
                <svg x-show="formData.vodup" aria-hidden="true" class="w-4 h-4 ml-2 sm:ml-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 5l7 7-7 7M5 5l7 7-7 7"></path></svg>
            </li>
            <li x-show="formData.vodup" class="flex items-center " :class="currentTab === 2 ? `text-blue-500 dark:text-white` : `text-gray-400 dark:text-gray-500`">
                <span class="flex items-center justify-center w-5 h-5 mr-2 text-xs border rounded-full shrink-0" :class="currentTab === 2 ? `border-blue-500 dark:border-white` : `border-gray-400 dark:border-gray-500`">
                    3
                </span>
                Video Files
            </li>
        </ol>

        <div class="form-container-body">
            <div x-show="currentTab === -1" x-data="{ progress: { COMB: 0, PRES: null, CAM: null } }" @voduploadprogress.window="(e) => (progress = e.detail)">
                <h3>Your lecture is being created ...</h3>
                <ul x-show="formData.vodup" class="mt-2">
                    <li>Combined Video: <b x-text="progress.COMB === null ? 'skipped' : `${progress.COMB}%`"></b></li>
                    <li>Presentation Video: <b x-text="progress.PRES === null ? 'skipped' : `${progress.PRES}%`"></b></li>
                    <li>Camera Video: <b x-text="progress.CAM === null ? 'skipped' : `${progress.CAM}%`"></b></li>
                </ul>
            </div>

            <div x-show="currentTab === 0" class="flex py-4">
                <ul class="w-full">
                    <li class="mb-2">
                        <button
                            @click.prevent="() => updateType(false)"
                            class="inline-flex items-center justify-between w-full p-5 text-gray-500 bg-white border border-gray-200 rounded-lg cursor-pointer dark:hover:text-gray-300 dark:border-gray-700 hover:text-gray-600 hover:bg-gray-100 dark:text-gray-400 dark:bg-gray-600 dark:hover:bg-gray-500"
                            :class="formData.vodup === true ? '' : 'dark:text-white dark:border-white border-blue-600 text-blue-600'"
                        >
                            <div class="block text-left">
                                <div class="w-full text-lg font-semibold">Livestream</div>
                                <div class="w-full">From Lecture-Hall or Self-Stream</div>
                            </div>
                        </button>
                    </li>
                    <li>
                        <button
                                @click.prevent="() => updateType(true)"
                                class="inline-flex items-center justify-between w-full p-5 text-gray-500 bg-white border border-gray-200 rounded-lg cursor-pointer dark:hover:text-gray-300 dark:border-gray-700 hover:text-gray-600 hover:bg-gray-100 dark:text-gray-400 dark:bg-gray-600 dark:hover:bg-gray-500"
                                :class="formData.vodup !== true ? '' : 'dark:text-white dark:border-white border-blue-600 text-blue-600'"
                        >
                            <div class="block text-left">
                                <div class="w-full text-lg font-semibold">Video-on-demand</div>
                                <div class="w-full">Upload a video-on-demand</div>
                            </div>
                        </button>
                    </li>
                </ul>
            </div>

            <div x-show="currentTab === 1" class="grid grid-cols-2 space-x-2">

                <span class="text-sm text-5 pl-2">Options</span>
                <div class="col-span-full flex gap-3 px-2 py-2">
                    <label x-show="{{$course.ChatEnabled}}">
                        <input type="checkbox" x-model="formData.isChatEnabled"
                               x-init="formData.isChatEnabled = {{$course.ChatEnabled}}"
                               class="w-auto">
                        <span class="text-3">Enable Live Chat</span>
                    </label>
                </div>

                <label for="name" x-show="!loading">
                    <span class="text-sm text-5">Lecture Name</span>
                    <input class="tl-input" name="name" id="name" x-model="formData.title" @change="onUpdate" placeholder="L01: Binary Trees"/>
                </label>

                <label x-show="!formData.premiere && !formData.vodup && !loading">
                    <span class="text-sm text-5">Lecture Hall</span>
                    <select class="tl-select" id="lectureHallBulkSelect" x-model="formData.lectureHallId">
                        <option class="text-gray-300" value="0">Self streaming
                        </option>
                        {{range .LectureHalls}}
                            <option value="{{.Model.ID}}" class="text-gray-300">
                                {{.Name}}
                            </option>
                        {{end}}
                    </select>
                </label>

                <label for="start" x-show="!loading">
                    <span class="text-sm text-5">Start</span>
                    <input class="tl-input" name="start" placeholder="2021-04-08 14:00" id="start" x-model="formData.start"
                           x-ref="start"
                           x-init="flatpickr($refs.start, {enableTime: true, time_24hr: true, altInput:true, altFormat:'Y-m-d H:i', dateFormat:'Z', allowInput: true})"
                           @change="onStartChange"
                           required/>
                </label>
                <template x-if="!formData.premiere && !formData.vodup && !loading">
                    <label for="end">
                        <span class="text-sm text-5">End</span>
                        <span x-show="formData.formatedDuration !== ''" class="text-sm font-light opacity-75"
                              x-text="`( ${formData.formatedDuration} )`"></span>
                        <input class="tl-input" name="end" placeholder="16:00" id="end" x-model="formData.end" x-ref="end"
                               x-init="flatpickr($refs.end, {enableTime: true, noCalendar: true, dateFormat: 'H:i', time_24hr: true, allowInput: true })"
                               @change="onEndChange"
                               :required="!formData.vodup"/>
                    </label>
                </template>

                <div x-show="!formData.premiere && !formData.vodup" class="col-span-full mt-2">
                    <label>
                        <input type="checkbox" x-model="formData.recurring"
                               class="w-auto">
                        <span class="text-3">Recurring Event</span>
                    </label>
                </div>

                <div class="col-span-full" x-show="formData.recurring">
                    <h2 class="text-sm text-5">Interval</h2>
                    <label class="block">
                        <input type="radio" value="daily" x-model="formData.recurringInterval" class="w-auto"
                               @change="regenerateRecurringDates">
                        <span class="text-3">Repeat Daily</span>
                    </label>
                    <label class="block">
                        <input type="radio" value="weekly" x-model="formData.recurringInterval" class="w-auto"
                               @change="regenerateRecurringDates">
                        <span class="text-3">Repeat Weekly</span>
                    </label>
                    <label class="block">
                        <input type="radio" value="monthly" x-model="formData.recurringInterval" class="w-auto"
                               @change="regenerateRecurringDates">
                        <span class="text-3">Repeat Monthly</span>
                    </label>
                    <label for="events-count" class="">
                        <h2 class="text-sm text-5">Count</h2>
                        <input name="events-count" class="tl-input" type="number" placeholder="14" id="end" min="1"
                               x-model="formData.eventsCount" @change="regenerateRecurringDates"
                               @keyup="regenerateRecurringDates"/>
                    </label>
                    <span class="text-sm text-5">Dates</span>
                    <span x-show="formData.start == ''" class="ml-2 opacity-75">- Please set "start" first -</span>
                    <ul class="ml-2" x-show="formData.start != ''">
                        <li x-bind:style="{ 'cursor': 'default' }">
                            <i class="far fa-check-square"></i>
                            <span x-text="(new Date(formData.start)).toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })"></span>
                        </li>
                        <template x-for="date in formData.recurringDates">
                            <li x-bind:style="{ 'cursor': 'pointer', 'opacity': date.enabled ? '1' : '0.3' }"
                                @click="() => (date.enabled = !date.enabled)">
                                <i x-show="date.enabled" class="far fa-check-square"></i>
                                <i x-show="!date.enabled" class="far fa-square"></i>
                                <span x-text="date.date.toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })"></span>
                            </li>
                        </template>
                    </ul>
                </div>
            </div>
            <div x-show="currentTab === 2" class="">
                <div class="mb-4">
                    <label x-show="formData.premiere || formData.vodup && !loading">
                        <span class="text-sm text-5">Combined Video (mp4, if possible h264)</span>
                        <input type="file" accept="video/mp4" class="btn tl-choose-file w-full mt-2 mx-2"
                               x-on:change="formData.combFile = Object.values($event.target.files)"
                               :required="formData.vodup">
                    </label>
                </div>

                <div class="mb-4">
                    <label x-show="formData.premiere || formData.vodup && !loading">
                        <span class="text-sm text-5">Optional: Presentation Video (mp4, if possible h264)</span>
                        <input type="file" accept="video/mp4" class="btn tl-choose-file w-full mt-2 mx-2"
                               x-on:change="formData.presFile = Object.values($event.target.files)">
                    </label>
                </div>

                <div>
                    <label x-show="formData.premiere || formData.vodup && !loading">
                        <span class="text-sm text-5">Optional: Camera Video (mp4, if possible h264)</span>
                        <input type="file" accept="video/mp4" class="btn tl-choose-file w-full mt-2 mx-2"
                               x-on:change="formData.camFile = Object.values($event.target.files)">
                    </label>
                </div>
            </div>
        </div>

        <div x-show="error" class="flex justify-end px-6 py-2">
            <span class="text-white rounded bg-danger px-4 py-2" >Something went wrong.</span>
        </div>

        <div class="flex justify-end py-2 px-4">
            <button x-show="!loading" :disabled="!canGoBack" class="mx-2 disabled:text-gray-300 dark:disabled:text-gray-500" @click.prevent="() => prev()">
                Back
            </button>
            <button :disabled="loading || !canContinue" class="btn mx-2" @click.prevent="() => next()">
                <span x-show="!loading && !onLastSlide">Continue</span>
                <span x-show="!loading && onLastSlide" x-text="formData.recurring && formData.recurringDates.filter(({enabled}) => enabled).length > 0
                                                            ? `Create ${(formData.recurringDates.filter(({enabled}) => enabled).length + 1).toString()} Lectures`
                                                            : 'Create Lecture'"></span>
                <span x-show="loading">
                    <i class="fas fa-circle-notch text-4 animate-spin"></i> <span>loading ...</span>
                </span>
            </button>
        </div>
    </form>
{{end}}
