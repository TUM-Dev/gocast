{{define "lecture-management-card"}}
    {{- /*gotype: github.com/joschahenningsen/TUM-Live/web.AdminPageData*/ -}}

    {{$course := .IndexData.TUMLiveContext.Course}}
    {{$user := .IndexData.TUMLiveContext.User}}
    {{$ingestBase := .IngestBase}}
    {{$lectureHalls := .LectureHalls}}

    <li :id="$id('lecture-li')"
        x-show="!filterPast || !lecture.isPast"
        :key="lecture.lectureId"
        class="w-full mb-4 pb-4 relative dark:bg-gray-800 bg-gray-50 rounded shadow">
        <div class="border-t-2 flex justify-between mb-2" :class="'border-' + lecture.color">
            <div class="pt-2 px-2">
                <div class="text-3 font-semibold">
                    <input @change="$event.target.checked ? selectedLectures.push({ id: lecture.lectureId, isPast: lecture.isPast }) : (selectedLectures = selectedLectures.filter(({id}) => id != lecture.lectureId))"
                           class="w-auto mr-2" type="checkbox"/>
                    <span x-text="lecture.startDateFormatted()"></span>
                </div>
                <div class="text-3 font-sans ml-6" x-data="{ showKeys: false }">
                    <span x-text="lecture.startTimeFormatted()"></span>
                    -
                    <span x-text="lecture.endTimeFormatted()"></span>
                    <i class="ml-2 fas fa-location-pin text-5"></i>
                    <span x-text="lecture.lectureHallName" class="text-5"></span>
                    <button @click="showKeys=!showKeys" x-show="lecture.lectureHallId===0 && !lecture.isPast"
                            class="bg-indigo-500 rounded px-2 py-0 font-semibold">
                        <i class="fas fa-key mr-2"></i><span x-text="showKeys?'Hide Keys':'Show Keys'"></span></button>
                    <p x-show="showKeys" class="mt-1 ml-2 p-2 border dark:border-gray-600 rounded w-full">
                        <span class="font-semibold">Stream Server:</span>
                        <span x-text="'{{$ingestBase}}stream?secret=' + lecture.streamKey"></span>
                        <i class="fas fa-clipboard hover:text-purple-500"
                           @click="() => global.copyToClipboard('{{$ingestBase}}stream?secret=' + lecture.streamKey)"></i>
                        <br>
                        <span class="font-semibold">Stream Key:</span>
                        <span x-text="lecture.courseSlug + '-' + lecture.lectureId"></span>
                        <i class="fas fa-clipboard hover:text-purple-500"
                           @click="() => global.copyToClipboard(lecture.courseSlug + '-' + lecture.lectureId)"></i>
                        <br>
                        {{if ne $user.Role 1}}
                            <span>Want to stream from a lecture hall instead? Please reach out to the RBG.</span>
                        {{end}}
                    </p>
                </div>

                <div x-show="lecture.uiEditMode == 0"
                     class="text-2 font-sans ml-6 mt-2 pl-3 border-l-4 border-gray-500 dark:border-white">
                    <span class="italic text-gray-400 dark:text-gray-600" x-show="lecture.name.length === 0">Unknown Name</span>
                    <span class="text-gray-700 dark:text-white" x-show="lecture.name.length > 0"
                          x-text="lecture.name"></span>
                </div>
            </div>

            <div class="flex items-center justify-end h-8">
                <template x-if="lecture.files && lecture.files.length > 0">
                    <span class="relative mr-2" x-data="{expand:false}">
                        <button @click="expand=!expand" type="button"
                                id="menu-button" aria-expanded="true"
                                aria-haspopup="true">
                            <i class="fas fa-cloud-download-alt text-4 text-lg hover:text-1"></i>
                        </button>
                        <span x-cloak x-show="expand"
                              @click.outside="expand = false"
                              class="origin-top-left absolute top-full left-0 m-auto w-32
                        dark:bg-secondary ring-1 ring-black ring-opacity-5 focus:outline-none"
                              role="menu" aria-orientation="vertical"
                              aria-labelledby="menu-button" tabindex="-1">
                            <span class="py-1" role="none">
                            <!-- Active: "bg-gray-100 text-gray-900", Not Active: "text-gray-700" -->
                                <template x-for="file in lecture.files"
                                          :key="file.id">
                                    <a :href="'/api/download/' + file.id" download
                                       class="hover:bg-gray-100 text-3 dark:hover:bg-gray-600
                                    block px-4 py-2 text-sm first:rounded-t-md last:rounded-b-md"
                                       x-text="file.friendlyName" role="menuitem"
                                       tabindex="-1" id="menu-item-0"></a>
                                </template>
                            </span>
                        </span>
                    </span>
                </template>
                <div x-show="lecture.isRecording">
                    <div class="font-semibold bg-success border-success w-auto inline-block px-4 text-1 flex items-center rounded-b-lg h-8 text-white dark:text-black">
                        <template x-if="lecture.isConverting">
                            <div>
                                <i class="fas fa-circle-notch animate-spin"></i>
                                <span>Converting</span>
                            </div>
                        </template>
                        <span x-show="!lecture.isConverting">VoD</span>
                    </div>
                </div>
                <div x-show="lecture.isLiveNow"
                     class="font-semibold bg-danger border-danger w-auto inline-block px-4 text-1 flex items-center rounded-b-lg h-8 text-white dark:text-black">
                    Live
                </div>
                <div x-show="!lecture.isRecording && lecture.isPast"
                     class="font-semibold bg-warn border-warn w-auto inline-block px-4 text-1 flex items-center rounded-b-lg h-8 text-white dark:text-black">
                    Past
                </div>
                <div x-show="!lecture.isPast && !lecture.isLiveNow && !lecture.isRecording"
                     class="font-semibold bg-info border-info w-auto inline-block px-4 text-1 flex items-center rounded-b-lg h-8 text-white dark:text-black">
                    Scheduled
                </div>
                <div x-data="{ moreDropdownOpen: false,
                               toggleMoreDropdown() {
                                 if (this.moreDropdownOpen) {
                                   return this.closeMoreDropdown();
                                 }
                                 this.$refs.button.focus();
                                 this.moreDropdownOpen = true;
                               },
                               closeMoreDropdown(focusAfter) {
                                 if (! this.moreDropdownOpen) return;
                                 this.moreDropdownOpen = false;
                                 focusAfter && focusAfter.focus();
                                }
                              }"
                     x-on:keydown.escape.prevent.stop="closeMoreDropdown($refs.button)"
                     x-on:focusin.window="! $refs.panel.contains($event.target) && closeMoreDropdown()"
                     x-id="['dropdown-button']"
                     class="relative">

                    <button
                            x-ref="button"
                            x-on:click="toggleMoreDropdown()"
                            :aria-expanded="moreDropdownOpen"
                            :aria-controls="$id('more-dropdown-button')"
                            type="button"
                            class="px-5 py-1 text-sm"
                    >
                        <i class="fas fa-chevron-down"></i>
                    </button>

                    <!-- Series Options -->
                    <div
                            x-ref="panel"
                            x-show="moreDropdownOpen"
                            x-transition.origin.top.right
                            x-on:click.outside="closeMoreDropdown($refs.button)"
                            :id="$id('more-dropdown-button')"
                            style="display: none;"
                            class="absolute left-0 mt-2 w-36 bg-white dark:bg-gray-800 border border-black rounded shadow-md overflow-hidden"
                    >
                        <div>
                            <button @click="lecture.startSingleEdit(); closeMoreDropdown();"
                                    class="block w-full px-4 py-2 text-left text-sm text-gray-400 dark:hover:text-gray-500 hover:text-gray-300">
                                Edit Lecture
                            </button>
                            <button @click="lecture.deleteLecture(); closeMoreDropdown();"
                                    class="block w-full px-4 py-2 text-left text-sm text-red-400 dark:hover:text-red-500 hover:text-red-300">
                                Delete Lecture
                            </button>
                        </div>
                        <template x-if="lecture.seriesIdentifier.length > 0">
                            <div class="border-t border-black">
                                <button @click="lecture.startSeriesEdit(); closeMoreDropdown();"
                                        class="block w-full px-4 py-2 text-left text-sm text-gray-400 dark:hover:text-gray-500 hover:text-gray-300">
                                    Edit Series
                                </button>
                                <button @click="lecture.deleteLectureSeries(); closeMoreDropdown();"
                                        class="block w-full px-4 py-2 text-left text-sm text-red-400 dark:hover:text-red-500 hover:text-red-300">
                                    Delete Series
                                </button>
                            </div>
                        </template>
                    </div>
                </div>
            </div>
        </div>

        <div x-show="lecture.uiEditMode > 0" class="px-4 pt-4 mt-4 border-t-2 border-gray-100/20">
            <div x-data="{ id: $id('text-input') }"
                 class="w-full flex flex-row border-b-2 focus-within:border-gray-300 border-gray-500">
                <label :for="id" class="hidden">Lecture title</label>
                <input :id="id"
                       class="grow border-none" type="text"
                       x-model="lecture.newName"
                       x-on:keyup="lecture.updateIsDirty()"
                       placeholder="Lecture 2: Dark-Patterns I"
                       autocomplete="off">
            </div>
            <div class="w-full mt-3">
                <div x-data="{ id: $id('text-input') }"
                     class="w-full flex flex-row border-b-2 focus-within:border-gray-300 border-gray-500">
                    <label :for="id" class="hidden">Lecture description</label>
                    <textarea :id="id"
                              class="grow border-none"
                              placeholder="Add a nice description, links, and more. You can use Markdown."
                              autocomplete="off"
                              x-model="lecture.newDescription"
                              x-on:keyup="lecture.updateIsDirty()"
                    ></textarea>
                </div>

                <div x-show="!lecture.isPast && !lecture.isRecording"
                     class="p-3 border dark:border-gray-600 rounded mt-3">
                    {{if eq $user.Role 1}}
                        <div x-data="{ id: $id('select') }">
                            <label class="mx-2">
                                <span>Select Lecture Hall</span>
                                <select class="text-gray-700 dark:text-gray-300 dark:bg-secondary bg-gray-100 p-2"
                                        :id="id"
                                        x-on:change="lecture.updateIsDirty()"
                                        x-model="lecture.newLectureHallId">
                                    <option class="text-gray-700 dark:text-gray-300" value="0">
                                        Self streaming
                                    </option>
                                    {{range $lectureHall := $lectureHalls}}
                                        <option class="text-gray-700 dark:text-gray-300"
                                                value="{{$lectureHall.Model.ID}}"
                                                :selected="lecture.lectureHallId === '{{$lectureHall.Model.ID}}'">
                                            {{$lectureHall.Name}}
                                        </option>
                                    {{end}}
                                </select>
                            </label>
                        </div>
                    {{end}}
                    {{if eq $user.Role 2}}
                        <div x-show="lecture.newLectureHallId !== '0'">
                            This lecture will be streamed from <span
                                    class="font-semibold text-white">{{range $lectureHall := $lectureHalls}}<span
                                        x-show="lecture.lectureHallId === '{{$lectureHall.Model.ID}}'">{{$lectureHall.Name}}</span>{{end}}</span>.
                            If you need this changed or want to stream from home (with obs, zoom etc.), please reach
                            out to the RBG.
                        </div>
                    {{end}}
                </div>
                <template x-if="lecture.uiEditMode > 0"> <!-- only render if in edit mode to avoid network calls -->
                    {{template "editvideosections"}}
                </template>
            </div>

            <span x-show="lecture.isRecording" class="absolute left-0 bottom-0 p-4">
                <!-- buttons go here -->
            </span>

            <div x-show="lecture.lastErrors.length > 0" class="px-6 py-3 bg-red-400 my-3 rounded">
                <ul>
                    <template x-for="error in lecture.lastErrors">
                        <li x-text="error"></li>
                    </template>
                </ul>
            </div>

            <div class="mt-6 flex justify-end">
                <button :disabled="lecture.isSaving" @click="lecture.discardEdit();"
                        class="px-8 py-3 text-2 text-white rounded bg-indigo-500/70 hover:bg-indigo-500/90 dark:bg-indigo-500/10 disabled:opacity-20 dark:hover:bg-indigo-500/20 mr-4">
                    Discard Changes
                </button>
                <button
                        @click="lecture.saveEdit();"
                        :disabled="!lecture.isDirty || lecture.isSaving"
                        class="px-8 py-3 text-2 rounded text-white bg-indigo-500 hover:bg-indigo-600 disabled:opacity-20 disabled:hover:bg-indigo-500"
                        x-text="lecture.isSaving ? 'loading ...' : (lecture.uiEditMode === admin.UIEditMode.single ? 'Save Lecture' : 'Save Series')"
                ></button>
            </div>
        </div>
    </li>
{{end}}