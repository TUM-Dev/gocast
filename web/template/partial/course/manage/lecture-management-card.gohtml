{{define "lecture-management-card"}}
    {{- /*gotype: github.com/TUM-Dev/gocast/web.AdminPageData*/ -}}

    {{$course := .IndexData.TUMLiveContext.Course}}
    {{$user := .IndexData.TUMLiveContext.User}}
    {{$ingestBase := .IngestBase}}
    {{$lectureHalls := .LectureHalls}}

    <li x-data="admin.lectureEditor(lecture)"
        x-show="!filterPast || !lectureData.isPast"
        :id="`lecture-${lectureData.lectureId}`"
        :key="lectureData.lectureId"
        class="w-full mb-4 relative bg-white dark:bg-gray-800 border dark:border-0 rounded shadow">
        <div class="border-t-2 flex justify-between mb-2 rounded-t" :class="'border-' + lectureData.color">
            <div class="pt-2 px-2 w-full">
                <div class="text-3 font-semibold flex justify-start items-center">
                    <input @change="$event.target.checked ? selectedLectures.push({ id: lectureData.lectureId, isPast: lectureData.isPast }) : (selectedLectures = selectedLectures.filter(({id}) => id != lectureData.lectureId))"
                           class="w-auto mr-2" type="checkbox"/>
                    <div x-show="marked.includes(lectureData.lectureId)" class="rounded-full bg-green-400 dark:bg-green-600 w-11 h-4 mr-2 text-center text-xs inline-block">
                        NEW
                    </div>
                    <a :href="`/w/${lectureData.courseSlug}/${lectureData.lectureId}`"><span
                                x-text="lectureData.startDateFormatted"></span> <i class="fas fa-external-link"></i></a>
                </div>
                <div class="text-3 font-sans ml-6" x-data="{ showKeys: false }">
                    <span x-text="lectureData.startTimeFormatted"></span>
                    -
                    <span x-text="lectureData.endTimeFormatted"></span>
                    <i class="ml-2 fas fa-location-pin text-5"></i>
                    <span x-text="lectureData.lectureHallName" class="text-5"></span>
                    <button @click="showKeys=!showKeys" x-show="lectureData.lectureHallId===0 && !lectureData.isPast"
                            class="bg-indigo-500 rounded px-2 py-0 font-semibold">
                        <i class="fas fa-key mr-2"></i><span x-text="showKeys?'Hide Keys':'Show Keys'"></span></button>
                    <p x-show="showKeys" class="mt-1 ml-2 p-2 border dark:border-gray-600 rounded w-full">
                        <span class="font-semibold">Stream Server:</span>
                        <span x-text="'{{$ingestBase}}{{$course.Slug}}-'+ lectureData.lectureId +'?secret=' + lectureData.streamKey"></span>
                        <i class="fas fa-clipboard hover:text-purple-500"
                           @click="() => global.copyToClipboard('{{$ingestBase}}{{$course.Slug}}-'+ lectureData.lectureId +'?secret=' + lectureData.streamKey)"></i>
                        <br>
                        <span class="font-semibold">Stream Key:</span>
                        <span x-text="lectureData.courseSlug + '-' + lectureData.lectureId"></span>
                        <i class="fas fa-clipboard hover:text-purple-500"
                           @click="() => global.copyToClipboard(lectureData.courseSlug + '-' + lectureData.lectureId)"></i>
                        <br>
                        {{if not .IndexData.TUMLiveContext.IsAdmin}}
                            <span>Want to stream from a lecture hall instead? Please reach out to the RBG.</span>
                        {{end}}
                    </p>
                </div>
                <div x-show="lectureData.isConverting" class="p-4" x-init="keepProgressesUpdated()">
                    <span class="text-1 font-semibold text-sm">Converting:</span>
                    <template x-for="p in lectureData.transcodingProgresses">
                        <div class="w-full ml-2">
                            <div class="font-semibold text-sm text-4" x-text="`${p.version} (${p.progress}%)`"></div>
                            <div class="w-full bg-gray-200 rounded-full h-1.5 mb-1 dark:bg-gray-700">
                                <div class="bg-blue-600 h-1.5 rounded-full dark:bg-blue-500"
                                     :style="`width: ${p.progress}%`"></div>
                            </div>
                        </div>
                    </template>
                </div>
                <div x-show="uiEditMode == 0"
                     class="text-2 font-sans ml-6 mt-2 pl-3 border-l-4 border-gray-500 dark:border-white">
                    <span class="italic text-gray-400 dark:text-gray-600" x-show="lectureData.name.length === 0">Unknown Name</span>
                    <span class="text-gray-700 dark:text-white" x-show="lectureData.name.length > 0"
                          x-text="lectureData.name"></span>
                </div>
            </div>

            <div class="flex items-center justify-end h-8">
                <!-- generate subtitles button -->
                <template x-if="lectureData.isRecording">
                    <div class="relative mr-2" x-data="{'showLanguageSelect': false}">
                        <button @click="showLanguageSelect = !showLanguageSelect"
                                @click.outside="showLanguageSelect = false"
                                class="text-4 hover:text-3 text-lg" title="Generate subtitles">
                            <i class="fa-solid fa-closed-captioning"></i>
                        </button>
                        <div x-show="showLanguageSelect"
                             class="absolute w-56 pb-3 top-full z-40 rounded-lg bg-white border shadow
                         dark:bg-secondary-light dark:border-gray-600 dark:shadow-0">
                            <div class="border-b dark:border-gray-600 px-2 py-1">
                                <span class="text-xs text-3">Generate subtitles</span>
                            </div>
                            <div class="pt-3">
                                <button @click="await admin.requestSubtitles(lectureData.lectureId, 'de')"
                                        class="flex items-center justify-start
                                    py-1 px-2 text-3 w-full hover:bg-gray-200 hover:dark:bg-gray-600">
                                    <i class="text-lg w-8">ðŸ‡©ðŸ‡ª</i>
                                    <span class="font-light text-sm ">German</span>
                                </button>
                                <button @click="await admin.requestSubtitles(lectureData.lectureId, 'en')"
                                        class="flex items-center justify-start
                                    py-1 px-2 text-3 w-full hover:bg-gray-200 hover:dark:bg-gray-600">
                                    <i class="text-lg w-8">ðŸ‡¬ðŸ‡§</i>
                                    <span class="font-light text-sm ">English</span>
                                </button>
                            </div>
                        </div>
                    </div>
                </template>
                <template x-if="lectureData.isRecording && lectureData.downloadableVods && lectureData.downloadableVods.length > 0">
                    <span class="relative mr-2" x-data="{expand:false}">
                        <button @click="expand=!expand" type="button"
                                id="menu-button" aria-expanded="true"
                                aria-haspopup="true">
                            <i class="fas fa-cloud-download-alt text-4 text-lg hover:text-1"></i>
                        </button>
                        <span x-cloak x-show="expand"
                              @click.outside="expand = false"
                              class="origin-top-left absolute top-full left-0 m-auto w-32
                        dark:bg-secondary ring-1 ring-black ring-opacity-5 focus:outline-none"
                              role="menu" aria-orientation="vertical"
                              aria-labelledby="menu-button" tabindex="-1">
                            <span class="py-1" role="none">
                            <!-- Active: "bg-gray-100 text-gray-900", Not Active: "text-gray-700" -->
                                <template x-for="file in lectureData.downloadableVods">
                                    <a :href="file.DownloadURL" download
                                       class="hover:bg-gray-100 text-3 dark:hover:bg-gray-600
                                    block px-4 py-2 text-sm first:rounded-t-md last:rounded-b-md"
                                       x-text="file.FriendlyName" role="menuitem"
                                       tabindex="-1" id="menu-item-0"></a>
                                </template>
                            </span>
                        </span>
                    </span>
                </template>
                <div x-show="lectureData.isRecording">
                    <div class="font-semibold border-success w-auto inline-block px-4 text-1 flex items-center rounded-b-lg h-8 text-white dark:text-black"
                         :class="lectureData.private?'bg-gray-500':'bg-success'">
                        <i title="This lecture is hidden" x-show="lectureData.private" class="fas fa-eye-slash"></i>
                        <span x-show="!lectureData.isConverting">VoD</span>
                    </div>
                </div>
                <div x-show="lectureData.isLiveNow"
                     class="font-semibold bg-danger border-danger w-auto inline-block px-4 text-1 flex items-center rounded-b-lg h-8 text-white dark:text-black">
                    Live
                </div>
                <div x-show="!lectureData.isRecording && lectureData.isPast"
                     class="font-semibold bg-warn border-warn w-auto inline-block px-4 text-1 flex items-center rounded-b-lg h-8 text-white dark:text-black">
                    Past
                </div>
                <div x-show="!lectureData.isPast && !lectureData.isLiveNow && !lectureData.isRecording"
                     class="font-semibold bg-info border-info w-auto inline-block px-4 text-1 flex items-center rounded-b-lg h-8 text-white dark:text-black">
                    Scheduled
                </div>
                <div x-data="{ moreDropdownOpen: false,
                               toggleMoreDropdown() {
                                 if (this.moreDropdownOpen) {
                                   return this.closeMoreDropdown();
                                 }
                                 this.$refs.button.focus();
                                 this.moreDropdownOpen = true;
                               },
                               closeMoreDropdown(focusAfter) {
                                 if (! this.moreDropdownOpen) return;
                                 this.moreDropdownOpen = false;
                                 focusAfter && focusAfter.focus();
                                }
                              }"
                     x-on:keydown.escape.prevent.stop="closeMoreDropdown($refs.button)"
                     x-on:focusin.window="! $refs.panel.contains($event.target) && closeMoreDropdown()"
                     x-id="['dropdown-button']"
                     class="relative">

                    <button
                            x-ref="button"
                            x-on:click="toggleMoreDropdown()"
                            :aria-expanded="moreDropdownOpen"
                            :aria-controls="$id('more-dropdown-button')"
                            type="button"
                            class="px-5 py-1 text-sm"
                    >
                        <i class="fas fa-chevron-down"></i>
                    </button>

                    <!-- Series Options -->
                    <div
                            x-ref="panel"
                            x-show="moreDropdownOpen"
                            x-transition.origin.top.right
                            x-on:click.outside="closeMoreDropdown($refs.button)"
                            :id="$id('more-dropdown-button')"
                            style="display: none;"
                            class="absolute left-0 mt-2 w-36 bg-white dark:bg-gray-800 border border-black rounded shadow-md overflow-hidden z-10"
                    >
                        <div>
                            <button @click="startSingleEdit(); closeMoreDropdown();"
                                    class="block w-full px-4 py-2 text-left text-sm text-gray-400 dark:hover:text-gray-500 hover:text-gray-300">
                                Edit Lecture
                            </button>
                            <button @click="deleteLecture(); closeMoreDropdown();"
                                    class="block w-full px-4 py-2 text-left text-sm text-red-400 dark:hover:text-red-500 hover:text-red-300">
                                Delete Lecture
                            </button>
                            <button x-text="lectureData.private?'Make public': 'Make private'"
                                    class="block w-full px-4 py-2 text-left text-sm"
                                    @click="toggleVisibility(); closeMoreDropdown()"
                                    x-show="lectureData.isRecording"
                                    :class="lectureData.private?'text-gray-400 dark:hover:text-gray-500 hover:text-gray-300':'text-red-400 dark:hover:text-red-500 hover:text-red-300'">
                                Make private
                            </button>
                        </div>
                        <template x-if="lectureData.seriesIdentifier.length > 0">
                            <div class="border-t border-black">
                                <button @click="startSeriesEdit(); closeMoreDropdown();"
                                        class="block w-full px-4 py-2 text-left text-sm text-gray-400 dark:hover:text-gray-500 hover:text-gray-300">
                                    Edit Series
                                </button>
                                <button @click="deleteLectureSeries(); closeMoreDropdown();"
                                        class="block w-full px-4 py-2 text-left text-sm text-red-400 dark:hover:text-red-500 hover:text-red-300">
                                    Delete Series
                                </button>
                            </div>
                        </template>
                    </div>
                </div>
            </div>
        </div>

        <button x-show="uiEditMode == 0"
                @click="startSingleEdit()"
                class="bg-gray-100 dark:bg-gray-900 w-full py-2 mt-2 rounded-b">
            <span class="text-gray-700 dark:text-gray-300">Edit Lecture</span>
        </button>

        <div x-show="uiEditMode > 0" class="grid gap-y-4 p-4">
            <article class="grid gap-2 w-full">
                <header class="border-b dark:border-gray-600 w-full">
                    <h6 class="text-sm text-5 font-light">Media</h6>
                </header>
                <article x-data="{ id: `lecture_media_${lectureData.lectureId}`, progress: { 'COMB': 0, 'PRES': 0, 'CAM': 0 } }"
                         @voduploadprogressedit.window="({ detail: { type, progress, lectureId } }) => { if (lectureId === lectureData.lectureId) { progress[type] = progress; }}"
                         class="w-full flex justify-center flex-wrap">
                    <template x-for="video in videoFiles" :key="video.info.key">
                        <div x-data="{ file: getVideoFile(video.info.key) }"
                             x-on:click="() => document.querySelector(`#${video.inputId}`).click()"
                             class="h-40 w-[30%] mx-[1.5%] my-2 bg-black/30 dark:bg-black/20 rounded relative max-xl:min-w-full cursor-pointer text-white overflow-hidden"
                        >
                            <div class="absolute bg-cover bottom-0 left-0 right-0 top-0 brightness-75" :style="`background-image: url('/api/stream/${lectureData.lectureId}/thumbs/vod?type=${video.info.type}')`"></div>
                            <div class="absolute text-sm bottom-3 left-3 rounded-full bg-black/20 inline-block px-2" x-text="video.title"></div>
                            <div class="w-full h-full flex justify-center items-center drop-shadow-[2px_4px_6px_black]">
                                <span x-show="!file">Click to upload new Video</span>
                                <template x-if="file !== null">
                                    <span class="text-green-400" x-text="file.name"></span>
                                </template>
                            </div>
                            <div x-on:click="() => { $event.stopPropagation(); changeSet.patch(video.info.key, null); file = getVideoFile(video.info.key); }" x-show="file" class="absolute text-sm top-3 right-3 rounded-full bg-black/20 inline-block px-3">
                                <i class="fa fa-xmark text-3"></i>
                            </div>
                            <input :id="video.inputId" class="hidden" :name="video.info.key" type="file" accept="video/mp4" x-bind-change-set.single="changeSet" @csupdate="(e) => { file = e.detail; }" />
                            <div x-show="lectureData.isSaving && file !== null" class="absolute top-0 left-0 bottom-0 right-0 bg-black/[.8] flex justify-center items-center font-bold text-2xl">
                                <span x-text="`${progress[video.info.type]}%`"></span>
                            </div>
                        </div>
                    </template>
                </article>
                <header class="border-b dark:border-gray-600 w-full">
                    <h6 class="text-sm text-5 font-light">Title and Description</h6>
                </header>
                <article x-data="{ id: $id('text-input') }"
                         class="w-full">
                    <label :for="id" class="hidden">Lecture Title</label>
                    <input :id="id"
                           class="grow tl-input" type="text"
                           x-bind-change-set:name="changeSet"
                           placeholder="Lecture 2: Dark-Patterns I"
                           autocomplete="off">
                </article>
                <section>
                    <article x-data="{ id: $id('text-input') }"
                             class="w-full">
                        <label :for="id" class="hidden">Lecture description</label>
                        <textarea :id="id"
                                  @drop.prevent="(e) => onAttachmentFileDrop(e)"
                                  @dragover.prevent=""
                                  class="tl-textarea grow"
                                  placeholder="Add a nice description, links, and more. You can use Markdown. Drop files here."
                                  autocomplete="off"
                                  x-bind-change-set:description="changeSet"></textarea>
                    </article>
                    <article class="flex justify-center">
                        <span class="text-xs text-3 my-auto">Attach files or URL to files by Drag & Drop in the description field.</span>
                        <help-icon text="Attachments allow students to download (additional) material directly from this TUMLive-stream."/>
                    </article>
                </section>

                <div x-show="!lectureData.isPast && !lectureData.isRecording"
                     class="p-3 border dark:border-gray-600 rounded mt-3">
                    {{if .IndexData.TUMLiveContext.IsAdmin}}
                        <div x-data="{ id: $id('select') }">
                            <label class="mx-2">
                                <span>Select Lecture Hall</span>
                                <select class="text-gray-700 dark:text-gray-300 dark:bg-secondary bg-gray-100 p-2"
                                        :id="id"
                                        name="lectureHallId"
                                        x-bind-change-set.int="changeSet">
                                    <option class="text-gray-700 dark:text-gray-300" value="0">
                                        Self streaming
                                    </option>
                                    {{range $lectureHall := $lectureHalls}}
                                        <option class="text-gray-700 dark:text-gray-300" value="{{$lectureHall.Model.ID}}">
                                            {{$lectureHall.Name}}
                                        </option>
                                    {{end}}
                                </select>
                            </label>
                        </div>
                    {{end}}
                    {{if .IndexData.TUMLiveContext.IsLecturer}}
                        <div x-show="lectureData.newLectureHallId !== '0'">
                            This lecture will be streamed from <span
                                    class="font-semibold text-white">{{range $lectureHall := $lectureHalls}}<span
                                        x-show="lectureData.lectureHallId === '{{$lectureHall.Model.ID}}'">{{$lectureHall.Name}}</span>{{end}}</span>.
                            If you need this changed or want to stream from home (with obs, zoom etc.), please reach
                            out to the RBG.
                        </div>
                    {{end}}
                </div>
            </article>

            <template x-if="lectureData.hasAttachments">
                <article>
                    <h6 class="text-sm text-5 font-light border-b dark:border-gray-600">Attachments</h6>
                    <ul class="list-disc grid py-2 ml-6">
                        <template x-for="file in lectureData.files">
                            <template x-if="file.fileType === admin.FileType.attachment">
                                <li>
                                    <section class="flex items-center">
                                    <span class="text-xs font-semibold text-3 my-auto"
                                          x-text="file.friendlyName"></span>
                                        <button class="px-3"
                                                @click="deleteAttachment(file.id)">
                                            <i class="fa fa-xmark"></i>
                                        </button>
                                    </section>
                                </li>
                            </template>
                        </template>
                    </ul>
                </article>
            </template>

            <template x-if="uiEditMode > 0"> <!-- only render if in edit mode to avoid network calls -->
                {{template "editvideosections"}}
            </template>

            <span x-show="lectureData.isRecording" class="absolute left-0 bottom-0 p-4">
                <!-- buttons go here -->
            </span>

            <div x-show="lastErrors.length > 0" class="px-6 py-3 bg-red-400 my-3 rounded">
                <ul>
                    <template x-for="error in lastErrors">
                        <li x-text="error"></li>
                    </template>
                </ul>
            </div>

            <div class="mt-6 flex items-center justify-between">
                <section class="flex items-center py-1 px-3">
                    <label class="relative inline-flex items-center cursor-pointer">
                        <input type="checkbox" name="isChatEnabled" class="sr-only peer" x-bind-change-set="changeSet" />
                        <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-600
                        dark:peer-focus:ring-indigo-600 rounded-full peer dark:bg-gray-600 peer-checked:after:translate-x-full
                        peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px]
                        after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5
                        after:transition-all dark:border-gray-600 peer-checked:bg-blue-600 dark:peer-checked:bg-indigo-600"></div>
                        <span class="ml-3 text-sm font-medium text-3">Chat Enabled</span>
                    </label>
                </section>
                <div>
                    <button :disabled="isSaving" @click="discardEdit();"
                            class="px-8 py-3 text-2 text-white rounded bg-indigo-500/70 hover:bg-indigo-500/90 dark:bg-indigo-500/10 disabled:opacity-20 dark:hover:bg-indigo-500/20 mr-4">
                        Discard Changes
                    </button>
                    <button
                            @click="saveEdit();"
                            :disabled="!isDirty || isSaving"
                            class="px-8 py-3 text-2 rounded text-white bg-indigo-500 hover:bg-indigo-600 disabled:opacity-20 disabled:hover:bg-indigo-500"
                            x-text="isSaving ? 'loading ...' : (uiEditMode === admin.UIEditMode.single ? 'Save Lecture' : 'Save Series')"
                    ></button>
                </div>
            </div>
        </div>
    </li>
{{end}}