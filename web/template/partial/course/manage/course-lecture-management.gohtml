{{define "course-lecture-management"}}
    {{- /*gotype: github.com/joschahenningsen/TUM-Live/web.AdminPageData*/ -}}
    {{$course := .IndexData.TUMLiveContext.Course}}
    {{$user := .IndexData.TUMLiveContext.User}}
    {{$ingestBase := .IngestBase}}
    {{$lectureHalls := .LectureHalls}}
    <div x-data="{ filterPast: false,
                   selectedLectures: [],
                   selectedLectureHallId: 0,
                   sortAsc: $persist(false).as('courseStreamsSortOrder') }"
         class="form-container-body">
        <div class="flex justify-between">
            <div class="flex">
                {{- /*buttons header left*/ -}}
                <button @click="admin.deleteLectures({{$course.Model.ID}}, selectedLectures.map(({id}) => id))"
                        :disabled="selectedLectures.length == 0" class="btn mt-2">
                    Delete
                    <b x-text="selectedLectures.length.toString()"></b>
                    <span x-text="selectedLectures.length == 1 ? 'Lecture' : 'Lectures'"></span>
                </button>

                {{if eq $user.Role 1}}
                    <div class="flex items-center">
                        <label class="mx-2">
                            <select class="tl-select w-fit"
                                    id="lectureHallBulkSelect"
                                    x-model="selectedLectureHallId"
                                    :disabled="selectedLectures.length == 0 || selectedLectures.some(({isPast}) => isPast)">
                                <option value="0">Self streaming
                                </option>
                                {{range $lectureHall := $lectureHalls}}
                                    <option value="{{$lectureHall.Model.ID}}">
                                        {{$lectureHall.Name}}
                                    </option>
                                {{end}}
                            </select>
                        </label>
                        <button
                                x-show="selectedLectures.length > 0 && !selectedLectures.some(({isPast}) => isPast)"
                                @click="admin.saveLectureHall(selectedLectures.map(({id}) => id), selectedLectureHallId).then(() => { window.location.reload(); })"
                        >
                            <i class="align-middle fas fa-check text-gray-300"></i>
                        </button>
                    </div>
                {{end}}

            </div>
            <div class="flex">
                {{- /*buttons header right*/ -}}
                <button class="border bg-white border-gray-300 rounded w-20 my-auto shadow-sm text-gray-600
                                           hover:border-black hover:text-black
                                           dark:bg-gray-700 dark:border-gray-800 dark:text-gray-200 dark:hover:border-gray-100
                                           dark:hover:text-white"
                        @click="sortAsc = !sortAsc;">
                                <span class="text-sm font-semibold uppercase m-auto"
                                      x-text="sortAsc ? '&#x25B2; asc' : '&#x25BC; desc'">&#x25BC; desc</span>
                </button>
            </div>
        </div>

        {{- /* streams: */ -}}
        <div x-data="{ lectures: [], marked: [] }"
             x-on:newlectures.window="e => {lectures = e.detail.lectures; marked = e.detail.markedIds; }"
             x-init="$nextTick(() => admin.LectureList.init({{toJson ($course.AdminJson $lectureHalls)}}))">
            <ul class="flex" :class="sortAsc ? 'flex-col' : 'flex-col-reverse'">
                <template x-for="lecture in lectures" :key="lecture.lectureId">
                    {{template "lecture-management-card" .}}
                </template>
            </ul>
        </div>
    </div>

{{end}}
