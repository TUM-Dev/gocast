{{define "chat"}}
    {{- /*gotype: github.com/joschahenningsen/TUM-Live/web.ChatData*/ -}}
    {{$stream := .IndexData.TUMLiveContext.Stream}}
    {{$startTime := $stream.ParsableStartTime}}
    {{$liveNowTimestamp := $stream.ParsableLiveNowTimestamp}}
    {{$liveNow := $stream.LiveNow}}
    {{$isComingUp := $stream.IsComingUp}}
    {{$userName := ""}}
    {{$userId := 0}}
    {{if .IndexData.TUMLiveContext.User}}
        {{$userName = .IndexData.TUMLiveContext.User.Name}}
        {{$userId = .IndexData.TUMLiveContext.User.ID}}
    {{end}}
        <div x-data="watch.chatContext()"></div>
    <div x-cloak
         x-data="watch.initChat({{.IsAdminOfCourse}}, {{$stream.ID}}, '{{$startTime}}', '{{$liveNowTimestamp}}', {{$userId}}, '{{$userName}}', {{not (or $isComingUp $liveNow .IsPopUp)}});"
         x-init="await Promise.all([c.loadMessages(), c.poll.load(), c.loadPollHistory()]); $nextTick(() => { watch.scrollToBottom(); window.dispatchEvent(new CustomEvent('chatinitialized')); });"
         x-on:chatmessage.window="e => c.onMessage(e);"
         x-on:chatreply.window="e => c.onReply(e);"
         x-on:chatdelete.window="e => c.onDelete(e);"
         x-on:chatresolve.window="e => c.onResolve(e);"
         x-on:chatreactions.window="e => c.onReaction(e);"
         x-on:chatapprove.window="e => { c.patchMessage(e.detail.chat); $nextTick(() => { watch.scrollToBottom() }); }"
         x-on:chatretract.window="e => { c.patchMessage(e.detail.chat); $nextTick(() => { watch.scrollToBottom() }); }"
         x-on:chatnewpoll.window="e => c.onNewPoll(e);"
         x-on:polloptionvotesupdate.window="e => c.onPollOptionVotesUpdate(e);"
         x-on:polloptionresult.window="e => c.onPollOptionResult(e);"
         x-on:wsrealtimeconnectionchange.window="e => c.disconnected = !e.detail.status;"
         @chatpopupmessageupdate.window="e => initPromise.next(() => c.onPopUpMessagesUpdated(e));"
         @chatupdategrayedout.window="e => c.onGrayedOutUpdated(e);"
         @chatupdatefocus.window="e => c.onFocusUpdated(e);"
         @disconnected.window="c.disconnected = true;"
         @connected.window="c.disconnected = false;"
         @reorder.window="c.sortMessages()"
         @keyup.escape="c.current.cancelReply()"
         id="chatWrapper"
         class="flex relative flex-col text-1 h-full">
        <!-- Chat header -->
        <div class="flex items-center justify-between sticky top-0 z-40 w-full px-3 max-h-12 h-12 rounded-t-lg bg-white dark:bg-secondary border-b dark:border-gray-800"
             style="min-height: 3rem;"> <!-- since there is no min-h-12 class -->
            <div class="flex items-center">
                {{if not .IsPopUp}}
                    <button x-show="!{{.IsPopUp}}"
                            class="flex bg-transparent border-0 font-semibold h-8 w-8 rounded-full mr-2 hover:dark:bg-gray-600 hover:bg-gray-100"
                            @click="c.openChatPopUp('{{.IndexData.TUMLiveContext.Course.Slug}}', {{.IndexData.TUMLiveContext.Stream.Model.ID}})"
                            title="Popout Chat"
                            type="button">
                        <i class="fas fa-external-link-alt text-3 m-auto"></i>
                    </button>
                {{end}}
                <template
                        x-if="c.admin && c.showPolls() && !c.poll.activePoll  && !c.disconnected && !c.poll.showCreateUI">
                    <button x-cloak
                            @click="c.poll.showCreateUI = !c.poll.showCreateUI; c.users.clear()"
                            class="text-white text-xs uppercase font-semibold rounded-full px-2 py-1 bg-blue-500 dark:bg-indigo-600
                                hover:bg-blue-600 hover:dark:bg-indigo-700"
                            title="Create Poll"
                            tabindex="-1"
                            type="button">
                        <span>New Poll</span>
                    </button>
                </template>
                <template x-if="c.showMessages()">
                    <button x-data="{oldChatReplayActive: c.chatReplayActive}"
                            x-init="
                        $watch('c.chatReplayActive', (value) => {
                            if (value) {
                                c.orderByLikes = false;
                            }});

                        $watch('c.orderByLikes', (value) => {
                            watch.setOrder(value);
                            window.dispatchEvent(new CustomEvent('reorder'));
                            if ({{$liveNow}}) {
                                value ? watch.scrollToTop() : watch.scrollToBottom();
                                return;
                            }
                            if (value) {
                                oldChatReplayActive = c.chatReplayActive;
                                c.chatReplayActive = false;
                                watch.scrollToTop();
                            }
                            else if (oldChatReplayActive) {
                                c.chatReplayActive = true;
                            }
                        });"
                            @click="c.orderByLikes=!c.orderByLikes; watch.setOrder(c.orderByLikes); window.dispatchEvent(new CustomEvent('reorder'));; c.orderByLikes? watch.scrollToTop(): watch.scrollToBottom()"
                            class="text-3 text-sm font-semibold rounded-full px-2 py-1 hover:bg-gray-100 hover:dark:bg-gray-600"
                            title="Change Order">
                        <span x-text="c.orderByLikes? 'Popular First': 'Live Chat'"></span>
                    </button>
                </template>
            </div>
            <div class="flex items-center my-auto space-x-2 ml-auto">
                <button class="flex border-0 h-8 w-8 rounded-full"
                        :class="c.chatReplayActive ? 'bg-gray-100 dark:bg-gray-600 hover:bg-transparent' : 'bg-transparent hover:dark:bg-gray-600 hover:bg-gray-100'"
                        x-show="{{not (or $isComingUp $liveNow .IsPopUp)}}"
                        title="(De-)Activate Chat Replay"
                        @click="c.chatReplayActive = !c.chatReplayActive;"
                        x-init="
                            $watch('c.chatReplayActive', (value) => {
                                value ? c.activateChatReplay() : c.deactivateChatReplay();
                            })">
                    <i class="fa-solid fa-clock-rotate-left m-auto text-sm"></i>
                </button>

                <!-- Toggle Chat and Polls -->
                <button x-cloak x-show="c.showMessages()" type="button" @click="c.showPolls(true);"
                        class="relative text-3 text-sm font-semibold rounded-full px-2 py-1 hover:bg-gray-100 hover:dark:bg-gray-600"
                        title="Show Polls">
                    <template x-if="c.poll.activePoll && !c.admin && c.poll.activePoll.submitted === 0">
                        <span class="absolute flex h-3 w-3 top-0 -right-1">
                          <span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-blue-500/50 dark:bg-indigo-600/50"></span>
                          <span class="relative inline-flex rounded-full h-3 w-3 bg-blue-500 dark:bg-indigo-600"></span>
                        </span>
                    </template>
                    <span class="z-50">Polls</span>
                </button>
                <button x-cloak x-show="c.showPolls()" type="button" @click="c.showMessages(true);"
                        class="text-3 text-sm font-semibold rounded-full px-2 py-1 hover:bg-gray-100 hover:dark:bg-gray-600"
                        title="Show Chat">
                    <span>Chat</span>
                </button>
            </div>
        </div>

        <!-- Polls -->
        <div x-cloak x-show="c.showPolls()" id="pollBox"
             class="relative h-full w-full overflow-y-scroll overflow-x-hidden p-2 z-30">
            <div class="grid gap-y-8 content-start">
                <template x-if="c.poll.activePoll">
                    <div class="rounded-lg border-2 border-blue-500/50 dark:border-indigo-600/50 p-2 space-y-2">
                        <div class="flex items-center text-lg border-b dark:border-gray-800 py-1 px-2">
                            <span class="font-bold" x-text="c.poll.activePoll.question"></span>
                        </div>
                        <div>
                            <template x-for="option in c.poll.activePoll.pollOptions" :key="option.ID">
                                <div>
                                    <template x-if="c.admin">
                                        <div class="mb-3 pl-3 pr-3">
                                            <div class="flex justify-between pr-2">
                                                <span class="text-sm flex items-end" x-text="option.answer"></span>
                                                <span class="text-xs flex items-end"
                                                      x-text="option.votes + ' Votes'"></span>
                                            </div>
                                            <div :style="`width: ${watch.getPollOptionWidth(c.poll.activePoll.pollOptions, option)};`"
                                                 class="rounded-full h-4 bg-blue-500/50 dark:bg-indigo-600"></div>
                                        </div>
                                    </template>
                                    <template x-if="!c.admin">
                                        <button class="flex items-center px-2 pb-1"
                                                @click="c.poll.activePoll.selected = option.ID"
                                                :disabled="c.poll.activePoll.submitted !== 0">
                                            <i class=""
                                               :class="(option.ID === c.poll.activePoll.selected || c.poll.activePoll.submitted === option.ID) ? 'fas fa-check-circle' : 'far fa-circle'"></i>
                                            <span x-text="option.answer" class="ml-2 text-sm"></span>
                                        </button>
                                    </template>
                                </div>
                            </template>
                        </div>
                        <template x-if="c.admin">
                            <div class="flex justify-end pt-2">
                                <button class="bg-blue-500 hover:bg-blue-600 dark:bg-indigo-600 dark:hover:bg-indigo-700
                                    disabled:bg-gray-400 dark:disabled:bg-gray-400 rounded-full
                                    focus:outline-none px-2 py-1 text-white font-semibold uppercase text-xs"
                                        x-text="!c.poll.activePoll.active ? 'Poll closed' : 'Publish & Close'"
                                        @click="c.poll.activePoll = null; watch.closeActivePoll();"
                                        :disabled="!c.poll.activePoll.active"
                                        title="Close poll">
                                </button>
                            </div>
                        </template>
                        <template x-if="!c.admin">
                            <div class="flex justify-end pt-2">
                                <button class="bg-blue-500 hover:bg-blue-600 dark:bg-indigo-600 dark:hover:bg-indigo-700
                                disabled:bg-gray-400 dark:disabled:bg-gray-400 rounded-full
                                focus:outline-none px-2 py-1 text-white font-semibold uppercase text-xs"
                                        x-text="c.poll.activePoll.submitted !== 0 ? 'Answer submitted' : 'Send Answer'"
                                        @click="c.poll.activePoll.submitted = c.poll.activePoll.selected; watch.submitPollOptionVote(c.poll.activePoll.selected); c.poll.activePoll.selected = null;"
                                        :disabled="c.poll.activePoll.selected === null || c.poll.activePoll.submitted !== 0"
                                        title="Send Answer">
                                </button>
                            </div>
                        </template>
                    </div>
                </template>
                <template x-if="c.pollHistory.length > 0">
                    <template x-for="(poll,_) in c.pollHistory" :key="poll.ID">
                        <div class="rounded-lg border dark:border-gray-800">
                            <div class="flex items-center border-b dark:border-gray-800 py-1 px-2">
                                <span class="text-sm font-bold my-auto" x-text="poll.question"></span>
                            </div>
                            <div class="pt-2">
                                <template x-for="option in poll.options" :key="option.ID">
                                    <div class="mb-3 pl-3 pr-3">
                                        <div class="flex justify-between pr-2">
                                            <span class="text-sm flex items-end" x-text="option.answer"></span>
                                            <span class="text-xs flex items-end"
                                                  x-text="option.votes + ' Votes'"></span>
                                        </div>
                                        <div :style="`width: ${watch.getPollOptionWidth(poll.options, option)};`"
                                             class="rounded-full h-4 bg-blue-500/50 dark:bg-indigo-600"></div>
                                    </div>
                                </template>
                            </div>
                        </div>
                    </template>
                </template>
            </div>
        </div>

        <!-- Messages -->
        <div x-cloak x-show="c.showMessages()" id="chatBox"
             class="grid gap-y-8 content-start h-full w-full overflow-y-scroll overflow-x-hidden px-4 pt-2 pb-5 z-30">
            {{template "messageTemplate" .}}
        </div>

        <!-- Messages -->
        <div>
            {{template "chatprompts"}}
            <form id="chatForm"
                  class="sticky w-full bottom-0 inset-x-0"
                  x-on:sendmessage.window="c.current.send()"
                  @submit.prevent="c.onSubmit()">
                <div class="w-full">
                    <div :class="(c.users.isValid() || c.poll.showCreateUI || c.emojis.isValid() || c.current.showReplyMenu()) && 'border-t dark:border-gray-800 rounded-lg shadow-lg'">
                        <!-- reply -->
                        <template x-if="c.current.showReplyMenu() && !c.poll.showCreateUI">
                            <div x-data="{replyMsg: c.findReplyMessage(c.current.reply)}"
                                 x-init="$watch('c.current.reply', upd => replyMsg = c.findReplyMessage(upd))"
                                 class="text-3 grid gap-2 px-3 pt-2 pb-4 text-sm dark:border-gray-800"
                                 :class="{'border-b' : (c.users.isValid() || c.emojis.isValid())}">
                                <div class="flex justify-between items-center">
                                    <div class="font-semibold">
                                        <i class="fa-solid fa-reply mr-2"></i>
                                        <span x-text="`Replying to @${replyMsg.name}:`"></span>
                                    </div>
                                    <button type="button"
                                            class="text-lg flex bg-transparent border-0 font-semibold rounded-full"
                                            @click="c.current.cancelReply()">
                                        <i class="fa-solid fa-xmark"></i>
                                    </button>
                                </div>
                                <div class="flex">
                                        <span x-show="replyMsg.admin"
                                              class="h-fit fa-video text-xs text-white bg-red-400 p-1 rounded fas mr-1"></span>
                                    <span class="text-2 font-semibold mr-2" x-text="`${replyMsg.name}:`"
                                          :style="'color:'+replyMsg.color"></span>
                                    <span class="" x-html="replyMsg.message"
                                          x-init="$nextTick(() => renderMathInElement($el, global.getKatexOptions()))">
                                        </span>
                                </div>
                            </div>
                        </template>

                        <!-- create poll dialog -->
                        <template x-if="c.poll.showCreateUI">
                            <div class="px-2 pb-2">
                                <div class="flex justify-end p-1">
                                    <button class="flex bg-transparent border-0 font-semibold py-1 px-2 rounded hover:dark:bg-gray-600 hover:bg-gray-100 my-auto"
                                            @click="c.poll.showCreateUI = !c.poll.showCreateUI; c.poll.reset();"
                                            title="Cancel Poll"
                                            tabindex="-1"
                                            type="button">
                                        <i class="fa-solid fa-xmark text-3 m-auto"></i>
                                    </button>
                                </div>
                                <div class="bg-gray-200 dark:bg-gray-600 rounded-lg flex border-2 border-transparent w-full my-auto lg:mr-2">
                                    <label for="pollQuestion" class="hidden"></label>
                                    <textarea
                                            id="pollQuestion" spellcheck="true"
                                            class="bg-transparent w-full h-40 resize-none border-none py-2 px-4 text-sm font-normal placeholder:text-sm focus:outline-none"
                                            maxlength="500"
                                            x-model="c.poll.question"
                                            autocomplete="off"
                                            placeholder="Write a Poll-Question ..."
                                    ></textarea>
                                </div>
                                <div>
                                    <template x-for="(pollOption, index) in c.poll.options" :key="index">
                                        <div class="flex-1 bg-gray-200 dark:bg-gray-600 rounded-lg flex border-2 border-transparent w-full lg:mr-2 my-2">
                                            <input :id="$id('poll-answer')"
                                                   placeholder="Write a Poll-Answer ..." maxlength="240"
                                                   spellcheck="true"
                                                   x-model="pollOption.answer"
                                                   class="bg-transparent w-full py-2 px-4 border-0 text-sm font-normal placeholder:text-sm focus:outline-none">

                                            <button class="flex bg-transparent border-0 font-semibold h-8 w-8 rounded text-4 hover:text-1 disabled:opacity-20"
                                                    :disabled="c.poll.options.length === 1"
                                                    @click="c.poll.removeOption(pollOption);"
                                                    tabindex="-1"
                                                    type="button"
                                                    title="Remove Poll Option">
                                                <i class="fas fa-trash text-3 m-auto text-xs"></i>
                                            </button>
                                        </div>
                                    </template>
                                </div>
                                <div class="flex">
                                    <button tabindex="-1"
                                            class="w-4/5 bg-blue-500 hover:bg-blue-600 dark:bg-indigo-600 dark:hover:bg-indigo-700
                                                   disabled:bg-gray-400 dark:disabled:bg-gray-400
                                                   rounded border-0 focus:outline-none py-1 text-white text-sm"
                                            title="Start Poll"
                                            type="button"
                                            @click="c.poll.showCreateUI = !c.poll.showCreateUI; c.poll.start();"
                                            :disabled="c.poll.question.length === 0 || c.poll.options.some(({ answer }) => answer.length === 0)">
                                        <span class="font-semibold text-xs">Start Poll</span>
                                    </button>
                                    <button tabindex="-1"
                                            class="w-1/5 bg-blue-500 hover:bg-blue-600 dark:bg-indigo-600 dark:hover:bg-indigo-700
                                        rounded border-0 focus:outline-none px-4 text-white text-sm ml-2 py-1"
                                            @click="c.poll.addEmptyOption()"
                                            title="Add Poll Answer"
                                            type="button">
                                        <i class="fas fa-plus m-auto"></i>
                                    </button>
                                </div>
                            </div>
                        </template>

                        <!-- emoji prompt -->
                        {{template "emojipromt"}}

                        <!-- @-userlist -->
                        <template x-if="c.users.isValid() && c.users.subset.length === 0">
                            <p class="text-center pb-1 pt-2 font-semibold text-xs text-3">No users found.</p>
                        </template>
                        <div id="userList" x-show="c.users.isValid()"
                             tabindex="0"
                             class="max-h-56 overflow-y-hidden w-full py-1 px-2 space-y-1 outline-none">
                            <template x-for="(user, i) in c.users.subset">
                                <div @click="c.current.addAddressee(user); c.users.clear()"
                                     @mouseover="c.users.currIndex = i;"
                                     class="flex justify-between p-2 rounded hover:cursor-pointer"
                                     :class="c.users.currIndex === i && 'bg-gray-100 dark:bg-gray-600'">
                                    <span class="font-semibold text-3 text-xs my-auto" x-text="user.name"></span>
                                    <span x-show="c.users.currIndex === i"
                                          class="px-1 text-xs rounded text-3 bg-gray-200 dark:bg-gray-500">&#9166;</span>
                                </div>
                            </template>
                        </div>

                        <!-- input -->
                        <div x-show="!c.poll.showCreateUI"
                             class="relative flex my-auto px-3 border-t dark:border-gray-800 py-2">
                            {{if .IndexData.TUMLiveContext.Course.AnonymousChatEnabled}}
                                <input type="checkbox" name="anonymous" id="anonymous" class="hidden"
                                       x-model="c.current.anonymous" :disabled="c.disconnected">
                                <label for="anonymous" class="flex items-center cursor-pointer text-4 hover:text-3"
                                       :class="c.current.anonymous && 'text-blue-500'"
                                       title="Don't show my name.">
                                    <i class="fas fa-ghost"></i>
                                </label>
                            {{end}}
                            <label for="chatInput" class="hidden">Chat input</label>
                            <input id="chatInput" type="text" spellcheck="true"
                                   maxlength="200"
                                   x-ref="chatInput"
                                   x-model="c.current.message"
                                   x-on:setmessage.window="e=>c.current.message=e.detail"
                                   @keyup="e => { c.current.parse(); c.onInputKeyUp(e); }"
                                   class="py-2 px-4 border-0 bg-transparent text-sm font-normal placeholder:text-sm focus:outline-none w-full"
                                   {{if not (.IndexData.TUMLiveContext.User)}}disabled
                                   placeholder="Log in to chat" {{else}}
                                   :placeholder="c.getInputPlaceHolder()"
                                   :disabled="c.disconnected"
                                   {{end}}autocomplete="off">
                            <div class="absolute right-3 top-0 bottom-0 flex">
                                <div x-show="c.disconnected"
                                     class="m-auto">
                                    <svg class="w-5 h-5 animate-spin text-sky-400 dark:text-indigo-400 fill-sky-600 dark:fill-indigo-600"
                                         viewBox="0 0 100 101" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z"
                                              fill="currentColor"/>
                                        <path d="M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z"
                                              fill="currentFill"/>
                                    </svg>
                                </div>
                            </div>
                            <button tabindex="-1"
                                    class="cursor-pointer"
                                    title="Send message"
                                    type="submit"
                                    x-show="!c.disconnected"
                                    {{if not (.IndexData.TUMLiveContext.User)}} disabled {{end}}
                                    :disabled="c.current.isEmpty() || c.disconnected">
                                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill=""
                                     class="bi bi-send-fill rotate-45 fill-blue-500 hover:fill-blue-600 dark:fill-indigo-600 hover:dark:fill-indigo-700"
                                     viewBox="0 0 16 16">
                                    <path d="M15.964.686a.5.5 0 0 0-.65-.65L.767 5.855H.766l-.452.18a.5.5 0 0 0-.082.887l.41.26.001.002 4.995 3.178 3.178 4.995.002.002.26.41a.5.5 0 0 0 .886-.083l6-15Zm-1.833 1.89L6.637 10.07l-.215-.338a.5.5 0 0 0-.154-.154l-.338-.215 7.494-7.494 1.178-.471-.47 1.178Z"/>
                                </svg>
                            </button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
{{end}}
