{{define "emojipicker"}}
    <div x-data="{ open: false, id: '{{.}}', hoveredIndex: 0 }"
         @click.outside="() => emojiPicker.close()"
         :data-id="emojiPicker.id"
         class="absolute ease-out duration-100 bg-white dark:bg-secondary border-2 border-solid border-gray-200 dark:border-black rounded left-[-50px] top-[-36px] text-left overflow-hidden whitespace-nowrap p-2 flex flex-row"
         :class="open ? 'scale-100 opacity-1 translate-x-0 translate-y-0' : 'scale-0 opacity-0 translate-x-[-42px] translate-y-[42px]'"
         x-on:emojipickeropen.window="(e) => emojiPicker.eventOwner(e) && (open = true)" {{/* show emoji picker */}}
         x-on:emojipickerclose.window="(e) => emojiPicker.eventOwner(e) && (open = false)" {{/* hide emoji picker */}}
    >
        <template x-for="(emoji, i) in emojiPicker.suggestions">
            <button type="button"
                    :title="`:${emoji.short_names[0]}:`" {{/* e.g. ':eyes:' */}}
                    x-text="emoji.emoji"
                    x-on:mouseenter="() => (hoveredIndex=i)" {{/* Select emoji on hover */}}
                    :class="hoveredIndex===i && 'bg-gray-100 dark:bg-gray-600'"
                    @click="emojiPicker.onSelect(emoji)" {{/* notify emoji click */}}
                    class="cursor-pointer mr-1 ml-1 h-5 w-5 rounded text-xs">
            </button>
        </template>
    </div>
{{end}}