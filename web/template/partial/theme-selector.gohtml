{{define "theme-selector-content"}}
    <div class="my-auto w-full min-h-30 max-h-60 overflow-y-auto">
        <template x-for="[modeId, mode] of Object.entries($store.theme.modes)" :key="modeId">
            <button type="button" tabindex="0"
                 x-data="{ active: () => modeId === $store.theme.activeMode }"
                 class="md:p-2 p-1 w-full md:border-b dark:border-gray-800 md:text-normal md:font-normal font-light text-sm relative last:border-0
                               transition-colors duration-200 text-5 hover:text-1"
                 :class="(active() ? ['bg-gray-100', 'dark:bg-secondary-lighter'] : []).concat(mobile ? ['px-5'] : [])"
                 type="button"
                 @click="$store.theme.setMode(modeId); show=false;">
                <div class="flex items-center" :class="mobile ? 'flex-row-reverse' : ''">
                    <i class="fa-solid" :class="['fa-' + mode.faIconId, mobile ? 'ml-8' : 'mr-2']"></i>
                    <p x-text="mode.name" :class="mobile ? 'mr-2' : ''"></p>
                </div>
            </button>
        </template>
    </div>
{{end}}

{{define "theme-switcher-icon"}}
<i class="fa-solid" :class="'fa-' + (mode => mode.faSwitcherIconId ?? mode.faIconId)($store.theme.modes[$store.theme.activeMode])"></i>
{{end}}

{{define "theme-selector"}}
    <div class="relative" x-data="{ show: false, mobile: false }">
        <button title="Select Theme" class="transition-colors duration-200 hover:text-gray-600
                       dark:hover:text-white text-gray-400 mr-6 relative w-4"
                type="button" @click="show=!show">
            {{template "theme-switcher-icon"}}
        </button>
        <div x-cloak x-show="show"
             @click.outside="show=false"
             class="origin-top-right absolute right-0 mt-4 shadow-sm rounded-lg h-fit bg-white border w-36
                    dark:bg-secondary dark:border-gray-800 overflow-hidden">
            {{template "theme-selector-content"}}
        </div>
    </div>
{{end}}
