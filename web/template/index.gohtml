<!DOCTYPE html>
<html lang="en" class="dark">
<head>
    <meta charset="UTF-8">
    <title>TUM Live</title>
    {{template "headImports" .VersionTag}}
    <meta name="description"
          content="TUM-Live, the livestreaming and VoD service of the Rechnerbetriebsgruppe at the department of informatics and mathematics at the Technical University of Munich"/>
</head>
<body>
{{template "header" .TUMLiveContext}}

{{- /*gotype: github.com/joschahenningsen/TUM-Live/web.IndexData*/ -}}
{{$user := .TUMLiveContext.User}}
<div x-init="global.liveUpdateListener.init()" class="m-auto px-1 sm:px-3 lg:px-5 w-full xl:w-2/3 flex flex-col pb-16">

    <div class="my-8 pl-2 md:pl-0">
        <h1 class="font-bold text-3xl text-1 my-auto">Streams and Courses</h1>
        <p class="text-lg text-3">
            {{if not .TUMLiveContext.User}}
                <a href="/login" class="underline">Log in</a> to see your courses
            {{else if .TUMLiveContext.User.Name}}
                {{.TUMLiveContext.User.GetPreferredGreeting}}
                <span class="underline"><a href="/settings">{{.TUMLiveContext.User.GetPreferredName}}</a></span>,
                nice to see you!
            {{end}}
        </p>
    </div>

    {{if .ServerNotifications}}
        {{range $notification := .ServerNotifications}}
            <p class="{{if $notification.Warn}} text-red-400{{else}} text-yellow-400{{end}}"><i
                        class="fas fa-exclamation-triangle mr-2"></i><span>{{$notification.Text}}</span></p>
        {{end}}
    {{end}}

    {{/*TODO: move out of template*/}}
    {{$has_courses_where := dict "preferred" false "pinned" false "my-courses" false}}
    {{range $course := .PinnedCourses}}
        {{if not $course.IsHidden}}
            {{$_1 := set $has_courses_where "preferred" true}}
            {{$_2 := set $has_courses_where "pinned" true}}
            {{break}}
        {{end}}
    {{end}}
    {{range $course := .Courses}}
        {{if and (not $course.IsHidden) (not $course.Pinned)}}
            {{$_1 := set $has_courses_where "preferred" true}}
            {{$_2 := set $has_courses_where "my-courses" true}}
            {{break}}
        {{end}}
    {{end}}
    {{$show_suggested := .SuggestedStreams}}
    {{$show_preferred_courses := get $has_courses_where "preferred"}}
    {{$show_other_courses := .PublicCourses }} {{/* use as boolean */}}

    <style>
        /*TODO get rid of "this"...*/
        .home-page-grid {
            grid:
            {{if $show_suggested}} [suggested-start] 'suggested suggested' auto [suggested-end] {{end}}
            {{if $show_preferred_courses}} [preferred-courses-start] 'preferred-courses preferred-courses' auto [preferred-courses-end] {{end}}
            {{if $show_other_courses}} [other-courses-start] 'other-courses other-courses' auto [other-courses-end] {{end}}
            [hidden-courses-start] 'hidden-courses hidden-courses' auto [hidden-courses-end]
        }
    </style>

    <div class="grid gap-3 lg:gap-5 home-page-grid">
        {{if $show_suggested}}
            <div style="grid-area: suggested">
                {{template "highlight-box-head" dict "highlight-color" "dark:bg-green-400 bg-green-500" "title" "Suggested"}}
                    {{$card_grid_state := (dict)}}
                    {{template "card-grid-head" dict "max-rows" 2 "max-items" 4 "state" $card_grid_state}}
                        {{$args := .}}
                        {{range $i := list 1 2 3}}
                        {{range $stream := $args.SuggestedStreams}}
                            {{template "card-grid-item-head" $card_grid_state}}
                                {{template "stream-card" dict
                                    "stream" $stream.Stream
                                    "course" $stream.Course
                                    "lecture-hall" $stream.LectureHall
                                    "standalone" true}}
                            {{template "card-grid-item-tail"}}
                        {{end}}
                        {{end}}
                    {{template "card-grid-tail"}}
                {{template "highlight-box-tail"}}
            </div>
        {{end}}
        {{/*TODO: make less nested/simplify*/}}
        {{if $show_preferred_courses}}
            <div class="[grid-area:preferred-courses]">
                {{template "highlight-box-head" dict "title" "My Courses"}} {{/*"highlight-color" "dark:bg-red-500 bg-red-600" */}}
                    <div class="flex flex-col gap-6">
                        {{if get $has_courses_where "pinned"}}
                            <div>
                                {{if get $has_courses_where "my-courses"}}
                                    <p class="mx-2 mb-2 text-5 text-sm uppercase">Pinned</p>
                                {{end}}
                                <div class="flex flex-col gap-3 md:gap-5">
                                    {{$args := .}}
                                    {{/*add more elements to the list to generate more items for testing*/}}
                                    {{range $_ := list 1}}
                                    {{range $i, $course := $args.PinnedCourses}}
                                        {{if not $course.IsHidden}}
                                            {{template "course-group-head" $course}}
                                                {{/*TODO: dropdown button unnecessarily reduces width of container*/}}
                                                {{template "card-container-head" "Latest"}}
                                                    {{$card_grid_state := (dict)}}
                                                    {{template "card-grid-head" dict "max-rows" 1 "max-items" 3 "state" $card_grid_state}}
                                                        {{range $_ := list 1 2 3}}
                                                        {{/*TODO: show only past streams*/}}
                                                        {{/*TODO: show the three most recent streams including a live stream if live now*/}}
                                                        {{range $i, $stream := $course.Streams}}
{{/*                                                            {{if ge $i 3 | or (ge $i 1 | and (randInt 0 101 | ge 30))}}{{break}}{{end}}*/}}
                                                            {{template "card-grid-item-head" $card_grid_state}}
                                                                {{template "stream-card" dict
                                                                    "stream" $stream
                                                                    "course" $course
                                                                    "standalone" false}}
                                                            {{template "card-grid-item-tail"}}
                                                        {{end}}
                                                        {{end}}
                                                    {{template "card-grid-tail"}}
                                                {{template "card-container-tail"}}
                                            {{template "course-group-tail" $course}}
                                        {{end}}
                                    {{end}}
                                    {{end}}
                                </div>
                            </div>
                        {{end}}
                        {{/*TODO: duplication*/}}
                        {{if get $has_courses_where "my-courses"}}
                            <div>
                                {{if get $has_courses_where "pinned"}}
                                    <p class="mx-2 mb-2 text-5 text-sm uppercase">Registered</p>
                                {{end}}
                                <div class="flex flex-col gap-3 md:gap-5">
                                    {{$args := .}}
                                    {{range $_ := list 1}}
                                        {{range $i, $course := $args.Courses}}
                                            {{if and (not $course.IsHidden) (not $course.Pinned)}}
                                                {{template "course-group-head" $course}}
                                                    {{template "card-container-head" "Latest"}}
                                                        {{$card_grid_state := (dict)}}
                                                        {{template "card-grid-head" dict "max-rows" 1 "max-items" 3 "state" $card_grid_state}}
                                                            {{range $_ := list 1 2 3}}
                                                                {{/*TODO: show only past streams*/}}
                                                                {{range $i, $stream := $course.Streams}}
{{/*                                                                    {{if ge $i 3 | or (ge $i 1 | and (randNumeric 1 | atoi | ge 5))}}{{break}}{{end}}*/}}
                                                                    {{template "card-grid-item-head" $card_grid_state}}
                                                                    {{template "stream-card" dict
                                                                    "stream" $stream
                                                                    "course" $course
                                                                    "standalone" false}}
                                                                    {{template "card-grid-item-tail"}}
                                                                {{end}}
                                                            {{end}}
                                                        {{template "card-grid-tail"}}
                                                    {{template "card-container-tail"}}
                                                {{template "course-group-tail" $course}}
                                            {{end}}
                                        {{end}}
                                    {{end}}
                                </div>
                            </div>
                        {{end}}
                    </div>
                {{template "highlight-box-tail"}}
            </div>
        {{end}}
        {{if $show_other_courses}}
            <div style="grid-area: other-courses">
                {{template "highlight-box-head" dict "title" "Other Courses"}} {{/*"highlight-color" "dark:bg-purple-400 bg-purple-600" */}}
                    {{range $course := .PublicCourses}}
                        {{template "course-group-head" $course}}
                        {{template "course-group-tail"}}
                    {{end}}
                {{template "highlight-box-tail"}}
            </div>
        {{end}}
        <div style="grid-area: hidden-courses">
            {{template "highlight-box-head" dict "title" "Hidden Courses"}} {{/*"highlight-color" "dark:bg-purple-400 bg-purple-600" */}}
            {{range $course := .HiddenCourses}}
                {{template "course-group-head" $course}}
                {{template "course-group-tail"}}
            {{end}}
            {{template "highlight-box-tail"}}
        </div>
    </div>
</div>
{{template "semesterselection" .}}
{{template "reloadpagebutton" .}}

<script>
    (async () => {
        const catImages = document.getElementsByClassName("cat-img");
        const response = await fetch(
            "https://api.thecatapi.com/v1/images/search?limit=" + catImages.length,
            { headers: { "x-api-key" : {{env "CAT_API_KEY"}} }});
        const data = await response.json();
        for (let i = 0; i < catImages.length; i++) {
            catImages[i].src = data[i % data.length].url;
        }
    })();
</script>

</body>
<!--       _
       .__(.)< (MEOW)
        \___)
 ~~~~~~~~~~~~~~~~~~-->
</html>
