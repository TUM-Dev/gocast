// Code generated by MockGen. DO NOT EDIT.
// Source: camera.go

// Package mock_camera is a generated GoMock package.
package mock_camera

import (
	reflect "reflect"

	model "github.com/TUM-Dev/gocast/model"
	gomock "github.com/golang/mock/gomock"
)

// MockCam is a mock of Cam interface.
type MockCam struct {
	ctrl     *gomock.Controller
	recorder *MockCamMockRecorder
}

// MockCamMockRecorder is the mock recorder for MockCam.
type MockCamMockRecorder struct {
	mock *MockCam
}

// NewMockCam creates a new mock instance.
func NewMockCam(ctrl *gomock.Controller) *MockCam {
	mock := &MockCam{ctrl: ctrl}
	mock.recorder = &MockCamMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCam) EXPECT() *MockCamMockRecorder {
	return m.recorder
}

// GetPresets mocks base method.
func (m *MockCam) GetPresets() ([]model.CameraPreset, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPresets")
	ret0, _ := ret[0].([]model.CameraPreset)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPresets indicates an expected call of GetPresets.
func (mr *MockCamMockRecorder) GetPresets() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPresets", reflect.TypeOf((*MockCam)(nil).GetPresets))
}

// SetPreset mocks base method.
func (m *MockCam) SetPreset(presetId int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetPreset", presetId)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetPreset indicates an expected call of SetPreset.
func (mr *MockCamMockRecorder) SetPreset(presetId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetPreset", reflect.TypeOf((*MockCam)(nil).SetPreset), presetId)
}

// TakeSnapshot mocks base method.
func (m *MockCam) TakeSnapshot(outDir string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TakeSnapshot", outDir)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TakeSnapshot indicates an expected call of TakeSnapshot.
func (mr *MockCamMockRecorder) TakeSnapshot(outDir interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TakeSnapshot", reflect.TypeOf((*MockCam)(nil).TakeSnapshot), outDir)
}
