// Code generated by MockGen. DO NOT EDIT.
// Source: keyword.go

// Package mock_dao is a generated GoMock package.
package mock_dao

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/joschahenningsen/TUM-Live/model"
)

// MockKeywordDao is a mock of KeywordDao interface.
type MockKeywordDao struct {
	ctrl     *gomock.Controller
	recorder *MockKeywordDaoMockRecorder
}

// MockKeywordDaoMockRecorder is the mock recorder for MockKeywordDao.
type MockKeywordDaoMockRecorder struct {
	mock *MockKeywordDao
}

// NewMockKeywordDao creates a new mock instance.
func NewMockKeywordDao(ctrl *gomock.Controller) *MockKeywordDao {
	mock := &MockKeywordDao{ctrl: ctrl}
	mock.recorder = &MockKeywordDaoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKeywordDao) EXPECT() *MockKeywordDaoMockRecorder {
	return m.recorder
}

// NewKeyword mocks base method.
func (m *MockKeywordDao) NewKeyword(keyword *model.Keyword) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewKeyword", keyword)
	ret0, _ := ret[0].(error)
	return ret0
}

// NewKeyword indicates an expected call of NewKeyword.
func (mr *MockKeywordDaoMockRecorder) NewKeyword(keyword interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewKeyword", reflect.TypeOf((*MockKeywordDao)(nil).NewKeyword), keyword)
}
