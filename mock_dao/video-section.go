// Code generated by MockGen. DO NOT EDIT.
// Source: video-section.go

// Package mock_dao is a generated GoMock package.
package mock_dao

import (
	reflect "reflect"

	model "github.com/TUM-Dev/gocast/model"
	gomock "github.com/golang/mock/gomock"
)

// MockVideoSectionDao is a mock of VideoSectionDao interface.
type MockVideoSectionDao struct {
	ctrl     *gomock.Controller
	recorder *MockVideoSectionDaoMockRecorder
}

// MockVideoSectionDaoMockRecorder is the mock recorder for MockVideoSectionDao.
type MockVideoSectionDaoMockRecorder struct {
	mock *MockVideoSectionDao
}

// NewMockVideoSectionDao creates a new mock instance.
func NewMockVideoSectionDao(ctrl *gomock.Controller) *MockVideoSectionDao {
	mock := &MockVideoSectionDao{ctrl: ctrl}
	mock.recorder = &MockVideoSectionDaoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVideoSectionDao) EXPECT() *MockVideoSectionDaoMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockVideoSectionDao) Create(arg0 []model.VideoSection) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockVideoSectionDaoMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockVideoSectionDao)(nil).Create), arg0)
}

// Delete mocks base method.
func (m *MockVideoSectionDao) Delete(arg0 uint) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockVideoSectionDaoMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockVideoSectionDao)(nil).Delete), arg0)
}

// Get mocks base method.
func (m *MockVideoSectionDao) Get(arg0 uint) (model.VideoSection, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(model.VideoSection)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockVideoSectionDaoMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockVideoSectionDao)(nil).Get), arg0)
}

// GetByStreamId mocks base method.
func (m *MockVideoSectionDao) GetByStreamId(arg0 uint) ([]model.VideoSection, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByStreamId", arg0)
	ret0, _ := ret[0].([]model.VideoSection)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByStreamId indicates an expected call of GetByStreamId.
func (mr *MockVideoSectionDaoMockRecorder) GetByStreamId(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByStreamId", reflect.TypeOf((*MockVideoSectionDao)(nil).GetByStreamId), arg0)
}

// Update mocks base method.
func (m *MockVideoSectionDao) Update(arg0 *model.VideoSection) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockVideoSectionDaoMockRecorder) Update(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockVideoSectionDao)(nil).Update), arg0)
}
