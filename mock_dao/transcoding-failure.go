// Code generated by MockGen. DO NOT EDIT.
// Source: transcoding-failure.go

// Package mock_dao is a generated GoMock package.
package mock_dao

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/joschahenningsen/TUM-Live/model"
)

// MockTranscodingFailureDao is a mock of TranscodingFailureDao interface.
type MockTranscodingFailureDao struct {
	ctrl     *gomock.Controller
	recorder *MockTranscodingFailureDaoMockRecorder
}

// MockTranscodingFailureDaoMockRecorder is the mock recorder for MockTranscodingFailureDao.
type MockTranscodingFailureDaoMockRecorder struct {
	mock *MockTranscodingFailureDao
}

// NewMockTranscodingFailureDao creates a new mock instance.
func NewMockTranscodingFailureDao(ctrl *gomock.Controller) *MockTranscodingFailureDao {
	mock := &MockTranscodingFailureDao{ctrl: ctrl}
	mock.recorder = &MockTranscodingFailureDaoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTranscodingFailureDao) EXPECT() *MockTranscodingFailureDaoMockRecorder {
	return m.recorder
}

// All mocks base method.
func (m *MockTranscodingFailureDao) All() ([]model.TranscodingFailure, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "All")
	ret0, _ := ret[0].([]model.TranscodingFailure)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// All indicates an expected call of All.
func (mr *MockTranscodingFailureDaoMockRecorder) All() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "All", reflect.TypeOf((*MockTranscodingFailureDao)(nil).All))
}

// Delete mocks base method.
func (m *MockTranscodingFailureDao) Delete(id uint) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", id)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockTranscodingFailureDaoMockRecorder) Delete(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockTranscodingFailureDao)(nil).Delete), id)
}

// New mocks base method.
func (m *MockTranscodingFailureDao) New(arg0 *model.TranscodingFailure) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "New", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// New indicates an expected call of New.
func (mr *MockTranscodingFailureDaoMockRecorder) New(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "New", reflect.TypeOf((*MockTranscodingFailureDao)(nil).New), arg0)
}
