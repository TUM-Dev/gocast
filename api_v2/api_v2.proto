syntax = "proto3";
package protobuf;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "./api_v2/protobuf";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "gocast API";
    version: "2.0";
    description: "The shiny new gocast API!";
    contact: {
      name: "TUM-Developers - gocast";
      url: "https://github.com/TUM-Dev/gocast";
    };
    license: {
      name: "MIT";
      url: "https://github.com/TUM-Dev/gocast/blob/main/LICENSE";
    };
  };
  schemes: [
    HTTP,
    HTTPS
  ];
  base_path: "/api/v2";
  host: "localhost:8081";
  consumes: "application/json";
  produces: "application/json";
};

service API {
   // BEGIN API/V2/USER
   rpc getUser(GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {
      get: "/user/me"
      response_body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "User"
      summary: "Get the current user"
      description: "Returns the user assigned to the token"
    };
  }
  // END API/V2/USER


  // BEGIN API/V2/COURSES
  rpc getCourses(getCoursesRequest) returns (getCoursesResponse) {
    option (google.api.http) = {
      get: "/courses"
      response_body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Courses"
      summary: "Get all courses"
      description: "Returns all courses"
    };
  }
  // END API/V2/COURSES
}

///////////////////////////////
//////// USER_MESSAGE /////////
///////////////////////////////

message User {
  uint32 id = 1;
  string name = 2;
  string lastName = 3;
  string email = 4;
  string matriculationNumber = 5;
  string lrzID = 6;
  uint32 role = 7;
  repeated Course courses = 8;
  repeated Course administeredCourses = 9;
  repeated Course pinnedCourses = 10;
  repeated UserSetting settings = 11;
  repeated Bookmark bookmarks = 12;
}

message UserSetting {
  uint32 id = 1;
  uint32 userID = 2;
  UserSettingType type = 3;
  string value = 4;
}

enum UserSettingType {
  PREFERRED_NAME = 0;
  GREETING = 1;
  CUSTOM_PLAYBACK_SPEEDS = 2;
}

///////////////////////////////
//////// USER_REQUEST /////////
///////////////////////////////

message GetUserRequest {}

///////////////////////////////
//////// USER_RESPONSE ////////
///////////////////////////////

message GetUserResponse {
  User user = 1;
}

///////////////////////////////
////// BOOKMARK_MESSAGE ///////
///////////////////////////////

message Bookmark {
  uint32 id = 1;
  string description = 2;
  uint32 hours = 3;
  uint32 minutes = 4;
  uint32 seconds = 5;
  uint32 userID = 6;
  uint32 streamID = 7;
}

///////////////////////////////
/////// COURSE_MESSAGE ////////
///////////////////////////////

message Course {
  uint64 id = 1;
  string name = 2;
  string teachingTerm = 3;
  uint32 year = 4;
}

///////////////////////////////
/////// COURSE_REQUEST ////////
///////////////////////////////

message getCoursesRequest { }

///////////////////////////////
/////// COURSE_RESPONSE ///////
///////////////////////////////

message getCoursesResponse {
  repeated Course courses = 1;
}
