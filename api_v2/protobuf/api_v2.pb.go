// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0-devel
// 	protoc        (unknown)
// source: api_v2.proto

package protobuf

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserSettingType int32

const (
	UserSettingType_PREFERRED_NAME         UserSettingType = 0
	UserSettingType_GREETING               UserSettingType = 1
	UserSettingType_CUSTOM_PLAYBACK_SPEEDS UserSettingType = 2
)

// Enum value maps for UserSettingType.
var (
	UserSettingType_name = map[int32]string{
		0: "PREFERRED_NAME",
		1: "GREETING",
		2: "CUSTOM_PLAYBACK_SPEEDS",
	}
	UserSettingType_value = map[string]int32{
		"PREFERRED_NAME":         0,
		"GREETING":               1,
		"CUSTOM_PLAYBACK_SPEEDS": 2,
	}
)

func (x UserSettingType) Enum() *UserSettingType {
	p := new(UserSettingType)
	*p = x
	return p
}

func (x UserSettingType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserSettingType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v2_proto_enumTypes[0].Descriptor()
}

func (UserSettingType) Type() protoreflect.EnumType {
	return &file_api_v2_proto_enumTypes[0]
}

func (x UserSettingType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserSettingType.Descriptor instead.
func (UserSettingType) EnumDescriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{0}
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  uint32         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	LastName            string         `protobuf:"bytes,3,opt,name=lastName,proto3" json:"lastName,omitempty"`
	Email               string         `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	MatriculationNumber string         `protobuf:"bytes,5,opt,name=matriculationNumber,proto3" json:"matriculationNumber,omitempty"`
	LrzID               string         `protobuf:"bytes,6,opt,name=lrzID,proto3" json:"lrzID,omitempty"`
	Role                uint32         `protobuf:"varint,7,opt,name=role,proto3" json:"role,omitempty"`
	Courses             []*Course      `protobuf:"bytes,8,rep,name=courses,proto3" json:"courses,omitempty"`
	AdministeredCourses []*Course      `protobuf:"bytes,9,rep,name=administeredCourses,proto3" json:"administeredCourses,omitempty"`
	PinnedCourses       []*Course      `protobuf:"bytes,10,rep,name=pinnedCourses,proto3" json:"pinnedCourses,omitempty"`
	Settings            []*UserSetting `protobuf:"bytes,11,rep,name=settings,proto3" json:"settings,omitempty"`
	Bookmarks           []*Bookmark    `protobuf:"bytes,12,rep,name=bookmarks,proto3" json:"bookmarks,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetMatriculationNumber() string {
	if x != nil {
		return x.MatriculationNumber
	}
	return ""
}

func (x *User) GetLrzID() string {
	if x != nil {
		return x.LrzID
	}
	return ""
}

func (x *User) GetRole() uint32 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *User) GetCourses() []*Course {
	if x != nil {
		return x.Courses
	}
	return nil
}

func (x *User) GetAdministeredCourses() []*Course {
	if x != nil {
		return x.AdministeredCourses
	}
	return nil
}

func (x *User) GetPinnedCourses() []*Course {
	if x != nil {
		return x.PinnedCourses
	}
	return nil
}

func (x *User) GetSettings() []*UserSetting {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *User) GetBookmarks() []*Bookmark {
	if x != nil {
		return x.Bookmarks
	}
	return nil
}

type UserSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint32          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserID uint32          `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	Type   UserSettingType `protobuf:"varint,3,opt,name=type,proto3,enum=protobuf.UserSettingType" json:"type,omitempty"`
	Value  string          `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UserSetting) Reset() {
	*x = UserSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSetting) ProtoMessage() {}

func (x *UserSetting) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSetting.ProtoReflect.Descriptor instead.
func (*UserSetting) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{1}
}

func (x *UserSetting) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserSetting) GetUserID() uint32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UserSetting) GetType() UserSettingType {
	if x != nil {
		return x.Type
	}
	return UserSettingType_PREFERRED_NAME
}

func (x *UserSetting) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GetUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{2}
}

type GetUserCoursesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Year  int32  `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	Term  string `protobuf:"bytes,2,opt,name=term,proto3" json:"term,omitempty"`
	Limit int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Skip  int32  `protobuf:"varint,4,opt,name=skip,proto3" json:"skip,omitempty"`
}

func (x *GetUserCoursesRequest) Reset() {
	*x = GetUserCoursesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserCoursesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserCoursesRequest) ProtoMessage() {}

func (x *GetUserCoursesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserCoursesRequest.ProtoReflect.Descriptor instead.
func (*GetUserCoursesRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserCoursesRequest) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *GetUserCoursesRequest) GetTerm() string {
	if x != nil {
		return x.Term
	}
	return ""
}

func (x *GetUserCoursesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetUserCoursesRequest) GetSkip() int32 {
	if x != nil {
		return x.Skip
	}
	return 0
}

type GetUserPinnedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Year  int32  `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	Term  string `protobuf:"bytes,2,opt,name=term,proto3" json:"term,omitempty"`
	Limit int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Skip  int32  `protobuf:"varint,4,opt,name=skip,proto3" json:"skip,omitempty"`
}

func (x *GetUserPinnedRequest) Reset() {
	*x = GetUserPinnedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserPinnedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserPinnedRequest) ProtoMessage() {}

func (x *GetUserPinnedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserPinnedRequest.ProtoReflect.Descriptor instead.
func (*GetUserPinnedRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{4}
}

func (x *GetUserPinnedRequest) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *GetUserPinnedRequest) GetTerm() string {
	if x != nil {
		return x.Term
	}
	return ""
}

func (x *GetUserPinnedRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetUserPinnedRequest) GetSkip() int32 {
	if x != nil {
		return x.Skip
	}
	return 0
}

type GetUserAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetUserAdminRequest) Reset() {
	*x = GetUserAdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAdminRequest) ProtoMessage() {}

func (x *GetUserAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAdminRequest.ProtoReflect.Descriptor instead.
func (*GetUserAdminRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{5}
}

type GetUserSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetUserSettingsRequest) Reset() {
	*x = GetUserSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSettingsRequest) ProtoMessage() {}

func (x *GetUserSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSettingsRequest.ProtoReflect.Descriptor instead.
func (*GetUserSettingsRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{6}
}

type GetUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *GetUserResponse) Reset() {
	*x = GetUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserResponse) ProtoMessage() {}

func (x *GetUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserResponse.ProtoReflect.Descriptor instead.
func (*GetUserResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type GetUserCoursesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Courses []*Course `protobuf:"bytes,1,rep,name=courses,proto3" json:"courses,omitempty"`
}

func (x *GetUserCoursesResponse) Reset() {
	*x = GetUserCoursesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserCoursesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserCoursesResponse) ProtoMessage() {}

func (x *GetUserCoursesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserCoursesResponse.ProtoReflect.Descriptor instead.
func (*GetUserCoursesResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{8}
}

func (x *GetUserCoursesResponse) GetCourses() []*Course {
	if x != nil {
		return x.Courses
	}
	return nil
}

type GetUserPinnedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Courses []*Course `protobuf:"bytes,1,rep,name=courses,proto3" json:"courses,omitempty"`
}

func (x *GetUserPinnedResponse) Reset() {
	*x = GetUserPinnedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserPinnedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserPinnedResponse) ProtoMessage() {}

func (x *GetUserPinnedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserPinnedResponse.ProtoReflect.Descriptor instead.
func (*GetUserPinnedResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{9}
}

func (x *GetUserPinnedResponse) GetCourses() []*Course {
	if x != nil {
		return x.Courses
	}
	return nil
}

type GetUserAdminResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Courses []*Course `protobuf:"bytes,1,rep,name=courses,proto3" json:"courses,omitempty"`
}

func (x *GetUserAdminResponse) Reset() {
	*x = GetUserAdminResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAdminResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAdminResponse) ProtoMessage() {}

func (x *GetUserAdminResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAdminResponse.ProtoReflect.Descriptor instead.
func (*GetUserAdminResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{10}
}

func (x *GetUserAdminResponse) GetCourses() []*Course {
	if x != nil {
		return x.Courses
	}
	return nil
}

type GetUserSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserSettings []*UserSetting `protobuf:"bytes,1,rep,name=userSettings,proto3" json:"userSettings,omitempty"`
}

func (x *GetUserSettingsResponse) Reset() {
	*x = GetUserSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSettingsResponse) ProtoMessage() {}

func (x *GetUserSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSettingsResponse.ProtoReflect.Descriptor instead.
func (*GetUserSettingsResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{11}
}

func (x *GetUserSettingsResponse) GetUserSettings() []*UserSetting {
	if x != nil {
		return x.UserSettings
	}
	return nil
}

type Bookmark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Hours       uint32 `protobuf:"varint,3,opt,name=hours,proto3" json:"hours,omitempty"`
	Minutes     uint32 `protobuf:"varint,4,opt,name=minutes,proto3" json:"minutes,omitempty"`
	Seconds     uint32 `protobuf:"varint,5,opt,name=seconds,proto3" json:"seconds,omitempty"`
	UserID      uint32 `protobuf:"varint,6,opt,name=userID,proto3" json:"userID,omitempty"`
	StreamID    uint32 `protobuf:"varint,7,opt,name=streamID,proto3" json:"streamID,omitempty"`
}

func (x *Bookmark) Reset() {
	*x = Bookmark{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bookmark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bookmark) ProtoMessage() {}

func (x *Bookmark) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bookmark.ProtoReflect.Descriptor instead.
func (*Bookmark) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{12}
}

func (x *Bookmark) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Bookmark) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Bookmark) GetHours() uint32 {
	if x != nil {
		return x.Hours
	}
	return 0
}

func (x *Bookmark) GetMinutes() uint32 {
	if x != nil {
		return x.Minutes
	}
	return 0
}

func (x *Bookmark) GetSeconds() uint32 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

func (x *Bookmark) GetUserID() uint32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *Bookmark) GetStreamID() uint32 {
	if x != nil {
		return x.StreamID
	}
	return 0
}

type GetBookmarksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID int32 `protobuf:"varint,1,opt,name=streamID,proto3" json:"streamID,omitempty"`
}

func (x *GetBookmarksRequest) Reset() {
	*x = GetBookmarksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBookmarksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBookmarksRequest) ProtoMessage() {}

func (x *GetBookmarksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBookmarksRequest.ProtoReflect.Descriptor instead.
func (*GetBookmarksRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{13}
}

func (x *GetBookmarksRequest) GetStreamID() int32 {
	if x != nil {
		return x.StreamID
	}
	return 0
}

type PutBookmarkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Hours       uint32 `protobuf:"varint,2,opt,name=hours,proto3" json:"hours,omitempty"`
	Minutes     uint32 `protobuf:"varint,3,opt,name=minutes,proto3" json:"minutes,omitempty"`
	Seconds     uint32 `protobuf:"varint,4,opt,name=seconds,proto3" json:"seconds,omitempty"`
	StreamID    uint32 `protobuf:"varint,5,opt,name=streamID,proto3" json:"streamID,omitempty"`
}

func (x *PutBookmarkRequest) Reset() {
	*x = PutBookmarkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutBookmarkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutBookmarkRequest) ProtoMessage() {}

func (x *PutBookmarkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutBookmarkRequest.ProtoReflect.Descriptor instead.
func (*PutBookmarkRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{14}
}

func (x *PutBookmarkRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PutBookmarkRequest) GetHours() uint32 {
	if x != nil {
		return x.Hours
	}
	return 0
}

func (x *PutBookmarkRequest) GetMinutes() uint32 {
	if x != nil {
		return x.Minutes
	}
	return 0
}

func (x *PutBookmarkRequest) GetSeconds() uint32 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

func (x *PutBookmarkRequest) GetStreamID() uint32 {
	if x != nil {
		return x.StreamID
	}
	return 0
}

type PatchBookmarkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Hours       uint32 `protobuf:"varint,2,opt,name=hours,proto3" json:"hours,omitempty"`
	Minutes     uint32 `protobuf:"varint,3,opt,name=minutes,proto3" json:"minutes,omitempty"`
	Seconds     uint32 `protobuf:"varint,4,opt,name=seconds,proto3" json:"seconds,omitempty"`
	BookmarkID  uint32 `protobuf:"varint,5,opt,name=bookmarkID,proto3" json:"bookmarkID,omitempty"`
}

func (x *PatchBookmarkRequest) Reset() {
	*x = PatchBookmarkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchBookmarkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchBookmarkRequest) ProtoMessage() {}

func (x *PatchBookmarkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchBookmarkRequest.ProtoReflect.Descriptor instead.
func (*PatchBookmarkRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{15}
}

func (x *PatchBookmarkRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PatchBookmarkRequest) GetHours() uint32 {
	if x != nil {
		return x.Hours
	}
	return 0
}

func (x *PatchBookmarkRequest) GetMinutes() uint32 {
	if x != nil {
		return x.Minutes
	}
	return 0
}

func (x *PatchBookmarkRequest) GetSeconds() uint32 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

func (x *PatchBookmarkRequest) GetBookmarkID() uint32 {
	if x != nil {
		return x.BookmarkID
	}
	return 0
}

type DeleteBookmarkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookmarkID uint32 `protobuf:"varint,1,opt,name=bookmarkID,proto3" json:"bookmarkID,omitempty"`
}

func (x *DeleteBookmarkRequest) Reset() {
	*x = DeleteBookmarkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBookmarkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBookmarkRequest) ProtoMessage() {}

func (x *DeleteBookmarkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBookmarkRequest.ProtoReflect.Descriptor instead.
func (*DeleteBookmarkRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteBookmarkRequest) GetBookmarkID() uint32 {
	if x != nil {
		return x.BookmarkID
	}
	return 0
}

type GetBookmarksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bookmarks []*Bookmark `protobuf:"bytes,1,rep,name=bookmarks,proto3" json:"bookmarks,omitempty"`
}

func (x *GetBookmarksResponse) Reset() {
	*x = GetBookmarksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBookmarksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBookmarksResponse) ProtoMessage() {}

func (x *GetBookmarksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBookmarksResponse.ProtoReflect.Descriptor instead.
func (*GetBookmarksResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{17}
}

func (x *GetBookmarksResponse) GetBookmarks() []*Bookmark {
	if x != nil {
		return x.Bookmarks
	}
	return nil
}

type PutBookmarkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bookmark *Bookmark `protobuf:"bytes,1,opt,name=bookmark,proto3" json:"bookmark,omitempty"`
}

func (x *PutBookmarkResponse) Reset() {
	*x = PutBookmarkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutBookmarkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutBookmarkResponse) ProtoMessage() {}

func (x *PutBookmarkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutBookmarkResponse.ProtoReflect.Descriptor instead.
func (*PutBookmarkResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{18}
}

func (x *PutBookmarkResponse) GetBookmark() *Bookmark {
	if x != nil {
		return x.Bookmark
	}
	return nil
}

type PatchBookmarkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bookmark *Bookmark `protobuf:"bytes,1,opt,name=bookmark,proto3" json:"bookmark,omitempty"`
}

func (x *PatchBookmarkResponse) Reset() {
	*x = PatchBookmarkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchBookmarkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchBookmarkResponse) ProtoMessage() {}

func (x *PatchBookmarkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchBookmarkResponse.ProtoReflect.Descriptor instead.
func (*PatchBookmarkResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{19}
}

func (x *PatchBookmarkResponse) GetBookmark() *Bookmark {
	if x != nil {
		return x.Bookmark
	}
	return nil
}

type DeleteBookmarkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteBookmarkResponse) Reset() {
	*x = DeleteBookmarkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBookmarkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBookmarkResponse) ProtoMessage() {}

func (x *DeleteBookmarkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBookmarkResponse.ProtoReflect.Descriptor instead.
func (*DeleteBookmarkResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{20}
}

type BannerAlert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StartsAt  string `protobuf:"bytes,2,opt,name=startsAt,proto3" json:"startsAt,omitempty"`
	ExpiresAt string `protobuf:"bytes,3,opt,name=expiresAt,proto3" json:"expiresAt,omitempty"`
	Text      string `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	Warn      bool   `protobuf:"varint,5,opt,name=warn,proto3" json:"warn,omitempty"`
}

func (x *BannerAlert) Reset() {
	*x = BannerAlert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BannerAlert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BannerAlert) ProtoMessage() {}

func (x *BannerAlert) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BannerAlert.ProtoReflect.Descriptor instead.
func (*BannerAlert) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{21}
}

func (x *BannerAlert) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BannerAlert) GetStartsAt() string {
	if x != nil {
		return x.StartsAt
	}
	return ""
}

func (x *BannerAlert) GetExpiresAt() string {
	if x != nil {
		return x.ExpiresAt
	}
	return ""
}

func (x *BannerAlert) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *BannerAlert) GetWarn() bool {
	if x != nil {
		return x.Warn
	}
	return false
}

type FeatureNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title  string `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Body   string `protobuf:"bytes,3,opt,name=Body,proto3" json:"Body,omitempty"`
	Target uint32 `protobuf:"varint,4,opt,name=Target,proto3" json:"Target,omitempty"`
}

func (x *FeatureNotification) Reset() {
	*x = FeatureNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeatureNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureNotification) ProtoMessage() {}

func (x *FeatureNotification) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureNotification.ProtoReflect.Descriptor instead.
func (*FeatureNotification) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{22}
}

func (x *FeatureNotification) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FeatureNotification) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *FeatureNotification) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *FeatureNotification) GetTarget() uint32 {
	if x != nil {
		return x.Target
	}
	return 0
}

type GetBannerAlertsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetBannerAlertsRequest) Reset() {
	*x = GetBannerAlertsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBannerAlertsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBannerAlertsRequest) ProtoMessage() {}

func (x *GetBannerAlertsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBannerAlertsRequest.ProtoReflect.Descriptor instead.
func (*GetBannerAlertsRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{23}
}

type GetFeatureNotificationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetFeatureNotificationsRequest) Reset() {
	*x = GetFeatureNotificationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeatureNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeatureNotificationsRequest) ProtoMessage() {}

func (x *GetFeatureNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeatureNotificationsRequest.ProtoReflect.Descriptor instead.
func (*GetFeatureNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{24}
}

type GetBannerAlertsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BannerAlerts []*BannerAlert `protobuf:"bytes,1,rep,name=bannerAlerts,proto3" json:"bannerAlerts,omitempty"`
}

func (x *GetBannerAlertsResponse) Reset() {
	*x = GetBannerAlertsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBannerAlertsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBannerAlertsResponse) ProtoMessage() {}

func (x *GetBannerAlertsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBannerAlertsResponse.ProtoReflect.Descriptor instead.
func (*GetBannerAlertsResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{25}
}

func (x *GetBannerAlertsResponse) GetBannerAlerts() []*BannerAlert {
	if x != nil {
		return x.BannerAlerts
	}
	return nil
}

type GetFeatureNotificationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeatureNotifications []*FeatureNotification `protobuf:"bytes,1,rep,name=featureNotifications,proto3" json:"featureNotifications,omitempty"`
}

func (x *GetFeatureNotificationsResponse) Reset() {
	*x = GetFeatureNotificationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFeatureNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeatureNotificationsResponse) ProtoMessage() {}

func (x *GetFeatureNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeatureNotificationsResponse.ProtoReflect.Descriptor instead.
func (*GetFeatureNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{26}
}

func (x *GetFeatureNotificationsResponse) GetFeatureNotifications() []*FeatureNotification {
	if x != nil {
		return x.FeatureNotifications
	}
	return nil
}

type Course struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      uint32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                    string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Slug                    string    `protobuf:"bytes,3,opt,name=slug,proto3" json:"slug,omitempty"`
	Semester                *Semester `protobuf:"bytes,4,opt,name=semester,proto3" json:"semester,omitempty"`
	TUMOnlineIdentifier     string    `protobuf:"bytes,5,opt,name=TUMOnlineIdentifier,proto3" json:"TUMOnlineIdentifier,omitempty"`
	VODEnabled              bool      `protobuf:"varint,6,opt,name=VODEnabled,proto3" json:"VODEnabled,omitempty"`
	DownloadsEnabled        bool      `protobuf:"varint,7,opt,name=downloadsEnabled,proto3" json:"downloadsEnabled,omitempty"`
	ChatEnabled             bool      `protobuf:"varint,8,opt,name=chatEnabled,proto3" json:"chatEnabled,omitempty"`
	AnonymousChatEnabled    bool      `protobuf:"varint,9,opt,name=anonymousChatEnabled,proto3" json:"anonymousChatEnabled,omitempty"`
	ModeratedChatEnabled    bool      `protobuf:"varint,10,opt,name=moderatedChatEnabled,proto3" json:"moderatedChatEnabled,omitempty"`
	VodChatEnabled          bool      `protobuf:"varint,11,opt,name=vodChatEnabled,proto3" json:"vodChatEnabled,omitempty"`
	Streams                 []*Stream `protobuf:"bytes,12,rep,name=streams,proto3" json:"streams,omitempty"`
	CameraPresetPreferences string    `protobuf:"bytes,13,opt,name=cameraPresetPreferences,proto3" json:"cameraPresetPreferences,omitempty"`
	SourcePreferences       string    `protobuf:"bytes,14,opt,name=sourcePreferences,proto3" json:"sourcePreferences,omitempty"`
}

func (x *Course) Reset() {
	*x = Course{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Course) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Course) ProtoMessage() {}

func (x *Course) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Course.ProtoReflect.Descriptor instead.
func (*Course) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{27}
}

func (x *Course) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Course) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Course) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *Course) GetSemester() *Semester {
	if x != nil {
		return x.Semester
	}
	return nil
}

func (x *Course) GetTUMOnlineIdentifier() string {
	if x != nil {
		return x.TUMOnlineIdentifier
	}
	return ""
}

func (x *Course) GetVODEnabled() bool {
	if x != nil {
		return x.VODEnabled
	}
	return false
}

func (x *Course) GetDownloadsEnabled() bool {
	if x != nil {
		return x.DownloadsEnabled
	}
	return false
}

func (x *Course) GetChatEnabled() bool {
	if x != nil {
		return x.ChatEnabled
	}
	return false
}

func (x *Course) GetAnonymousChatEnabled() bool {
	if x != nil {
		return x.AnonymousChatEnabled
	}
	return false
}

func (x *Course) GetModeratedChatEnabled() bool {
	if x != nil {
		return x.ModeratedChatEnabled
	}
	return false
}

func (x *Course) GetVodChatEnabled() bool {
	if x != nil {
		return x.VodChatEnabled
	}
	return false
}

func (x *Course) GetStreams() []*Stream {
	if x != nil {
		return x.Streams
	}
	return nil
}

func (x *Course) GetCameraPresetPreferences() string {
	if x != nil {
		return x.CameraPresetPreferences
	}
	return ""
}

func (x *Course) GetSourcePreferences() string {
	if x != nil {
		return x.SourcePreferences
	}
	return ""
}

type Semester struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeachingTerm string `protobuf:"bytes,1,opt,name=teachingTerm,proto3" json:"teachingTerm,omitempty"`
	Year         uint32 `protobuf:"varint,2,opt,name=year,proto3" json:"year,omitempty"`
}

func (x *Semester) Reset() {
	*x = Semester{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Semester) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Semester) ProtoMessage() {}

func (x *Semester) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Semester.ProtoReflect.Descriptor instead.
func (*Semester) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{28}
}

func (x *Semester) GetTeachingTerm() string {
	if x != nil {
		return x.TeachingTerm
	}
	return ""
}

func (x *Semester) GetYear() uint32 {
	if x != nil {
		return x.Year
	}
	return 0
}

type GetPublicCoursesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Year  int32  `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	Term  string `protobuf:"bytes,2,opt,name=term,proto3" json:"term,omitempty"`
	Limit int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Skip  int32  `protobuf:"varint,4,opt,name=skip,proto3" json:"skip,omitempty"`
}

func (x *GetPublicCoursesRequest) Reset() {
	*x = GetPublicCoursesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPublicCoursesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicCoursesRequest) ProtoMessage() {}

func (x *GetPublicCoursesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicCoursesRequest.ProtoReflect.Descriptor instead.
func (*GetPublicCoursesRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{29}
}

func (x *GetPublicCoursesRequest) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *GetPublicCoursesRequest) GetTerm() string {
	if x != nil {
		return x.Term
	}
	return ""
}

func (x *GetPublicCoursesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetPublicCoursesRequest) GetSkip() int32 {
	if x != nil {
		return x.Skip
	}
	return 0
}

type GetSemestersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSemestersRequest) Reset() {
	*x = GetSemestersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSemestersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSemestersRequest) ProtoMessage() {}

func (x *GetSemestersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSemestersRequest.ProtoReflect.Descriptor instead.
func (*GetSemestersRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{30}
}

type PostPinnedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseID int32 `protobuf:"varint,1,opt,name=courseID,proto3" json:"courseID,omitempty"`
}

func (x *PostPinnedRequest) Reset() {
	*x = PostPinnedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostPinnedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostPinnedRequest) ProtoMessage() {}

func (x *PostPinnedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostPinnedRequest.ProtoReflect.Descriptor instead.
func (*PostPinnedRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{31}
}

func (x *PostPinnedRequest) GetCourseID() int32 {
	if x != nil {
		return x.CourseID
	}
	return 0
}

type DeletePinnedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseID int32 `protobuf:"varint,1,opt,name=courseID,proto3" json:"courseID,omitempty"`
}

func (x *DeletePinnedRequest) Reset() {
	*x = DeletePinnedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePinnedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePinnedRequest) ProtoMessage() {}

func (x *DeletePinnedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePinnedRequest.ProtoReflect.Descriptor instead.
func (*DeletePinnedRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{32}
}

func (x *DeletePinnedRequest) GetCourseID() int32 {
	if x != nil {
		return x.CourseID
	}
	return 0
}

type GetPublicCoursesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Courses []*Course `protobuf:"bytes,1,rep,name=courses,proto3" json:"courses,omitempty"`
}

func (x *GetPublicCoursesResponse) Reset() {
	*x = GetPublicCoursesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPublicCoursesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicCoursesResponse) ProtoMessage() {}

func (x *GetPublicCoursesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicCoursesResponse.ProtoReflect.Descriptor instead.
func (*GetPublicCoursesResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{33}
}

func (x *GetPublicCoursesResponse) GetCourses() []*Course {
	if x != nil {
		return x.Courses
	}
	return nil
}

type GetSemestersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current   *Semester   `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	Semesters []*Semester `protobuf:"bytes,2,rep,name=semesters,proto3" json:"semesters,omitempty"`
}

func (x *GetSemestersResponse) Reset() {
	*x = GetSemestersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSemestersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSemestersResponse) ProtoMessage() {}

func (x *GetSemestersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSemestersResponse.ProtoReflect.Descriptor instead.
func (*GetSemestersResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{34}
}

func (x *GetSemestersResponse) GetCurrent() *Semester {
	if x != nil {
		return x.Current
	}
	return nil
}

func (x *GetSemestersResponse) GetSemesters() []*Semester {
	if x != nil {
		return x.Semesters
	}
	return nil
}

type PostPinnedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PostPinnedResponse) Reset() {
	*x = PostPinnedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostPinnedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostPinnedResponse) ProtoMessage() {}

func (x *PostPinnedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostPinnedResponse.ProtoReflect.Descriptor instead.
func (*PostPinnedResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{35}
}

type DeletePinnedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeletePinnedResponse) Reset() {
	*x = DeletePinnedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePinnedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePinnedResponse) ProtoMessage() {}

func (x *DeletePinnedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePinnedResponse.ProtoReflect.Descriptor instead.
func (*DeletePinnedResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{36}
}

type Stream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description      string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CourseID         uint32                 `protobuf:"varint,4,opt,name=courseID,proto3" json:"courseID,omitempty"`
	Start            *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start,proto3" json:"start,omitempty"`
	End              *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=end,proto3" json:"end,omitempty"`
	ChatEnabled      bool                   `protobuf:"varint,7,opt,name=chatEnabled,proto3" json:"chatEnabled,omitempty"`
	RoomName         string                 `protobuf:"bytes,8,opt,name=roomName,proto3" json:"roomName,omitempty"`
	RoomCode         string                 `protobuf:"bytes,9,opt,name=roomCode,proto3" json:"roomCode,omitempty"`
	EventTypeName    string                 `protobuf:"bytes,10,opt,name=eventTypeName,proto3" json:"eventTypeName,omitempty"`
	TUMOnlineEventID uint32                 `protobuf:"varint,11,opt,name=TUMOnlineEventID,proto3" json:"TUMOnlineEventID,omitempty"`
	SeriesIdentifier string                 `protobuf:"bytes,12,opt,name=seriesIdentifier,proto3" json:"seriesIdentifier,omitempty"`
	PlaylistUrl      string                 `protobuf:"bytes,13,opt,name=playlistUrl,proto3" json:"playlistUrl,omitempty"`
	PlaylistUrlPRES  string                 `protobuf:"bytes,14,opt,name=playlistUrlPRES,proto3" json:"playlistUrlPRES,omitempty"`
	PlaylistUrlCAM   string                 `protobuf:"bytes,15,opt,name=playlistUrlCAM,proto3" json:"playlistUrlCAM,omitempty"`
	LiveNow          bool                   `protobuf:"varint,16,opt,name=liveNow,proto3" json:"liveNow,omitempty"`
	LiveNowTimestamp *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=liveNowTimestamp,proto3" json:"liveNowTimestamp,omitempty"`
	Recording        bool                   `protobuf:"varint,18,opt,name=recording,proto3" json:"recording,omitempty"`
	Premiere         bool                   `protobuf:"varint,19,opt,name=premiere,proto3" json:"premiere,omitempty"`
	Ended            bool                   `protobuf:"varint,20,opt,name=ended,proto3" json:"ended,omitempty"`
	VodViews         uint32                 `protobuf:"varint,21,opt,name=vodViews,proto3" json:"vodViews,omitempty"`
	StartOffset      uint32                 `protobuf:"varint,22,opt,name=startOffset,proto3" json:"startOffset,omitempty"`
	EndOffset        uint32                 `protobuf:"varint,23,opt,name=endOffset,proto3" json:"endOffset,omitempty"`
	Duration         int32                  `protobuf:"varint,28,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *Stream) Reset() {
	*x = Stream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stream) ProtoMessage() {}

func (x *Stream) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stream.ProtoReflect.Descriptor instead.
func (*Stream) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{37}
}

func (x *Stream) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Stream) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Stream) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Stream) GetCourseID() uint32 {
	if x != nil {
		return x.CourseID
	}
	return 0
}

func (x *Stream) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *Stream) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *Stream) GetChatEnabled() bool {
	if x != nil {
		return x.ChatEnabled
	}
	return false
}

func (x *Stream) GetRoomName() string {
	if x != nil {
		return x.RoomName
	}
	return ""
}

func (x *Stream) GetRoomCode() string {
	if x != nil {
		return x.RoomCode
	}
	return ""
}

func (x *Stream) GetEventTypeName() string {
	if x != nil {
		return x.EventTypeName
	}
	return ""
}

func (x *Stream) GetTUMOnlineEventID() uint32 {
	if x != nil {
		return x.TUMOnlineEventID
	}
	return 0
}

func (x *Stream) GetSeriesIdentifier() string {
	if x != nil {
		return x.SeriesIdentifier
	}
	return ""
}

func (x *Stream) GetPlaylistUrl() string {
	if x != nil {
		return x.PlaylistUrl
	}
	return ""
}

func (x *Stream) GetPlaylistUrlPRES() string {
	if x != nil {
		return x.PlaylistUrlPRES
	}
	return ""
}

func (x *Stream) GetPlaylistUrlCAM() string {
	if x != nil {
		return x.PlaylistUrlCAM
	}
	return ""
}

func (x *Stream) GetLiveNow() bool {
	if x != nil {
		return x.LiveNow
	}
	return false
}

func (x *Stream) GetLiveNowTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LiveNowTimestamp
	}
	return nil
}

func (x *Stream) GetRecording() bool {
	if x != nil {
		return x.Recording
	}
	return false
}

func (x *Stream) GetPremiere() bool {
	if x != nil {
		return x.Premiere
	}
	return false
}

func (x *Stream) GetEnded() bool {
	if x != nil {
		return x.Ended
	}
	return false
}

func (x *Stream) GetVodViews() uint32 {
	if x != nil {
		return x.VodViews
	}
	return 0
}

func (x *Stream) GetStartOffset() uint32 {
	if x != nil {
		return x.StartOffset
	}
	return 0
}

func (x *Stream) GetEndOffset() uint32 {
	if x != nil {
		return x.EndOffset
	}
	return 0
}

func (x *Stream) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type GetStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID uint64 `protobuf:"varint,1,opt,name=streamID,proto3" json:"streamID,omitempty"`
}

func (x *GetStreamRequest) Reset() {
	*x = GetStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamRequest) ProtoMessage() {}

func (x *GetStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamRequest.ProtoReflect.Descriptor instead.
func (*GetStreamRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{38}
}

func (x *GetStreamRequest) GetStreamID() uint64 {
	if x != nil {
		return x.StreamID
	}
	return 0
}

type GetNowLiveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetNowLiveRequest) Reset() {
	*x = GetNowLiveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNowLiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNowLiveRequest) ProtoMessage() {}

func (x *GetNowLiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNowLiveRequest.ProtoReflect.Descriptor instead.
func (*GetNowLiveRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{39}
}

type GetThumbsLiveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID uint64 `protobuf:"varint,1,opt,name=streamID,proto3" json:"streamID,omitempty"`
}

func (x *GetThumbsLiveRequest) Reset() {
	*x = GetThumbsLiveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetThumbsLiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetThumbsLiveRequest) ProtoMessage() {}

func (x *GetThumbsLiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetThumbsLiveRequest.ProtoReflect.Descriptor instead.
func (*GetThumbsLiveRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{40}
}

func (x *GetThumbsLiveRequest) GetStreamID() uint64 {
	if x != nil {
		return x.StreamID
	}
	return 0
}

type GetThumbsVODRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamID uint64 `protobuf:"varint,1,opt,name=streamID,proto3" json:"streamID,omitempty"`
}

func (x *GetThumbsVODRequest) Reset() {
	*x = GetThumbsVODRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetThumbsVODRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetThumbsVODRequest) ProtoMessage() {}

func (x *GetThumbsVODRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetThumbsVODRequest.ProtoReflect.Descriptor instead.
func (*GetThumbsVODRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{41}
}

func (x *GetThumbsVODRequest) GetStreamID() uint64 {
	if x != nil {
		return x.StreamID
	}
	return 0
}

type GetStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stream *Stream `protobuf:"bytes,1,opt,name=stream,proto3" json:"stream,omitempty"`
}

func (x *GetStreamResponse) Reset() {
	*x = GetStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamResponse) ProtoMessage() {}

func (x *GetStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamResponse.ProtoReflect.Descriptor instead.
func (*GetStreamResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{42}
}

func (x *GetStreamResponse) GetStream() *Stream {
	if x != nil {
		return x.Stream
	}
	return nil
}

type GetNowLiveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stream []*Stream `protobuf:"bytes,1,rep,name=stream,proto3" json:"stream,omitempty"`
}

func (x *GetNowLiveResponse) Reset() {
	*x = GetNowLiveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNowLiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNowLiveResponse) ProtoMessage() {}

func (x *GetNowLiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNowLiveResponse.ProtoReflect.Descriptor instead.
func (*GetNowLiveResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{43}
}

func (x *GetNowLiveResponse) GetStream() []*Stream {
	if x != nil {
		return x.Stream
	}
	return nil
}

type GetThumbsVODResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *GetThumbsVODResponse) Reset() {
	*x = GetThumbsVODResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetThumbsVODResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetThumbsVODResponse) ProtoMessage() {}

func (x *GetThumbsVODResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetThumbsVODResponse.ProtoReflect.Descriptor instead.
func (*GetThumbsVODResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{44}
}

func (x *GetThumbsVODResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type GetThumbsLiveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *GetThumbsLiveResponse) Reset() {
	*x = GetThumbsLiveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetThumbsLiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetThumbsLiveResponse) ProtoMessage() {}

func (x *GetThumbsLiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetThumbsLiveResponse.ProtoReflect.Descriptor instead.
func (*GetThumbsLiveResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_proto_rawDescGZIP(), []int{45}
}

func (x *GetThumbsLiveResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

var File_api_v2_proto protoreflect.FileDescriptor

var file_api_v2_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d,
	0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc5, 0x03, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x30, 0x0a, 0x13, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x72, 0x7a, 0x49,
	0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x72, 0x7a, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x12, 0x42,
	0x0a, 0x13, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x13, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x73, 0x12, 0x36, 0x0a, 0x0d, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x0d, 0x70, 0x69, 0x6e,
	0x6e, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x08, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x30, 0x0a,
	0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6b,
	0x6d, 0x61, 0x72, 0x6b, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x22,
	0x7a, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x69, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x22, 0x68, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x79, 0x65, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6b,
	0x69, 0x70, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x35, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x44, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73,
	0x22, 0x43, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x69, 0x6e, 0x6e, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x07, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x73, 0x22, 0x42, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a,
	0x07, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x52, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x22, 0x54, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22,
	0xba, 0x01, 0x0a, 0x08, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x68,
	0x6f, 0x75, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x22, 0x31, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x22,
	0x9c, 0x01, 0x0a, 0x12, 0x50, 0x75, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x6f, 0x75, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x22, 0xa2,
	0x01, 0x0a, 0x14, 0x50, 0x61, 0x74, 0x63, 0x68, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x6f, 0x75,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x49,
	0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72,
	0x6b, 0x49, 0x44, 0x22, 0x37, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6f, 0x6f,
	0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x44, 0x22, 0x48, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x09, 0x62, 0x6f, 0x6f,
	0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x22, 0x45, 0x0a, 0x13, 0x50, 0x75, 0x74, 0x42, 0x6f, 0x6f,
	0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x6d,
	0x61, 0x72, 0x6b, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x47, 0x0a,
	0x15, 0x50, 0x61, 0x74, 0x63, 0x68, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x08, 0x62, 0x6f,
	0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x7f, 0x0a, 0x0b, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x73, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x77, 0x61, 0x72, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x77, 0x61, 0x72,
	0x6e, 0x22, 0x67, 0x0a, 0x13, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x42, 0x6f,
	0x64, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x20, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x54, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x39, 0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x0c,
	0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x22, 0x74, 0x0a, 0x1f,
	0x47, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x51, 0x0a, 0x14, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0xb4, 0x04, 0x0a, 0x06, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6d,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x13, 0x54, 0x55, 0x4d, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x54, 0x55, 0x4d, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x56, 0x4f, 0x44, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x56, 0x4f, 0x44,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f,
	0x75, 0x73, 0x43, 0x68, 0x61, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x14, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x43, 0x68,
	0x61, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x6d, 0x6f, 0x64,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x43, 0x68, 0x61, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x6d, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x43, 0x68, 0x61, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x26, 0x0a,
	0x0e, 0x76, 0x6f, 0x64, 0x43, 0x68, 0x61, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x76, 0x6f, 0x64, 0x43, 0x68, 0x61, 0x74, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x07, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73,
	0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x07, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x73, 0x12, 0x38, 0x0a, 0x17, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x50, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x17, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x42, 0x0a, 0x08, 0x53, 0x65, 0x6d,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x65, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x67, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x67, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x22, 0x6b, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x65, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x2f, 0x0a, 0x11, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x49, 0x44, 0x22, 0x31, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x69, 0x6e, 0x6e,
	0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x49, 0x44, 0x22, 0x46, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2a, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x22, 0x76, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x52, 0x09, 0x73, 0x65, 0x6d, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x69, 0x6e,
	0x6e, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xc0, 0x06, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44,
	0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2a, 0x0a, 0x10, 0x54, 0x55, 0x4d, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x54, 0x55, 0x4d, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10,
	0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79,
	0x6c, 0x69, 0x73, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x6c,
	0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x55, 0x72, 0x6c, 0x50, 0x52, 0x45, 0x53, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x55, 0x72, 0x6c,
	0x50, 0x52, 0x45, 0x53, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74,
	0x55, 0x72, 0x6c, 0x43, 0x41, 0x4d, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x6c,
	0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x55, 0x72, 0x6c, 0x43, 0x41, 0x4d, 0x12, 0x18, 0x0a, 0x07,
	0x6c, 0x69, 0x76, 0x65, 0x4e, 0x6f, 0x77, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6c,
	0x69, 0x76, 0x65, 0x4e, 0x6f, 0x77, 0x12, 0x46, 0x0a, 0x10, 0x6c, 0x69, 0x76, 0x65, 0x4e, 0x6f,
	0x77, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x6c, 0x69,
	0x76, 0x65, 0x4e, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c,
	0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x70, 0x72, 0x65, 0x6d, 0x69, 0x65, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x64, 0x65,
	0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x76, 0x6f, 0x64, 0x56, 0x69, 0x65, 0x77, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x76, 0x6f, 0x64, 0x56, 0x69, 0x65, 0x77, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x65, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x65, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x77,
	0x4c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x32, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x73, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x22,
	0x31, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x73, 0x56, 0x4f, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x49, 0x44, 0x22, 0x3d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x22, 0x3e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x77, 0x4c, 0x69, 0x76, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x22, 0x2a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x73, 0x56, 0x4f,
	0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x2b, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x73, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x2a, 0x4f, 0x0a, 0x0f, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x0e, 0x50, 0x52, 0x45, 0x46, 0x45, 0x52, 0x52, 0x45, 0x44, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x47, 0x52, 0x45, 0x45, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12,
	0x1a, 0x0a, 0x16, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x42, 0x41,
	0x43, 0x4b, 0x5f, 0x53, 0x50, 0x45, 0x45, 0x44, 0x53, 0x10, 0x02, 0x32, 0xea, 0x1e, 0x0a, 0x03,
	0x41, 0x50, 0x49, 0x12, 0x9a, 0x01, 0x0a, 0x07, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5a, 0x92, 0x41, 0x44, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x14, 0x47, 0x65, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x20, 0x75, 0x73, 0x65, 0x72, 0x1a, 0x26, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0d, 0x62, 0x01, 0x2a, 0x12, 0x08, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6d, 0x65,
	0x12, 0x92, 0x02, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xbc, 0x01, 0x92, 0x41, 0xa0, 0x01, 0x0a, 0x04, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x1f, 0x47, 0x65, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x20, 0x75, 0x73, 0x65, 0x72, 0x27, 0x73, 0x20, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x73, 0x2e, 0x1a, 0x77, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x20, 0x61, 0x6c,
	0x6c, 0x20, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x6c, 0x69,
	0x76, 0x65, 0x20, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x20, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x20, 0x62,
	0x79, 0x20, 0x79, 0x65, 0x61, 0x72, 0x2c, 0x20, 0x74, 0x65, 0x72, 0x6d, 0x20, 0x61, 0x6e, 0x64,
	0x20, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x73, 0x6b, 0x69, 0x70, 0x2e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x12, 0x62, 0x01, 0x2a, 0x12, 0x0d, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x73, 0x12, 0x8f, 0x02, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xbc, 0x01, 0x92, 0x41, 0xa1, 0x01, 0x0a,
	0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x26, 0x47, 0x65, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x20, 0x75, 0x73, 0x65, 0x72, 0x27, 0x73, 0x20, 0x70, 0x69,
	0x6e, 0x6e, 0x65, 0x64, 0x20, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x2e, 0x1a, 0x71, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x73, 0x20, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x6c, 0x79, 0x20, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65,
	0x64, 0x20, 0x62, 0x79, 0x20, 0x79, 0x65, 0x61, 0x72, 0x2c, 0x20, 0x74, 0x65, 0x72, 0x6d, 0x20,
	0x61, 0x6e, 0x64, 0x20, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x20, 0x62, 0x79,
	0x20, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x73, 0x6b, 0x69, 0x70, 0x2e,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x62, 0x01, 0x2a, 0x12, 0x0c, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0xee, 0x01, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x12,
	0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x97,
	0x01, 0x92, 0x41, 0x6f, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2c, 0x47, 0x65, 0x74, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x20, 0x75, 0x73, 0x65, 0x72,
	0x27, 0x73, 0x20, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x20,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x2e, 0x1a, 0x39, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x73, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x20, 0x74, 0x68,
	0x61, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x20, 0x75,
	0x73, 0x65, 0x72, 0x20, 0x69, 0x73, 0x20, 0x61, 0x6e, 0x20, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x20,
	0x6f, 0x66, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x62, 0x01, 0x2a, 0x12, 0x1a, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64,
	0x2d, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x12, 0xc7, 0x01, 0x0a, 0x0f, 0x67, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x20, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x6f, 0x92, 0x41, 0x53, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x20, 0x47, 0x65,
	0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x20, 0x75, 0x73,
	0x65, 0x72, 0x27, 0x73, 0x20, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x1a, 0x29,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x20, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x62,
	0x01, 0x2a, 0x12, 0x0e, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0xed, 0x01, 0x0a, 0x10, 0x67, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x6f,
	0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x99, 0x01, 0x92, 0x41, 0x7c, 0x0a, 0x04, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x21, 0x47, 0x65, 0x74, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x20, 0x75, 0x73, 0x65, 0x72, 0x27, 0x73, 0x20, 0x62, 0x6f, 0x6f, 0x6b, 0x6d,
	0x61, 0x72, 0x6b, 0x73, 0x2e, 0x1a, 0x51, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x20, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x20, 0x75, 0x73, 0x65, 0x72, 0x2c, 0x20, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x6c, 0x79, 0x20, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x20, 0x62, 0x79,
	0x20, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x62, 0x01,
	0x2a, 0x12, 0x0f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72,
	0x6b, 0x73, 0x12, 0xd6, 0x01, 0x0a, 0x0e, 0x70, 0x6f, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x69, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x50, 0x6f,
	0x73, 0x74, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x88, 0x01, 0x92, 0x41, 0x6b, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2a, 0x41, 0x64,
	0x64, 0x20, 0x61, 0x20, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x75, 0x73, 0x65, 0x72, 0x27, 0x73, 0x20, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x20,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x2e, 0x1a, 0x37, 0x41, 0x64, 0x64, 0x73, 0x20, 0x61,
	0x20, 0x6e, 0x65, 0x77, 0x20, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x20, 0x75, 0x73, 0x65, 0x72, 0x27,
	0x73, 0x20, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x20, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73,
	0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x62, 0x01, 0x2a, 0x22, 0x0c, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x2f, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0xbc, 0x01, 0x0a, 0x0f,
	0x70, 0x75, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x12,
	0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x50, 0x75, 0x74, 0x42, 0x6f,
	0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x50, 0x75, 0x74, 0x42, 0x6f, 0x6f, 0x6b,
	0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6c, 0x92, 0x41,
	0x4c, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20,
	0x61, 0x20, 0x6e, 0x65, 0x77, 0x20, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x2e, 0x1a,
	0x2c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x73, 0x20, 0x61, 0x20, 0x6e, 0x65, 0x77, 0x20, 0x62,
	0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x20, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x62, 0x01, 0x2a, 0x1a, 0x0f, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0xc6, 0x01, 0x0a, 0x11, 0x70,
	0x61, 0x74, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x50, 0x61, 0x74, 0x63,
	0x68, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x50, 0x61, 0x74, 0x63,
	0x68, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x70, 0x92, 0x41, 0x43, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x20, 0x61, 0x20, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x2e,
	0x1a, 0x27, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x20, 0x61, 0x20, 0x62, 0x6f, 0x6f, 0x6b,
	0x6d, 0x61, 0x72, 0x6b, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x20, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x3a,
	0x01, 0x2a, 0x62, 0x01, 0x2a, 0x32, 0x1c, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x62, 0x6f, 0x6f,
	0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x2f, 0x7b, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b,
	0x49, 0x44, 0x7d, 0x12, 0xc6, 0x01, 0x0a, 0x12, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b,
	0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6f, 0x6f,
	0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6d, 0x92,
	0x41, 0x43, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x20, 0x61, 0x20, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x2e, 0x1a, 0x27, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x73, 0x20, 0x61, 0x20, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b,
	0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x20,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x62, 0x01, 0x2a, 0x2a, 0x1c,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x2f,
	0x7b, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x44, 0x7d, 0x12, 0xd9, 0x01, 0x0a,
	0x10, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x69, 0x6e, 0x6e, 0x65,
	0x64, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x85, 0x01, 0x92, 0x41, 0x60, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x20, 0x61, 0x20, 0x75, 0x73, 0x65, 0x72, 0x27, 0x73, 0x20, 0x70, 0x69,
	0x6e, 0x6e, 0x65, 0x64, 0x20, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x2e, 0x1a, 0x38, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x73, 0x20, 0x61, 0x20, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x20, 0x66,
	0x72, 0x6f, 0x6d, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x20,
	0x75, 0x73, 0x65, 0x72, 0x27, 0x73, 0x20, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x20, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x73, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x62, 0x01, 0x2a, 0x2a,
	0x17, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x2f, 0x7b, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x7d, 0x12, 0xb3, 0x01, 0x0a, 0x0f, 0x67, 0x65, 0x74,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x20, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x5b, 0x92, 0x41, 0x3a, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x47, 0x65,
	0x74, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x20, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x73, 0x2e, 0x1a, 0x1a, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x20, 0x61, 0x6c,
	0x6c, 0x20, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x20, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x62, 0x01, 0x2a, 0x12, 0x13, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2d, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0xe3,
	0x01, 0x0a, 0x17, 0x67, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x28, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x73, 0x92, 0x41, 0x4a, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x47, 0x65, 0x74, 0x20,
	0x61, 0x6c, 0x6c, 0x20, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x20, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x1a, 0x22, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x73, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x20,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x20, 0x62, 0x01, 0x2a, 0x12, 0x1b, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0xb6, 0x01, 0x0a, 0x10, 0x67, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x5b, 0x92, 0x41, 0x3e, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x12, 0x16,
	0x47, 0x65, 0x74, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x20, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x1a, 0x1b, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x20,
	0x61, 0x6c, 0x6c, 0x20, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x20, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x73, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x62, 0x01, 0x2a, 0x12, 0x0f, 0x2f, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0xa3, 0x01,
	0x0a, 0x0c, 0x67, 0x65, 0x74, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6d,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6d, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x54, 0x92,
	0x41, 0x34, 0x0a, 0x08, 0x53, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x11, 0x47, 0x65,
	0x74, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x72, 0x73, 0x1a,
	0x15, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x73, 0x65, 0x6d,
	0x65, 0x73, 0x74, 0x65, 0x72, 0x73, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x62, 0x01, 0x2a, 0x12,
	0x12, 0x2f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x2f, 0x73, 0x65, 0x6d, 0x65, 0x73, 0x74,
	0x65, 0x72, 0x73, 0x12, 0xa0, 0x01, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5a, 0x92, 0x41, 0x35, 0x0a,
	0x06, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x12, 0x47, 0x65, 0x74, 0x20, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x56, 0x4f, 0x44, 0x1a, 0x17, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x73, 0x20, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x66, 0x6f, 0x72, 0x20,
	0x56, 0x4f, 0x44, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x62, 0x01, 0x2a, 0x12, 0x17, 0x2f,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2f, 0x77, 0x2f, 0x76, 0x6f, 0x64, 0x2f, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0xb2, 0x01, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4e, 0x6f,
	0x77, 0x4c, 0x69, 0x76, 0x65, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x77, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x47, 0x65,
	0x74, 0x4e, 0x6f, 0x77, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x69, 0x92, 0x41, 0x43, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x19, 0x47,
	0x65, 0x74, 0x20, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x6c, 0x69,
	0x76, 0x65, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x1a, 0x1e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x73, 0x20, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x6c, 0x69, 0x76,
	0x65, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x62, 0x01,
	0x2a, 0x12, 0x18, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2f, 0x77, 0x2f, 0x6c, 0x69,
	0x76, 0x65, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0xc6, 0x01, 0x0a, 0x0c,
	0x67, 0x65, 0x74, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x73, 0x56, 0x4f, 0x44, 0x12, 0x1d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x68, 0x75, 0x6d, 0x62,
	0x73, 0x56, 0x4f, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x73,
	0x56, 0x4f, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x77, 0x92, 0x41, 0x44,
	0x0a, 0x06, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x14, 0x47, 0x65, 0x74, 0x20, 0x74, 0x68,
	0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x20, 0x6f, 0x66, 0x20, 0x56, 0x4f, 0x44, 0x1a, 0x24,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x20, 0x70, 0x61, 0x74, 0x68, 0x20, 0x6f, 0x66, 0x20,
	0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x20,
	0x56, 0x4f, 0x44, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x62, 0x01, 0x2a, 0x12, 0x25, 0x2f,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x2f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x73, 0x2f, 0x76,
	0x6f, 0x64, 0x2f, 0x7b, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x7d, 0x2f, 0x74, 0x68,
	0x75, 0x6d, 0x62, 0x73, 0x12, 0xd1, 0x01, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x54, 0x68, 0x75, 0x6d,
	0x62, 0x73, 0x4c, 0x69, 0x76, 0x65, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x73, 0x4c, 0x69, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x73, 0x4c, 0x69, 0x76, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7f, 0x92, 0x41, 0x52, 0x0a, 0x06, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x12, 0x1b, 0x47, 0x65, 0x74, 0x20, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e,
	0x61, 0x69, 0x6c, 0x20, 0x6f, 0x66, 0x20, 0x6c, 0x69, 0x76, 0x65, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x1a, 0x2b, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x20, 0x70, 0x61, 0x74, 0x68, 0x20,
	0x6f, 0x66, 0x20, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x20, 0x66, 0x6f, 0x72,
	0x20, 0x61, 0x20, 0x6c, 0x69, 0x76, 0x65, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x24, 0x62, 0x01, 0x2a, 0x12, 0x1f, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x73, 0x2f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x73, 0x2f, 0x6c, 0x69, 0x76, 0x65, 0x2f, 0x7b, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x7d, 0x42, 0x81, 0x02, 0x92, 0x41, 0xea, 0x01, 0x12,
	0xa6, 0x01, 0x0a, 0x0a, 0x67, 0x6f, 0x63, 0x61, 0x73, 0x74, 0x20, 0x41, 0x50, 0x49, 0x12, 0x19,
	0x54, 0x68, 0x65, 0x20, 0x73, 0x68, 0x69, 0x6e, 0x79, 0x20, 0x6e, 0x65, 0x77, 0x20, 0x67, 0x6f,
	0x63, 0x61, 0x73, 0x74, 0x20, 0x41, 0x50, 0x49, 0x21, 0x22, 0x3c, 0x0a, 0x17, 0x54, 0x55, 0x4d,
	0x2d, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x73, 0x20, 0x2d, 0x20, 0x67, 0x6f,
	0x63, 0x61, 0x73, 0x74, 0x12, 0x21, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x54, 0x55, 0x4d, 0x2d, 0x44, 0x65, 0x76,
	0x2f, 0x67, 0x6f, 0x63, 0x61, 0x73, 0x74, 0x2a, 0x3a, 0x0a, 0x03, 0x4d, 0x49, 0x54, 0x12, 0x33,
	0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x54, 0x55, 0x4d, 0x2d, 0x44, 0x65, 0x76, 0x2f, 0x67, 0x6f, 0x63, 0x61, 0x73,
	0x74, 0x2f, 0x62, 0x6c, 0x6f, 0x62, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x4c, 0x49, 0x43, 0x45,
	0x4e, 0x53, 0x45, 0x32, 0x03, 0x32, 0x2e, 0x30, 0x1a, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x68,
	0x6f, 0x73, 0x74, 0x3a, 0x38, 0x30, 0x38, 0x31, 0x22, 0x07, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x32, 0x2a, 0x02, 0x01, 0x02, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x11, 0x2e, 0x2f, 0x61, 0x70, 0x69,
	0x5f, 0x76, 0x32, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v2_proto_rawDescOnce sync.Once
	file_api_v2_proto_rawDescData = file_api_v2_proto_rawDesc
)

func file_api_v2_proto_rawDescGZIP() []byte {
	file_api_v2_proto_rawDescOnce.Do(func() {
		file_api_v2_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v2_proto_rawDescData)
	})
	return file_api_v2_proto_rawDescData
}

var file_api_v2_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_v2_proto_msgTypes = make([]protoimpl.MessageInfo, 46)
var file_api_v2_proto_goTypes = []interface{}{
	(UserSettingType)(0),                    // 0: protobuf.UserSettingType
	(*User)(nil),                            // 1: protobuf.User
	(*UserSetting)(nil),                     // 2: protobuf.UserSetting
	(*GetUserRequest)(nil),                  // 3: protobuf.GetUserRequest
	(*GetUserCoursesRequest)(nil),           // 4: protobuf.GetUserCoursesRequest
	(*GetUserPinnedRequest)(nil),            // 5: protobuf.GetUserPinnedRequest
	(*GetUserAdminRequest)(nil),             // 6: protobuf.GetUserAdminRequest
	(*GetUserSettingsRequest)(nil),          // 7: protobuf.GetUserSettingsRequest
	(*GetUserResponse)(nil),                 // 8: protobuf.GetUserResponse
	(*GetUserCoursesResponse)(nil),          // 9: protobuf.GetUserCoursesResponse
	(*GetUserPinnedResponse)(nil),           // 10: protobuf.GetUserPinnedResponse
	(*GetUserAdminResponse)(nil),            // 11: protobuf.GetUserAdminResponse
	(*GetUserSettingsResponse)(nil),         // 12: protobuf.GetUserSettingsResponse
	(*Bookmark)(nil),                        // 13: protobuf.Bookmark
	(*GetBookmarksRequest)(nil),             // 14: protobuf.GetBookmarksRequest
	(*PutBookmarkRequest)(nil),              // 15: protobuf.PutBookmarkRequest
	(*PatchBookmarkRequest)(nil),            // 16: protobuf.PatchBookmarkRequest
	(*DeleteBookmarkRequest)(nil),           // 17: protobuf.DeleteBookmarkRequest
	(*GetBookmarksResponse)(nil),            // 18: protobuf.GetBookmarksResponse
	(*PutBookmarkResponse)(nil),             // 19: protobuf.PutBookmarkResponse
	(*PatchBookmarkResponse)(nil),           // 20: protobuf.PatchBookmarkResponse
	(*DeleteBookmarkResponse)(nil),          // 21: protobuf.DeleteBookmarkResponse
	(*BannerAlert)(nil),                     // 22: protobuf.BannerAlert
	(*FeatureNotification)(nil),             // 23: protobuf.FeatureNotification
	(*GetBannerAlertsRequest)(nil),          // 24: protobuf.GetBannerAlertsRequest
	(*GetFeatureNotificationsRequest)(nil),  // 25: protobuf.GetFeatureNotificationsRequest
	(*GetBannerAlertsResponse)(nil),         // 26: protobuf.GetBannerAlertsResponse
	(*GetFeatureNotificationsResponse)(nil), // 27: protobuf.GetFeatureNotificationsResponse
	(*Course)(nil),                          // 28: protobuf.Course
	(*Semester)(nil),                        // 29: protobuf.Semester
	(*GetPublicCoursesRequest)(nil),         // 30: protobuf.GetPublicCoursesRequest
	(*GetSemestersRequest)(nil),             // 31: protobuf.GetSemestersRequest
	(*PostPinnedRequest)(nil),               // 32: protobuf.PostPinnedRequest
	(*DeletePinnedRequest)(nil),             // 33: protobuf.DeletePinnedRequest
	(*GetPublicCoursesResponse)(nil),        // 34: protobuf.GetPublicCoursesResponse
	(*GetSemestersResponse)(nil),            // 35: protobuf.GetSemestersResponse
	(*PostPinnedResponse)(nil),              // 36: protobuf.PostPinnedResponse
	(*DeletePinnedResponse)(nil),            // 37: protobuf.DeletePinnedResponse
	(*Stream)(nil),                          // 38: protobuf.Stream
	(*GetStreamRequest)(nil),                // 39: protobuf.GetStreamRequest
	(*GetNowLiveRequest)(nil),               // 40: protobuf.GetNowLiveRequest
	(*GetThumbsLiveRequest)(nil),            // 41: protobuf.GetThumbsLiveRequest
	(*GetThumbsVODRequest)(nil),             // 42: protobuf.GetThumbsVODRequest
	(*GetStreamResponse)(nil),               // 43: protobuf.GetStreamResponse
	(*GetNowLiveResponse)(nil),              // 44: protobuf.GetNowLiveResponse
	(*GetThumbsVODResponse)(nil),            // 45: protobuf.GetThumbsVODResponse
	(*GetThumbsLiveResponse)(nil),           // 46: protobuf.GetThumbsLiveResponse
	(*timestamppb.Timestamp)(nil),           // 47: google.protobuf.Timestamp
}
var file_api_v2_proto_depIdxs = []int32{
	28, // 0: protobuf.User.courses:type_name -> protobuf.Course
	28, // 1: protobuf.User.administeredCourses:type_name -> protobuf.Course
	28, // 2: protobuf.User.pinnedCourses:type_name -> protobuf.Course
	2,  // 3: protobuf.User.settings:type_name -> protobuf.UserSetting
	13, // 4: protobuf.User.bookmarks:type_name -> protobuf.Bookmark
	0,  // 5: protobuf.UserSetting.type:type_name -> protobuf.UserSettingType
	1,  // 6: protobuf.GetUserResponse.user:type_name -> protobuf.User
	28, // 7: protobuf.GetUserCoursesResponse.courses:type_name -> protobuf.Course
	28, // 8: protobuf.GetUserPinnedResponse.courses:type_name -> protobuf.Course
	28, // 9: protobuf.GetUserAdminResponse.courses:type_name -> protobuf.Course
	2,  // 10: protobuf.GetUserSettingsResponse.userSettings:type_name -> protobuf.UserSetting
	13, // 11: protobuf.GetBookmarksResponse.bookmarks:type_name -> protobuf.Bookmark
	13, // 12: protobuf.PutBookmarkResponse.bookmark:type_name -> protobuf.Bookmark
	13, // 13: protobuf.PatchBookmarkResponse.bookmark:type_name -> protobuf.Bookmark
	22, // 14: protobuf.GetBannerAlertsResponse.bannerAlerts:type_name -> protobuf.BannerAlert
	23, // 15: protobuf.GetFeatureNotificationsResponse.featureNotifications:type_name -> protobuf.FeatureNotification
	29, // 16: protobuf.Course.semester:type_name -> protobuf.Semester
	38, // 17: protobuf.Course.streams:type_name -> protobuf.Stream
	28, // 18: protobuf.GetPublicCoursesResponse.courses:type_name -> protobuf.Course
	29, // 19: protobuf.GetSemestersResponse.current:type_name -> protobuf.Semester
	29, // 20: protobuf.GetSemestersResponse.semesters:type_name -> protobuf.Semester
	47, // 21: protobuf.Stream.start:type_name -> google.protobuf.Timestamp
	47, // 22: protobuf.Stream.end:type_name -> google.protobuf.Timestamp
	47, // 23: protobuf.Stream.liveNowTimestamp:type_name -> google.protobuf.Timestamp
	38, // 24: protobuf.GetStreamResponse.stream:type_name -> protobuf.Stream
	38, // 25: protobuf.GetNowLiveResponse.stream:type_name -> protobuf.Stream
	3,  // 26: protobuf.API.getUser:input_type -> protobuf.GetUserRequest
	4,  // 27: protobuf.API.getUserCourses:input_type -> protobuf.GetUserCoursesRequest
	5,  // 28: protobuf.API.getUserPinned:input_type -> protobuf.GetUserPinnedRequest
	6,  // 29: protobuf.API.getUserAdminCourses:input_type -> protobuf.GetUserAdminRequest
	7,  // 30: protobuf.API.getUserSettings:input_type -> protobuf.GetUserSettingsRequest
	14, // 31: protobuf.API.getUserBookmarks:input_type -> protobuf.GetBookmarksRequest
	32, // 32: protobuf.API.postUserPinned:input_type -> protobuf.PostPinnedRequest
	15, // 33: protobuf.API.putUserBookmark:input_type -> protobuf.PutBookmarkRequest
	16, // 34: protobuf.API.patchUserBookmark:input_type -> protobuf.PatchBookmarkRequest
	17, // 35: protobuf.API.deleteUserBookmark:input_type -> protobuf.DeleteBookmarkRequest
	33, // 36: protobuf.API.deleteUserPinned:input_type -> protobuf.DeletePinnedRequest
	24, // 37: protobuf.API.getBannerAlerts:input_type -> protobuf.GetBannerAlertsRequest
	25, // 38: protobuf.API.getFeatureNotifications:input_type -> protobuf.GetFeatureNotificationsRequest
	30, // 39: protobuf.API.getPublicCourses:input_type -> protobuf.GetPublicCoursesRequest
	31, // 40: protobuf.API.getSemesters:input_type -> protobuf.GetSemestersRequest
	39, // 41: protobuf.API.GetStream:input_type -> protobuf.GetStreamRequest
	40, // 42: protobuf.API.GetNowLive:input_type -> protobuf.GetNowLiveRequest
	42, // 43: protobuf.API.getThumbsVOD:input_type -> protobuf.GetThumbsVODRequest
	41, // 44: protobuf.API.getThumbsLive:input_type -> protobuf.GetThumbsLiveRequest
	8,  // 45: protobuf.API.getUser:output_type -> protobuf.GetUserResponse
	9,  // 46: protobuf.API.getUserCourses:output_type -> protobuf.GetUserCoursesResponse
	10, // 47: protobuf.API.getUserPinned:output_type -> protobuf.GetUserPinnedResponse
	11, // 48: protobuf.API.getUserAdminCourses:output_type -> protobuf.GetUserAdminResponse
	12, // 49: protobuf.API.getUserSettings:output_type -> protobuf.GetUserSettingsResponse
	18, // 50: protobuf.API.getUserBookmarks:output_type -> protobuf.GetBookmarksResponse
	36, // 51: protobuf.API.postUserPinned:output_type -> protobuf.PostPinnedResponse
	19, // 52: protobuf.API.putUserBookmark:output_type -> protobuf.PutBookmarkResponse
	20, // 53: protobuf.API.patchUserBookmark:output_type -> protobuf.PatchBookmarkResponse
	21, // 54: protobuf.API.deleteUserBookmark:output_type -> protobuf.DeleteBookmarkResponse
	37, // 55: protobuf.API.deleteUserPinned:output_type -> protobuf.DeletePinnedResponse
	26, // 56: protobuf.API.getBannerAlerts:output_type -> protobuf.GetBannerAlertsResponse
	27, // 57: protobuf.API.getFeatureNotifications:output_type -> protobuf.GetFeatureNotificationsResponse
	34, // 58: protobuf.API.getPublicCourses:output_type -> protobuf.GetPublicCoursesResponse
	35, // 59: protobuf.API.getSemesters:output_type -> protobuf.GetSemestersResponse
	43, // 60: protobuf.API.GetStream:output_type -> protobuf.GetStreamResponse
	44, // 61: protobuf.API.GetNowLive:output_type -> protobuf.GetNowLiveResponse
	45, // 62: protobuf.API.getThumbsVOD:output_type -> protobuf.GetThumbsVODResponse
	46, // 63: protobuf.API.getThumbsLive:output_type -> protobuf.GetThumbsLiveResponse
	45, // [45:64] is the sub-list for method output_type
	26, // [26:45] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_api_v2_proto_init() }
func file_api_v2_proto_init() {
	if File_api_v2_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v2_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserCoursesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserPinnedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserCoursesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserPinnedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAdminResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bookmark); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBookmarksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutBookmarkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchBookmarkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBookmarkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBookmarksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutBookmarkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchBookmarkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBookmarkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BannerAlert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeatureNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBannerAlertsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeatureNotificationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBannerAlertsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFeatureNotificationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Course); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Semester); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPublicCoursesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSemestersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostPinnedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePinnedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPublicCoursesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSemestersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostPinnedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePinnedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNowLiveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetThumbsLiveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetThumbsVODRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNowLiveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetThumbsVODResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetThumbsLiveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v2_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   46,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v2_proto_goTypes,
		DependencyIndexes: file_api_v2_proto_depIdxs,
		EnumInfos:         file_api_v2_proto_enumTypes,
		MessageInfos:      file_api_v2_proto_msgTypes,
	}.Build()
	File_api_v2_proto = out.File
	file_api_v2_proto_rawDesc = nil
	file_api_v2_proto_goTypes = nil
	file_api_v2_proto_depIdxs = nil
}
